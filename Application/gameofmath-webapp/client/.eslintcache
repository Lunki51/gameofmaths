[{"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/index.js":"1","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/authentification.js":"2","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/quizModel.js":"3","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/Main_view.js":"4","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display.js":"5","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Map_display.js":"6","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Login_display.js":"7","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_components.js":"8","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/overlay_components/chapters_overlay.js":"9","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/mapRender/mapRenderer.js":"10","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/classModel.js":"11","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_teacher_components.js":"12","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/ClassManagement.js":"13","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/ClassDisplay.js":"14","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/StudentManagement.js":"15","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/studentModel.js":"16","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display_2.0.js":"17","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/default_display.js":"18","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/classes_display.js":"19","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/search_display.js":"20","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/student_display.js":"21","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/adding_display.js":"22","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/delete_display.js":"23","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/chapterModel.js":"24"},{"size":216,"mtime":1610027073798,"results":"25","hashOfConfig":"26"},{"size":820,"mtime":1610030506264,"results":"27","hashOfConfig":"26"},{"size":2026,"mtime":1610042307465,"results":"28","hashOfConfig":"26"},{"size":5846,"mtime":1614707020190,"results":"29","hashOfConfig":"26"},{"size":2020,"mtime":1614618941900,"results":"30","hashOfConfig":"26"},{"size":5605,"mtime":1610036170378,"results":"31","hashOfConfig":"26"},{"size":2221,"mtime":1611906401710,"results":"32","hashOfConfig":"26"},{"size":4850,"mtime":1614948716618,"results":"33","hashOfConfig":"26"},{"size":13228,"mtime":1610042338199,"results":"34","hashOfConfig":"26"},{"size":177,"mtime":1610027073798,"results":"35","hashOfConfig":"26"},{"size":539,"mtime":1615571651294,"results":"36","hashOfConfig":"26"},{"size":505,"mtime":1610629347226,"results":"37","hashOfConfig":"26"},{"size":7374,"mtime":1611151625229,"results":"38","hashOfConfig":"26"},{"size":6120,"mtime":1612360116861,"results":"39","hashOfConfig":"26"},{"size":2383,"mtime":1610632470403,"results":"40","hashOfConfig":"26"},{"size":773,"mtime":1616424144628,"results":"41","hashOfConfig":"26"},{"size":5941,"mtime":1615569239845,"results":"42","hashOfConfig":"26"},{"size":1621,"mtime":1615208813792,"results":"43","hashOfConfig":"26"},{"size":3253,"mtime":1615569101085,"results":"44","hashOfConfig":"26"},{"size":1545,"mtime":1614980785724,"results":"45","hashOfConfig":"26"},{"size":3389,"mtime":1615570713082,"results":"46","hashOfConfig":"26"},{"size":11506,"mtime":1616411774826,"results":"47","hashOfConfig":"26"},{"size":10428,"mtime":1616424249577,"results":"48","hashOfConfig":"26"},{"size":465,"mtime":1616409014670,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1g2g4d8",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"79"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/index.js",[],["112","113"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/authentification.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/quizModel.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/Main_view.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Map_display.js",["114"],"import React, { Component } from 'react';\nimport Axios from \"axios\";\nimport * as THREE from 'three'\n\n/**\n * @author quentin COSNIER\n * @author Antoine LE BORGNE\n *\n * render map on the screen\n */\nclass MapView extends Component{\n\n    _isMounted = false\n\n    componentDidMount() {\n        this._isMounted = true\n        document.title = \"Game Of Math\"\n\n        this.renderMap(null)\n    }\n\n\n    /**\n     * render a class's map\n     *\n     * @param displayClass the target class\n     */\n    renderMap = (displayClass) =>{\n\n        if(this.mount) {\n\n            Axios.get(\"/api/graphics/map\").then(r => {\n\n                const renderer = new THREE.WebGLRenderer();\n                renderer.setSize(window.innerWidth, window.innerHeight);\n                let camera = new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 0.1, 1000);\n                let scene = new THREE.Scene();\n                scene.background = new THREE.Color(\"#000000\")\n                let mousePressed = false;\n                let rotateX = 0, rotateY = 0;\n                let scrolled = 100;\n                let camDistance = 0;\n                var center = new THREE.Vector3(0, 0, 0)\n                //VARS\n\n                //INPUTS\n                renderer.domElement.addEventListener(\"mousedown\", function (event) {\n                    mousePressed = true;\n                    if (event.shiftKey) rayCasting((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1)\n                }, false)\n                renderer.domElement.addEventListener(\"mouseup\", function (event) {\n                    mousePressed = false;\n                }, false)\n                renderer.domElement.addEventListener(\"mousemove\", function (event) {\n                    if (mousePressed) {\n                        rotateX += event.movementX / 100;\n                        rotateY += event.movementY / 100;\n                    }\n                }, false)\n                document.addEventListener(\"wheel\", function (event) {\n                    scrolled -= event.deltaY\n                }, false)\n                //INPUTS\n\n                //METHODS\n\n                function rayCasting(mouseX, mouseY) {\n                    console.log(\"RayCasting\" + mouseX + \":\" + mouseY)\n                    let rayCaster = new THREE.Raycaster();\n                    rayCaster.setFromCamera(new THREE.Vector2(mouseX, mouseY), camera);\n\n                    let intersects = rayCaster.intersectObjects(scene.children);\n                    console.log(intersects)\n                    if (intersects[0]) {\n                        center = intersects[0].point\n                    }\n                }\n\n                //RENDERING METHOD\n                const animate = function () {\n                    requestAnimationFrame(animate);\n                    camDistance -= scrolled;\n                    camDistance = Math.max(20, camDistance)\n                    camDistance = Math.min(100, camDistance)\n                    camera.position.z = center.z - (camDistance * Math.cos(Math.PI / 4)) * Math.cos(rotateX)\n                    camera.position.x = center.x - (camDistance * Math.cos(Math.PI / 4)) * Math.sin(rotateX)\n                    camera.position.y = camDistance * Math.sin(Math.PI / 4) + 80\n                    camera.lookAt(center)\n                    scrolled = 0\n                    renderer.render(scene, camera);\n                }\n                //RENDERING METHOD\n\n                //DATA COMPUTATION\n                scene.clear();\n                let map = r.data\n                let triangles = map.vertices\n                for (let color of triangles) {\n                    let trianglesData = color[1]\n                    let trianglesColor = color[0]\n                    let geometry = new THREE.BufferGeometry()\n                    let pointsArray = new Float32Array(trianglesData.length * 3 * 3)\n                    for (let i = 0; i < trianglesData.length; i++) {\n                        for (let j = 0; j < trianglesData[i].length; j++) {\n                            pointsArray[i * 9 + j * 3] = trianglesData[i][j].x - map.sizeX / 2\n                            pointsArray[i * 9 + j * 3 + 1] = trianglesData[i][j].z\n                            pointsArray[i * 9 + j * 3 + 2] = trianglesData[i][j].y - map.sizeY / 2\n                        }\n                    }\n                    geometry.setAttribute('position', new THREE.BufferAttribute(pointsArray, 3));\n                    let material = new THREE.MeshBasicMaterial({color: trianglesColor, side: THREE.DoubleSide});\n                    let mesh = new THREE.Mesh(geometry, material)\n                    scene.add(mesh)\n                }\n                //DATA COMPUTATION\n\n                //ENVIRONMENT\n                const geometry = new THREE.PlaneGeometry(1000, 1000);\n                const material = new THREE.MeshBasicMaterial({color: 0x006994, side: THREE.DoubleSide});\n                geometry.rotateX(Math.PI / 2)\n                const plane = new THREE.Mesh(geometry, material);\n                plane.position.y = 79\n                scene.add(plane);\n                scene.fog = new THREE.FogExp2(\"#87ceeb\", 0.005)\n                scene.background = new THREE.Color(0x87ceeb)\n                //ENVIRONMENT\n\n                this.mount.appendChild(renderer.domElement);\n\n                //RENDERING\n                animate();\n            })\n\n\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false\n    }\n\n    render() {\n\n        return <div ref={ref => (this.mount = ref)} />\n\n    }\n\n}\n\nexport default MapView","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Login_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_components.js",["115","116","117","118","119"],"import React, { Component } from 'react';\nimport \"../../styles/global_style.css\";\nimport {getUsername} from \"../../../../model/authentification\";\n\n\n//IMAGES\n\nconst image_icon_user =  \"https://img.icons8.com/material-outlined/35/eff0cf/user--v1.png\"\nconst image_icon_logout =  \"https://img.icons8.com/ios-filled/35/eff0cf/login-rounded-right.png\"\nconst image_icon_quiz =  \"https://img.icons8.com/ios/35/eff0cf/help.png\"\n\n/**\n * @author Antoine LE BORGNE\n *\n * create a main container component\n */\nclass ContainerTitle extends Component{\n\n    constructor(props){\n        super(props)\n        this.props = props;\n    }\n\n\n    render(){\n\n        return<>\n        \n            <div className={this.props.className}>\n                <img className=\"container-title\" src={window.location.origin + \"/logo/game_of_math_logo.png\"}/>\n                {this.props.children}\n            </div>\n        \n        </>\n\n    }\n\n\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * create a text field component\n */\nclass TextField extends Component {\n\n\n    constructor(props){\n        super(props)\n        this.props = props;\n    }\n\n    render(){\n        return <>\n            <input id={this.props.id} onChange={this.props.onChange} value={this.props.value} className=\"textField\" placeholder={this.props.hint} type={this.props.type}/>\n        </>\n    }\n\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * create a simple Button component\n */\nclass Button extends Component{\n\n\n    constructor(props){\n        super(props)\n        this.props = props;\n    }\n\n    render(){\n        return <>\n             <input className=\"button\" type=\"submit\" value={this.props.value} onClick={this.props.onClick}/> \n        </>\n    }\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * create the navigation bar\n */\nclass NavigationBar extends Component{\n\n\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n        this.props = props\n\n        this.state = {\n            username : \"\"\n        }\n\n    }\n\n\n    componentDidMount() {\n\n        this._isMounted = true;\n\n            //get the current username\n            getUsername().then((response) => {\n\n                    if(this._isMounted) {\n\n                        this.setState({\n                            username: response.data.username,\n                        })\n\n                    }\n                })\n\n    }\n\n\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n\n    render() {\n        return <NavBar>\n                    <NavElement icon={image_icon_quiz} id=\"quiz-btn\"  className=\"navElem_left\"   onClick={this.props.quiz} value=\"quiz\"/>\n                    <img src={window.location.origin + '/logo/banner_gom.png'} className=\"navElem_center\"/>\n                    <NavElement icon={image_icon_user}  className=\"navElem_right\"  onClick={this.props.profile} value={this.state.username}/>\n                    <NavElement icon={image_icon_logout}  className=\"navElem_right\"  onClick={this.props.logout} value=\"deconnexion\"/>\n                </NavBar>\n    }\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * handle and display navbar\n */\nexport class NavBar extends Component{\n\n    constructor(props){\n        super(props);\n        this.props = props;\n    }\n\n\n    render(){\n        return <>\n            <ul className=\"navbar_container\">\n                {this.props.children}\n            </ul>\n        </>\n    }\n\n}\n\n/**\n * @author Antoine LE BORGNE\n *\n * manage navigation element\n */\nexport class NavElement extends Component{\n\n\n    render() {\n        return <>\n            <li className={this.props.className}>\n\n                <img id={this.props.id} className=\"navbar_link_icon\" onClick={this.props.onClick} src={this.props.icon}/>\n                <a className=\"navbar_link\" onClick={this.props.onClick}>\n                    {this.props.value}\n                </a>\n            </li>\n        </>\n    }\n\n\n}\n\n\nexport class Warning extends Component{\n\n\n    render() {\n\n        return <div className=\"alert_container\">\n            <text className=\"warning_msg\">{this.props.msg}</text>\n\n            <div className=\"warning_btn_section\">\n            {(this.props.cancel) ?\n                <>\n                    <button className=\"warning_ok_btn\"  onClick={this.props.okClick}>Ok</button>\n                    <button className=\"warning_cancel_btn\" onClick={this.props.cancel}>Annuler</button>\n                </>\n                :\n                <button className=\"warning_ok_btn\" onClick={this.props.okClick}>OK</button>\n            }\n            </div>\n        </div>\n\n\n    }\n\n}\n\n\n\nexport class MobileHeader extends Component{\n\n    render() {\n\n        return <div className=\"mobile-header-container\">\n\n            <img src={window.location.origin + '/logo/game_of_math_logo.png'} className=\"mobile-header-title\"/>\n\n        </div>\n    }\n\n}\n\n\n\n//exportation\nexport {ContainerTitle, TextField, Button,NavigationBar};","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/overlay_components/chapters_overlay.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/mapRender/mapRenderer.js",[],["120","121"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/classModel.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_teacher_components.js",["122","123"],"import React,{Component} from \"react\";\nimport '../../styles/teacher_style.css'\nimport {NavBar} from \"./global_components\";\n\nexport class NavigationBar extends Component{\n\n\n    render() {\n\n        return <div className=\"navigation-teacher-container\">\n            <img src={window.location.origin + '/logo/banner_gom.png'} className=\"navigation-teacher-logo\"/>\n            <button className=\"navigation-teacher-logout-btn\" onClick={this.props.handleLogout} >Déconnexion</button>\n        </div>\n\n\n\n    }\n\n}\n",["124","125"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/ClassManagement.js",["126"],"import React, {Component} from \"react\";\nimport {\n    createClass,\n    deleteClass,\n    getAllClasses,\n    updateTheClass,\n} from \"../../../../../model/classModel\";\nimport '../../../styles/teacher_style.css';\n\nexport class ClassManagement extends Component{\n\n    _isMount = false\n\n    constructor() {\n        super();\n\n        this.state =  {\n\n            classes:[],\n            classesList : [],\n            searchValue:\"\",\n            editComponent:null\n\n\n        }\n    }\n\n\n    componentDidMount() {\n        this._isMount = true\n\n        if(this._isMount)\n        this.updateAllClasses()\n\n\n\n    }\n\n    updateAllClasses = ()=>{\n       getAllClasses().then((response) => {\n\n                console.log(response)\n                this.setState({\n                    classes: response.data.classes,\n                })\n                this.render()\n\n            })\n\n    }\n\n    componentWillUnmount() {\n        this._isMount = false\n    }\n\n    displayWaring = () =>{\n\n    }\n\n    //HANDLER\n    handleDeleteClass   = (classID, name) => {\n\n\n\n        this.props.displayWarning(\"êtes vous sûr de vouloir supprimer la classe \"+name ,() => {\n            deleteClass(classID).then(res => {\n                console.log(res)\n                this.props.closeWarning()\n                this.updateAllClasses()\n            })\n\n        })\n        //TODO update the list\n    }\n\n    handleCreateClass = (className, classGrade) => {\n\n\n        createClass(className,classGrade).then((res) => {\n            console.log(res)\n            //this.updateAllClasses()\n        })\n\n    }\n\n    handleEditClass = (id,className, classGrade) => {\n\n\n        updateTheClass(id, className, classGrade).then((res) =>{\n\n            this.updateClasses()\n\n        })\n\n\n    }\n\n    handleSearchInputOnChange = (event) => {\n\n        this.setState({\n            searchValue : event.target.value\n        })\n\n    }\n\n    handleCloseForm = () => {\n        this.props.closeForm()\n        //this.updateAllClasses()\n    }\n\n\n    displayForm = (id,name, grade) =>{\n\n\n        if(id && name && grade){\n            this.props.displayForm(<CreateForm type=\"edit\" edit={this.handleEditClass} id={id} name={name} grade={grade} closeForm={this.handleCloseForm}/>)\n        }else{\n            this.props.displayForm(<CreateForm type=\"create\" updateClasses={this.updateAllClasses} create={this.handleCreateClass} closeForm={this.handleCloseForm}/>)\n        }\n\n\n    }\n\n\n    render() {\n\n        return <>\n\n            <div className=\"classManagement-container\">\n\n            <button onClick={this.displayForm} className=\"add-class-button\">Ajouter</button>\n\n            <input  className=\"class-search-input\" onChange={this.handleSearchInputOnChange} placeholder=\"Rechercher...\" value={this.state.searchValue} type=\"text\" />\n\n\n            <div className=\"classManagement-scroll\">\n\n                {this.state.classes.map((theClass, index) => {\n\n                if(theClass.name.includes(this.state.searchValue) || this.state.searchValue=== \"\") {\n\n                    return <Class\n                        theClass={theClass}\n                        edit={this.displayForm}\n                        open={this.props.openClass}\n                        key={index}\n                        deleteClass={this.handleDeleteClass}\n                    />\n                }\n\n            })}\n\n            </div>\n\n        </div>\n            {this.state.editComponent}\n        </>\n\n    }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n////////////////////////////////// CLASS ////////////////////////////////////////////////////////\nclass Class extends Component{\n\n\n    constructor() {\n        super();\n\n        this.state = {\n            theClass : {\n                classID:0,\n                name:\"\",\n                grade: \"\",\n            },\n            modificationIcon : window.location.origin + \"/icons/edit-icon.png\",\n            gotoIcon : window.location.origin + \"/icons/goto-icon.png\",\n        }\n\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            theClass : this.props.theClass,\n        })\n    }\n\n    handleOpen = () => {\n        this.props.open(this.state.theClass)\n    }\n\n    handleEdit = () => {\n        this.props.edit(this.state.theClass.classID,this.state.theClass.name, this.state.theClass.grade)\n    }\n\n    handleDelete = () =>{\n        this.props.deleteClass(this.state.theClass.classID, this.state.theClass.name)\n    }\n\n\n    render() {\n\n        return <>\n            <div  className=\"class-container\">\n\n                <div className=\"class-control-section\">\n                    <img  className=\"class-delete-btn\" src={window.location.origin + \"/icons/delete-icon.png\"} alt=\"delete\"onClick={this.handleDelete}/>\n                    <img  className=\"class-modify-btn\" src={window.location.origin + \"/icons/edit-icon.png\"} alt=\"modify\" onClick={this.handleEdit}/>\n                    <img onClick={this.handleOpen} className=\"class-goto-btn\" alt=\"go To\" src={window.location.origin + \"/icons/goto-icon.png\"}/>\n                </div>\n\n                <label className=\"class-name-low\">{this.state.theClass.name}</label>\n                <label className=\"class-grade-low\">{this.state.theClass.grade}</label>\n\n            </div>\n        </>\n\n    }\n\n}\n\n\n\n\nclass CreateForm extends Component{\n\n\n    constructor() {\n        super();\n\n        this.state = {\n            id:0,\n            name :\"\",\n            grade:\"\"\n        }\n    }\n\n    componentDidMount() {\n\n        if(this.props.name && this.props.grade){\n            this.setState({\n                id:this.props.id,\n                name:this.props.name,\n                grade:this.props.grade\n            })\n        }\n\n\n    }\n\n    handleValidate = (event) => {\n\n\n\n        if(this.props.type === \"create\"){\n\n\n            if(this.state.name === \"\" || this.state.name === \"\"){\n                alert(\"tout les champs doivent être remplis\")\n                //TODO error style\n            }else{\n\n\n                this.props.create(this.state.name, this.state.grade)\n                //this.props.updateClasses()\n                this.props.closeForm()\n\n\n\n            }\n\n        }else{\n            if((this.state.name !== this.props.name) || (this.state.grade !== this.props.grade)) {\n                this.props.edit(this.state.id, this.state.name, this.state.grade)\n\n            }\n            this.props.closeForm()\n        }\n\n\n\n        event.preventDefault();\n\n\n\n    }\n\n    handleNameChange = (event) => {\n        this.setState({\n            name : event.target.value\n        })\n    }\n\n    handleGradeChange = (event) => {\n        this.setState({\n            grade : event.target.value\n        })\n    }\n\n\n    render() {\n       return <div className=\"class-creation-form-container\">\n            <form onSubmit={this.handleValidate}>\n                <input className=\"edit-class-name-input\" onChange={this.handleNameChange} value={this.state.name} type=\"text\" placeholder=\"Nom\"/>\n                <input className=\"edit-class-grade-input\" onChange={this.handleGradeChange} value={this.state.grade} type=\"text\" placeholder=\"niveau\"/>\n                <div className=\"class-creation-button-section\">\n                    <input className=\"edit-class-cancel-btn\"   onClick={this.props.closeForm}   type=\"button\" value=\"annuler\"/>\n                    <input className=\"edit-class-validate-btn\"  type=\"submit\" value=\"valider\"/>\n                </div>\n            </form>\n        </div>\n    }\n\n\n}","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/ClassDisplay.js",["127","128","129"],"import React, {Component} from \"react\";\nimport '../../../styles/teacher_style.css';\nimport {StudentManagement} from \"./StudentManagement\";\nimport Axios from \"axios\";\nimport * as THREE from \"three\";\n\nexport class ClassDisplay extends Component{\n\n\n\n    constructor() {\n        super();\n\n\n    }\n\n\n    _isMounted = false\n\n    componentDidMount() {\n        this._isMounted = true\n        document.title = \"Game Of Math\"\n\n        this.renderMap(null)\n    }\n\n\n    /**\n     * render a class's map\n     *\n     * @param displayClass the target class\n     */\n    renderMap = (displayClass) =>{\n\n        if(this.mount) {\n\n            Axios.get(\"/api/graphics/map\").then(r => {\n\n                const renderer = new THREE.WebGLRenderer();\n                renderer.setSize(document.getElementById(\"map\").innerWidth,document.getElementById(\"map\").innerHeight);\n                let camera = new THREE.PerspectiveCamera(80, document.getElementById(\"map\").innerWidth / document.getElementById(\"map\").innerHeight, 0.1, 1000);\n                let scene = new THREE.Scene();\n                scene.background = new THREE.Color(\"#000000\")\n                let mousePressed = false;\n                let rotateX = 0, rotateY = 0;\n                let scrolled = 100;\n                let camDistance = 0;\n                var center = new THREE.Vector3(0, 0, 0)\n                //VARS\n\n                //INPUTS\n                renderer.domElement.addEventListener(\"mousedown\", function (event) {\n                    mousePressed = true;\n                    if (event.shiftKey) rayCasting((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1)\n                }, false)\n                renderer.domElement.addEventListener(\"mouseup\", function (event) {\n                    mousePressed = false;\n                }, false)\n                renderer.domElement.addEventListener(\"mousemove\", function (event) {\n                    if (mousePressed) {\n                        rotateX += event.movementX / 100;\n                        rotateY += event.movementY / 100;\n                    }\n                }, false)\n                document.addEventListener(\"wheel\", function (event) {\n                    scrolled -= event.deltaY\n                }, false)\n                //INPUTS\n\n                //METHODS\n\n                function rayCasting(mouseX, mouseY) {\n                    console.log(\"RayCasting\" + mouseX + \":\" + mouseY)\n                    let rayCaster = new THREE.Raycaster();\n                    rayCaster.setFromCamera(new THREE.Vector2(mouseX, mouseY), camera);\n\n                    let intersects = rayCaster.intersectObjects(scene.children);\n                    console.log(intersects)\n                    if (intersects[0]) {\n                        center = intersects[0].point\n                    }\n                }\n\n                //RENDERING METHOD\n                const animate = function () {\n                    requestAnimationFrame(animate);\n                    camDistance -= scrolled;\n                    camDistance = Math.max(20, camDistance)\n                    camDistance = Math.min(100, camDistance)\n                    camera.position.z = center.z - (camDistance * Math.cos(Math.PI / 4)) * Math.cos(rotateX)\n                    camera.position.x = center.x - (camDistance * Math.cos(Math.PI / 4)) * Math.sin(rotateX)\n                    camera.position.y = camDistance * Math.sin(Math.PI / 4) + 80\n                    camera.lookAt(center)\n                    scrolled = 0\n                    renderer.render(scene, camera);\n                }\n                //RENDERING METHOD\n\n                //DATA COMPUTATION\n                scene.clear();\n                let map = r.data\n                let triangles = map.vertices\n                for (let color of triangles) {\n                    let trianglesData = color[1]\n                    let trianglesColor = color[0]\n                    let geometry = new THREE.BufferGeometry()\n                    let pointsArray = new Float32Array(trianglesData.length * 3 * 3)\n                    for (let i = 0; i < trianglesData.length; i++) {\n                        for (let j = 0; j < trianglesData[i].length; j++) {\n                            pointsArray[i * 9 + j * 3] = trianglesData[i][j].x - map.sizeX / 2\n                            pointsArray[i * 9 + j * 3 + 1] = trianglesData[i][j].z\n                            pointsArray[i * 9 + j * 3 + 2] = trianglesData[i][j].y - map.sizeY / 2\n                        }\n                    }\n                    geometry.setAttribute('position', new THREE.BufferAttribute(pointsArray, 3));\n                    let material = new THREE.MeshBasicMaterial({color: trianglesColor, side: THREE.DoubleSide});\n                    let mesh = new THREE.Mesh(geometry, material)\n                    scene.add(mesh)\n                }\n                //DATA COMPUTATION\n\n                //ENVIRONMENT\n                const geometry = new THREE.PlaneGeometry(1000, 1000);\n                const material = new THREE.MeshBasicMaterial({color: 0x006994, side: THREE.DoubleSide});\n                geometry.rotateX(Math.PI / 2)\n                const plane = new THREE.Mesh(geometry, material);\n                plane.position.y = 79\n                scene.add(plane);\n                scene.fog = new THREE.FogExp2(\"#87ceeb\", 0.005)\n                scene.background = new THREE.Color(0x87ceeb)\n                //ENVIRONMENT\n\n                this.mount.appendChild(renderer.domElement);\n\n                //RENDERING\n                animate();\n            })\n\n\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false\n    }\n\n\n\n    render() {\n\n        return <div className=\"class-data-container\">\n            <label className=\"class-title-data\">{this.props.theClass.name}</label>\n            <img onClick={this.props.dispose} src={window.location.origin + \"/icons/delete-icon.png\"} className=\"class-close-btn\"/>\n            <div id=\"map\" className=\"class-map\" ref={ref => (this.mount = ref)} />\n            <StudentManagement theClass={this.props.theClass}/>\n        </div>\n\n\n    }\n\n\n}",["130","131"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/StudentManagement.js",["132","133"],"import React, {Component} from \"react\";\nimport '../../../styles/teacher_style.css';\nimport {getAllStudents} from \"../../../../../model/studentModel\";\nexport class StudentManagement extends Component{\n\n    constructor() {\n        super();\n\n        this.state = {\n\n            studentListData:[],\n            studentListObject:[],\n            searchValue : \"\",\n\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.updateLists()\n\n    }\n\n    updateLists = () => {\n\n\n        getAllStudents(this.props.theClass.classID).then((res) => {\n\n            console.log(res)\n\n            this.setState({\n                studentListData : res.data.students\n            })\n\n\n            this.displayStudent()\n        })\n\n\n    }\n\n\n    displayStudent = () => {\n\n        let items = []\n\n        this.state.studentListData.map((student, index) => {\n\n            if(this.passFilter(student,this.state.searchValue))\n            items.push(\n                <StudentInfo theStudent={student} key={index}/>\n            )\n\n        })\n\n        this.setState({\n            studentListData:items\n        })\n\n\n    }\n\n    passFilter = (theStudent, filter) => {\n\n        return (\n            filter === \"\" ||\n            theStudent.lastname.includes(filter) ||\n            theStudent.firstname.includes(filter) ||\n            theStudent.login.includes(filter)\n        )\n\n    }\n\n    handleSubmit = () => {\n\n\n\n    }\n\n    handleSearch = (event) => {\n        this.setState({\n            searchValue: event.target.value\n        })\n    }\n\n    render() {\n\n\n        return <div className=\"student-list-container\">\n                <button onClick={null} className=\"add-class-button\">Ajouter</button>\n                <input value={this.state.searchValue} placeholder=\"rechercher...\" onChange={this.handleSearch} className=\"class-search-input\"/>\n                <div className=\"student-list\">\n                    {this.state.studentListObject}\n                </div>\n        </div>\n\n\n    }\n}\n\nclass StudentInfo extends Component{\n\n\n    render() {\n\n\n        return <div className=\"student-info-container\">\n            <label className=\"student-name-lower\">{this.props.theStudent.firstname}  {this.props.theStudent.lastname}</label>\n        </div>\n\n\n    }\n}\n\n\n\n\n\nclass EditStudent extends Component{\n\n\n    render() {\n\n\n        return <div>\n            <form onSubmit={null}>\n\n            </form>\n        </div>\n\n\n\n    }\n\n\n}","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/studentModel.js",["134"],"import Axios from \"axios\";\nimport {getAllClasses} from \"./classModel\";\n\n/**\n * get all the student of a class\n *\n * @return {Promise<AxiosResponse<any>>}\n */\nexport function getAllStudents(id){\n\n    return Axios.post('/api/classManagement/getStudents', {id})\n\n\n}\n\nexport function getAllTheStudents(){\n\n    return Axios.post('/api/classManagement/getAllStudents' )\n\n\n}\n\nexport function deleteTheStudents(studentId,classId){\n\n    return Axios.post('/api/classManagement/deleteStudent', {studentId:studentId, classId:classId} )\n\n\n}\n\n/**\n * create a student\n *\n * @returns {Promise<AxiosResponse<any>>}\n */\nexport function createStudent(classId, login, lastname, firstname ){\n    return  Axios.post('/api/classManagement/createStudent', {classId, login, lastname, firstname})\n}","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display_2.0.js",["135","136"],"import {Component} from \"react\";\nimport '../styles/teacher_style20.css';\nimport '../styles/global_variables.css';\nimport {DefaultDisplay} from \"./components/teacher_components/default_display\";\nimport {ClassesDisplay} from \"./components/teacher_components/classes_display\";\nimport {SearchDisplay} from \"./components/teacher_components/search_display\";\nimport {StudentDisplay} from \"./components/teacher_components/student_display\";\nimport {AddingDisplay} from \"./components/teacher_components/adding_display\";\nimport {DeleteDisplay} from \"./components/teacher_components/delete_display\";\n\n\nexport class TeacherDisplay20 extends Component{\n\n\n    constructor() {\n        super();\n\n        document.title = \"Dashboard | Game Of Math\"\n\n        this.state = {\n            currentDisplay : <DefaultDisplay/>,\n            hoverElement: null,\n            msgElement: null,\n        }\n    }\n\n\n    ////////////////| TEACHER ROUTER |//////////////\n\n    handleGotoDefault = () => {\n        this.setState({currentDisplay: <DefaultDisplay/> })\n    }\n\n    handleGotoClasses = () =>{\n        this.setState({currentDisplay: <ClassesDisplay/>})\n    }\n\n    handleGotoStudents = () => {\n        this.setState({currentDisplay: <StudentDisplay/>})\n    }\n    handleGotoAdding = () => {\n        this.setState({currentDisplay: <AddingDisplay redirect={this.handleRedirectTo}  openPopup={this.handleCreatePopup} closePopup={this.handleDismissPopup}/>})\n    }\n\n    handleGotoDelete = () => {\n        this.setState({currentDisplay: <DeleteDisplay redirect={this.handleRedirectTo} openPopup={this.handleCreatePopup} closePopup={this.handleDismissPopup}/>})\n    }\n\n    handleRedirectTo(goalElement){\n        this.setState({currentDisplay: goalElement})\n    }\n\n    ////////////////////////////////////////////////\n\n    handleOpenSearch = () => {\n        this.setState({hoverElement: <SearchDisplay dismiss={this.handleDismissHoverElement}/>})\n    }\n\n    handleDismissHoverElement = () => {\n        this.setState({hoverElement:null})\n    }\n\n\n    handleCreatePopup = (PopupMessageObject) => {\n        this.setState({\n            msgElement: PopupMessageObject\n        })\n    }\n\n    handleDismissPopup = () => {\n        this.setState({msgElement:null})\n    }\n\n    render() {\n        return <div className=\"background\">\n\n            {/*///////////////////| DESKTOP VIEW |////////////////////*/}\n            <div className=\"teacher-logo-container\">\n                <img className=\"teacher-GOM-logo\" src={window.location.origin + \"/logo/game_of_math_logo.png\"}/>\n            </div>\n\n\n\n\n            <nav className=\"teacher-nav-container\">\n\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/dashboard.png\" title=\"Dashboard\" onClick={this.handleGotoDefault}/>\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/dotty/55/ffffff/class.png\" title=\"classes\" onClick={this.handleGotoClasses}/>\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/student-male--v1.png\" title=\"élèves\" onClick={this.handleGotoStudents}/>\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/question-mark--v1.png\" title=\"questions\"/>\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/add-column.png\" title=\"ajouter\" onClick={this.handleGotoAdding}/>\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/add-trash.png\" title=\"supprimer\" onClick={this.handleGotoDelete}/>\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/edit--v1.png\" title=\"editer\"/>\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/search--v1.png\" title=\"rechercher\" onClick={this.handleOpenSearch}/>\n\n                <NavElement typeClass=\"teacher-nav-element-stack-bottom\" iconURL=\"https://img.icons8.com/fluent-systems-regular/55/ffffff/settings.png\" title=\"Paramètres\"/>\n                <NavElement typeClass=\"teacher-nav-element-stack-bottom\" iconURL=\"https://img.icons8.com/fluent-systems-regular/55/ffffff/logout-rounded-left.png\" title=\"Déconnexion\" onClick={this.props.logout}/>\n\n\n            </nav>\n\n\n            {/*///////////////////| MOBILE VIEW |////////////////////*/}\n\n\n\n\n\n            {/*///////////////////////| GLOBAL VIEW |//////////////////////*/}\n            {this.state.currentDisplay}\n            {this.state.hoverElement}\n\n        </div>\n\n    }\n\n\n}\n\n\n\nclass NavElement extends Component{\n\n    render() {\n\n        return <div onClick={this.props.onClick} className={this.props.typeClass} >\n\n            <img className=\"teacher-nav-element-icon\" src={this.props.iconURL}/>\n            <h3 className=\"teacher-nav-element-title\" >{this.props.title}</h3>\n\n        </div>\n\n    }\n\n}\n\n\nexport class PopupMessage extends Component{\n\n    render() {\n\n        return <div className=\"dim-background\">\n                    <div className=\"teacher-popup-message-container\">\n                        <div className=\"teacher-popup-message-limit\">\n                            <p>\n                                {this.props.message}\n                            </p>\n                        </div>\n\n                        <div className=\"teacher-popup-message-btn-section\">\n                            <button className=\"teacher-popup-message-btn-valid\" onClick={this.props.validateCallback}>{this.props.validText}</button>\n\n                            {(this.props.cancelText)?<button className=\"teacher-popup-message-btn-cancel\" onClick={this.props.cancelCallback}>{this.props.cancelText}</button>:\n                            null}\n                        </div>\n\n                    </div>\n                </div>\n    }\n}","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/default_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/classes_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/search_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/student_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/adding_display.js",["137","138","139"],"import {Component} from \"react\";\nimport {createClass, getAllClasses} from \"../../../../../model/classModel\";\nimport {createStudent, getAllTheStudents} from \"../../../../../model/studentModel\";\nimport {createChapter} from \"../../../../../model/chapterModel\";\nimport {PopupMessage} from \"../../teacher_display_2.0\";\nimport {StudentDisplay} from \"./student_display\";\n\nexport class AddingDisplay extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            currentStepScreen: null\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            currentStepScreen: <AddSelectStep redirect={this.props.redirect} openPopup={this.handleOpenPopup}\n                                              previous={this.handlePrevious} next={this.handleNext}/>\n        })\n    }\n\n    handleOpenPopup = (Object) => {\n        this.props.openPopup(Object)\n    }\n\n    handleNext = (nextStepDOMObject) => {\n        this.setState({\n            currentStepScreen: nextStepDOMObject\n        })\n    }\n\n    handlePrevious = (previousDomObject) => {\n        this.setState({\n            currentStepScreen: previousDomObject\n        })\n    }\n\n\n    render() {\n\n        return <div className=\"teacher-default-dashboard-container\">\n\n            <div className=\"teacher-adding-step-container\">\n                {this.state.currentStepScreen}\n            </div>\n\n\n        </div>\n    }\n\n}\n\n/////////////////////////| SELECTION STEP |///////////////////////\n\nclass AddSelectStep extends Component {\n\n    // final variables\n    STUDENT_TEXT = \"Un élève\"\n    CLASS_TEXT = \"Une classe\"\n    CHAPTER_TEXT = \"Un Chapitre\"\n    QUESTION_TEXT = \"Une Question\"\n\n    constructor() {\n        super();\n\n        this.state = {\n            currentChoice: \"\",\n            currentChoiceDOM: null,\n        }\n    }\n\n\n    handleConfirmChoice = () => {\n\n        switch (this.state.currentChoice) {\n            case this.STUDENT_TEXT:\n\n                this.props.next(<AddStudentStep redirect={this.props.redirect} openPopup={this.props.openPopup}\n                                                closePopup={this.props.closePopup} next={this.props.next}\n                                                previous={this.props.previous}/>)\n\n                break\n            case this.CLASS_TEXT:\n\n                this.props.next(<AddClassStep redirect={this.props.redirect} openPopup={this.props.openPopup}\n                                              closePopup={this.props.closePopup} next={this.props.next}\n                                              previous={this.props.previous}/>)\n                break\n            case this.CHAPTER_TEXT:\n\n                this.props.next(<AddChapterStep redirect={this.props.redirect} openPopup={this.props.openPopup}\n                                                closePopup={this.props.closePopup} next={this.props.next}\n                                                previous={this.props.previous}/>)\n                break\n            case this.QUESTION_TEXT:\n\n\n                break\n            default:\n\n                this.props.openPopup(<PopupMessage\n                    message=\"Auccune selection\"\n                    validText=\"OK\"\n                    validateCallback={() => {\n                        this.props.closePopup()\n                    }\n                    }\n\n                />)\n\n                break\n        }\n\n    }\n\n    handleSelectChoice = (event, text) => {\n\n        if (!this.state.currentChoiceDOM) {\n            event.nativeEvent.explicitOriginalTarget.style.backgroundColor = \"var(--secondary_color)\"\n\n            this.setState({\n                currentChoiceDOM: event.nativeEvent.explicitOriginalTarget,\n                currentChoice: text\n            })\n        } else {\n            this.state.currentChoiceDOM.style.backgroundColor = \"var(--primary_color)\"\n            event.nativeEvent.explicitOriginalTarget.style.backgroundColor = \"var(--secondary_color)\"\n\n            this.setState({\n                currentChoiceDOM: event.nativeEvent.explicitOriginalTarget,\n                currentChoice: text\n            })\n        }\n\n    }\n\n\n    render() {\n        return <div className=\"teacher-selection-container\">\n\n            <h1 className=\"teacher-add-choice-title\">Ajouter</h1>\n\n            <div className=\"teacher-selection-option-list\">\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.STUDENT_TEXT}/>\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.CLASS_TEXT}/>\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.CHAPTER_TEXT}/>\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.QUESTION_TEXT}/>\n\n            </div>\n\n            <button onClick={this.handleConfirmChoice} className=\"teacher-next-btn\">Suivant</button>\n        </div>\n    }\n\n\n}\n\nclass SelectionChoice extends Component {\n\n\n    handleClick = (event) => {\n        this.props.onClick(event, this.props.title)\n    }\n\n\n    render() {\n        return <div onClick={this.handleClick} className=\"teacher-selection-choice-container\">\n            <h1 className=\"teacher-selection-choice-text\">{this.props.title}</h1>\n        </div>\n    }\n\n\n}\n\n\n////////////////////////| ADDING STUDENT |//////////////////////////\n\n\nclass AddStudentStep extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            classesList: []\n        }\n    }\n\n    componentDidMount() {\n        this.getClasses()\n    }\n\n    getClasses = () => {\n        getAllClasses().then((response) => {\n\n            this.setState({\n                classesList: response.data.classes\n            })\n\n        })\n    }\n\n    handleValidate = (event) => {\n\n        let valid = true;\n        let selectedClass = document.getElementById(\"selected-class\").value\n        let login = document.getElementById(\"select-login\").value\n        let name = document.getElementById(\"select-name\").value\n        let firstname = document.getElementById(\"select-firstname\").value\n\n        if (selectedClass === \"empty\") {\n            valid = false\n            //TODO custom message error\n            alert(\"Aucunne classe selectionné\")\n        }\n\n        if (login.length < 4) {\n            valid = false\n            //TODO custom message error\n            alert(\"Login - taille minimum de 4\")\n        }\n\n        if (name === \"\") {\n            valid = false\n            //TODO custom message error\n            alert(\"Nom - obligatoire\")\n        }\n\n        if (firstname === \"\") {\n            valid = false\n            //TODO custom message error\n            alert(\"Prénom - obligatoire\")\n        }\n\n\n        if (valid) {\n            createStudent(selectedClass, login, name, firstname).then((response) => {\n\n                if (response.data.returnState === 0) {\n\n                    alert(\"Elève inserer\")\n                    alert(\"mot de passe: \" + response.data.password)\n                    console.log(response)\n                    //  this.props.redirect(<StudentDisplay formCreate={{studentID:response.data.student.userID, classID:response.data.student.theClass}}/>);\n                } else {\n                    //TODO error msg\n                    alert(response.data.msg)\n                }\n\n            })\n        }\n\n        //no reload\n        event.preventDefault();\n    }\n\n    handlePrevious = () => {\n        this.props.previous(<AddSelectStep previous={this.props.previous} next={this.props.next}/>)\n    }\n\n    render() {\n        return <div className=\"teacher-add-student-step\">\n\n            <form className=\"teacher-student-creation-container\" onSubmit={this.handleValidate}>\n                <select className=\"teacher-student-creation-input\" id=\"selected-class\">\n                    <option className=\"teacher-student-creation-option\" value=\"empty\">Choix de la classe</option>\n                    {this.state.classesList.map((theClass, index) => {\n                        return <option key={index} value={theClass.classID}>{theClass.name}</option>\n                    })}\n                </select>\n\n                <input className=\"teacher-student-creation-input\" id=\"select-login\" placeholder=\"Login\" type=\"text\"/>\n                <input className=\"teacher-student-creation-input\" id=\"select-name\" placeholder=\"Nom\" type=\"text\"/>\n                <input className=\"teacher-student-creation-input\" id=\"select-firstname\" placeholder=\"Prénom\"\n                       type=\"text\"/>\n                <input className=\"teacher-student-creation-valid\" type=\"submit\" value=\"Valider\"/>\n            </form>\n\n\n            <button onClick={this.handlePrevious} className=\"teacher-previous-btn\">Précedent</button>\n        </div>\n    }\n\n}\n\n\n//////////////////////////////////| ADDING CLASSES |////////////////////////////////////\n\n\nclass AddClassStep extends Component {\n\n\n    handleValidate = (event) => {\n\n        let valid = true;\n        let name = document.getElementById(\"select-name\").value\n        let grade = document.getElementById(\"select-grade\").value\n\n\n        if (name === \"\") {\n            valid = false\n            //TODO custom message error\n            alert(\"Nom - obligatoire!\")\n        }\n\n        if (grade === \"\") {\n            valid = false\n            //TODO custom message error\n            alert(\"Niveau - obligatoire!\")\n        }\n\n\n        if (valid) {\n            createClass(name, grade).then((res) => {\n\n                console.log(res)\n\n            })\n        }\n\n        //no reload\n        event.preventDefault();\n    }\n\n    handlePrevious = () => {\n        this.props.previous(<AddSelectStep previous={this.props.previous} next={this.props.next}/>)\n    }\n\n    render() {\n        return <div className=\"teacher-add-student-step\">\n\n            <form className=\"teacher-student-creation-container\" onSubmit={this.handleValidate}>\n\n                <input className=\"teacher-student-creation-input\" id=\"select-name\" placeholder=\"Nom\" type=\"text\"/>\n                <input className=\"teacher-student-creation-input\" id=\"select-grade\" placeholder=\"Niveau\" type=\"text\"/>\n                <input className=\"teacher-student-creation-valid\" type=\"submit\" value=\"Valider\"/>\n            </form>\n\n\n            <button onClick={this.handlePrevious} className=\"teacher-previous-btn\">Précedent</button>\n        </div>\n    }\n\n}\n\n////////////////////////| ADDING CHAPTER |//////////////////////////\n\nclass AddChapterStep extends Component {\n\n\n    handleValidate = (event) => {\n\n        let valid = true;\n        let name = document.getElementById(\"select-name\").value;\n\n\n        if (name === \"\") {\n            valid = false\n            //TODO custom message error\n            alert(\"Nom - obligatoire\")\n\n        }\n        if (valid) {\n            createChapter(name).then((res) => {\n\n                console.log(res)\n\n            })\n        }\n\n        //no reload\n        event.preventDefault();\n\n    }\n\n    handlePrevious = () => {\n        this.props.previous(<AddSelectStep previous={this.props.previous} next={this.props.next}/>)\n    }\n\n    render() {\n        return <div className=\"teacher-add-chapter-step\">\n\n            <form className=\"teacher-chapter-creation-container\" onSubmit={this.handleValidate}>\n\n                <input className=\"teacher-chapter-creation-input\" id=\"select-name\" placeholder=\"Nom\" type=\"text\"/>\n                <input className=\"teacher-chapter-creation-valid\" type=\"submit\" value=\"Valider\"/>\n\n            </form>\n\n\n            <button onClick={this.handlePrevious} className=\"teacher-previous-btn\">Précedent</button>\n        </div>\n    }\n\n}","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/delete_display.js",["140","141","142","143"],"import {Component} from \"react\";\nimport {PopupMessage} from \"../../teacher_display_2.0\";\nimport {createClass, deleteClass, getAllClasses} from \"../../../../../model/classModel\";\nimport {deleteTheStudents, getAllStudents, getAllTheStudents} from \"../../../../../model/studentModel\";\n\nexport class DeleteDisplay extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            currentStepScreen: <DeleteSelectStep openPopup={this.handleOpenPopup} previous={this.handlePrevious}\n                                                 next={this.handleNext}/>\n        }\n\n    }\n\n    handleOpenPopup = (Object) => {\n        this.props.openPopup(Object)\n    }\n\n    handleNext = (nextStepDOMObject) => {\n        this.setState({\n            currentStepScreen: nextStepDOMObject\n        })\n    }\n\n    handlePrevious = (previousDomObject) => {\n        this.setState({\n            currentStepScreen: previousDomObject\n        })\n    }\n\n\n    render() {\n\n        return <div className=\"teacher-default-dashboard-container\">\n\n            <div className=\"teacher-adding-step-container\">\n                {this.state.currentStepScreen}\n            </div>\n\n\n        </div>\n    }\n\n}\n\n\nclass DeleteSelectStep extends Component {\n\n    // static variables\n    STUDENT_TEXT = \"Un élève\"\n    CLASS_TEXT = \"Une classe\"\n    CHAPTER_TEXT = \"Un Chapitre\"\n    QUESTION_TEXT = \"Une Question\"\n\n    constructor() {\n        super();\n\n        this.state = {\n            currentChoice: \"\",\n            currentChoiceDOM: null,\n\n        }\n    }\n\n\n    handleConfirmChoice = () => {\n\n        switch (this.state.currentChoice) {\n            case this.STUDENT_TEXT:\n\n                this.props.next(<DeleteStudentStep openPopup={this.props.openPopup} closePopup={this.props.closePopup}\n                                                 next={this.props.next} previous={this.props.previous}/>)\n\n                break\n            case this.CLASS_TEXT:\n\n                this.props.next(<DeleteClassStep openPopup={this.props.openPopup} closePopup={this.props.closePopup}\n                                                 next={this.props.next} previous={this.props.previous}/>)\n                break\n            case this.CHAPTER_TEXT:\n\n\n                break\n            case this.QUESTION_TEXT:\n\n\n                break\n            default:\n\n                this.props.openPopup(<PopupMessage\n                    message=\"Aucune selection\"\n                    validText=\"OK\"\n                    validateCallback={() => {\n                        this.props.closePopup()\n                    }\n                    }\n\n                />)\n\n                break\n        }\n\n    }\n\n    handleSelectChoice = (event, text) => {\n\n        if (!this.state.currentChoiceDOM) {\n            event.nativeEvent.explicitOriginalTarget.style.backgroundColor = \"var(--secondary_color)\"\n\n            this.setState({\n                currentChoiceDOM: event.nativeEvent.explicitOriginalTarget,\n                currentChoice: text\n            })\n        } else {\n            this.state.currentChoiceDOM.style.backgroundColor = \"var(--primary_color)\"\n            event.nativeEvent.explicitOriginalTarget.style.backgroundColor = \"var(--secondary_color)\"\n\n            this.setState({\n                currentChoiceDOM: event.nativeEvent.explicitOriginalTarget,\n                currentChoice: text\n            })\n        }\n\n    }\n\n\n    render() {\n        return <div className=\"teacher-selection-container\">\n\n            <h1 className=\"teacher-add-choice-title\">Supprimer</h1>\n\n            <div className=\"teacher-selection-option-list\">\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.STUDENT_TEXT}/>\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.CLASS_TEXT}/>\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.CHAPTER_TEXT}/>\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.QUESTION_TEXT}/>\n\n            </div>\n\n            <button onClick={this.handleConfirmChoice} className=\"teacher-next-btn\">Suivant</button>\n        </div>\n    }\n\n\n}\n\n\nclass SelectionChoice extends Component {\n\n\n    handleClick = (event) => {\n\n        this.props.onClick(event, this.props.title)\n    }\n\n\n    render() {\n        return <div onClick={this.handleClick} className=\"teacher-selection-choice-container\">\n            <h1 className=\"teacher-selection-choice-text\">{this.props.title}</h1>\n        </div>\n    }\n\n\n}\n\n\n///////////////////////| DELETE STUDENT |/////////////////////////\n\n\nexport class DeleteStudentStep extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            currentStudent: null,\n            studentList: [],\n            currentClass: 0,\n            classesList: []\n        }\n    }\n\n    componentDidMount() {\n\n\n        getAllClasses().then(res => {\n            this.setState({\n                classesList: res.data.classes\n            })\n\n            getAllStudents(res.data.classes[0].classID).then(res => {\n\n                if (this.props.formCreate) {\n                    this.setState({\n                        studentList: res.data.students,\n                        currentClass: this.props.formCreate.theClass.classID,\n                        currentStudent: this.props.formCreate.theStudent\n                    })\n                } else {\n                    this.setState({\n                        studentList: res.data.students\n                    })\n                }\n\n\n            })\n        })\n\n\n    }\n\n    handleValidate = (event) => {\n\n        console.log(\"studentId: \"+this.state.currentStudent.userID)\n        deleteTheStudents(this.state.currentStudent.userID,this.state.currentClass).then(res => {\n\n            console.log(res)\n            getAllStudents(this.state.currentClass).then(res => {\n\n                this.setState({\n                    studentList: res.data.students\n                })\n\n            })\n        })\n\n\n\n    }\n\n    handleDisplayOverView = (theStudent) => {\n\n        this.setState({\n            currentStudent: theStudent\n        })\n\n    }\n\n    handleUpdateList = (event) => {\n\n        getAllStudents(event.target.value).then(res => {\n\n            this.setState({\n                studentList: res.data.students,\n                currentClass: event.target.value\n            })\n\n        })\n\n    }\n\n    handleSelect = (event, student) =>{\n        this.setState({\n            currentStudent: student\n        })\n    }\n\n\n\n    render() {\n        return <div className=\"teacher-default-dashboard-container\">\n\n            <div className=\"teacher-class-list-overview\">\n\n                <select onChange={this.handleUpdateList} className=\"teacher-student-creation-input\" id=\"selected-class\">\n                    {this.state.classesList.map((theClass, index) => {\n                        return <option key={index} value={theClass.classID}>{theClass.name}</option>\n                    })}\n                </select>\n\n                {(this.state.studentList.length > 0)?this.state.studentList.map( (theStudent, index) => {\n                    return <StudentRow onClick={this.handleSelect} value={theStudent} key={index}/>\n                }):<h1 className=\"teacher-student-list-none\">Aucun Elève</h1>}\n\n\n\n            </div>\n            <div className=\"teacher-default-delete-button\" onClick={this.handleValidate}><h1 className=\"\">Supprimer</h1></div>\n        </div>\n    }\n\n}\n\nclass StudentRow extends Component {\n\n\n    handleClick = (event) => {\n        this.props.onClick(event,this.props.value)\n    }\n\n\n    render() {\n        return <div onClick={this.handleClick} className=\"teacher-class-row\">\n            <h1 className=\"teacher-class-row-title\">{this.props.value.lastname}</h1>\n        </div>\n    }\n\n}\n///////////////////////| DELETE CLASS |///////////////////////////\n\n\nclass DeleteClassStep extends Component {\n\n\n    constructor() {\n        super();\n\n        this.state = {\n            currentChoiceDOM: null,\n            currentCLassID: -1,\n            classesList: []\n        }\n    }\n\n    handleGetClasses = () => {\n\n        getAllClasses().then((response) => {\n\n            this.setState({\n                classesList: response.data.classes\n            })\n\n        })\n\n\n    }\n\n    componentDidMount() {\n        this.handleGetClasses()\n    }\n\n\n    handleSelectChoice = (event, id) => {\n\n\n        if (!this.state.currentChoiceDOM) {\n            event.nativeEvent.explicitOriginalTarget.style.backgroundColor = \"var(--secondary_color)\"\n\n            this.setState({\n                currentChoiceDOM: event.nativeEvent.explicitOriginalTarget,\n                currentCLassID: id\n            })\n        } else {\n            this.state.currentChoiceDOM.style.backgroundColor = \"var(--primary_color)\"\n            event.nativeEvent.explicitOriginalTarget.style.backgroundColor = \"var(--secondary_color)\"\n\n            this.setState({\n                currentChoiceDOM: event.nativeEvent.explicitOriginalTarget,\n                currentCLassID: id\n            })\n        }\n\n\n    }\n\n\n    handleValidate = (event) => {\n\n        deleteClass(this.state.currentCLassID).then(res => {\n            console.log(res)\n            this.handleGetClasses()\n        })\n\n    }\n\n    handlePrevious = () => {\n        this.props.previous(<DeleteSelectStep previous={this.props.previous} next={this.props.next}/>)\n    }\n\n    render() {\n        return <div className=\"teacher-add-student-step\">\n\n\n            <div className=\"teacher-class-list-delete\">\n\n                {this.state.classesList.map((theClass, index) => {\n                    return <ClassesRow value={theClass} onClick={this.handleSelectChoice} key={index}\n                                       theClass={theClass}/>\n                })}\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n            </div>\n\n            <button className=\"teacher-class-valid-delete-btn\" onClick={this.handleValidate}>Valider</button>\n\n\n            <button onClick={this.handlePrevious} className=\"teacher-previous-btn\">Précedent</button>\n        </div>\n    }\n\n}\n\n\nclass ClassesRow extends Component {\n\n\n    handleOpen = (event) => {\n        this.props.onClick(event, this.props.theClass.classID)\n    }\n\n\n    render() {\n        return <div onClick={this.handleOpen} className=\"teacher-class-row\">\n            <h1 className=\"teacher-class-row-title\">{this.props.theClass.name}</h1>\n        </div>\n    }\n\n}\n","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/chapterModel.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":57,"column":25,"nodeType":"150","messageId":"151","endLine":57,"endColumn":32},{"ruleId":"152","severity":1,"message":"153","line":30,"column":17,"nodeType":"154","endLine":30,"endColumn":112},{"ruleId":"152","severity":1,"message":"153","line":137,"column":21,"nodeType":"154","endLine":137,"endColumn":108},{"ruleId":"152","severity":1,"message":"153","line":181,"column":17,"nodeType":"154","endLine":181,"endColumn":122},{"ruleId":"155","severity":1,"message":"156","line":182,"column":17,"nodeType":"154","endLine":182,"endColumn":73},{"ruleId":"152","severity":1,"message":"153","line":226,"column":13,"nodeType":"154","endLine":226,"endColumn":112},{"ruleId":"144","replacedBy":"157"},{"ruleId":"146","replacedBy":"158"},{"ruleId":"148","severity":1,"message":"159","line":3,"column":9,"nodeType":"150","messageId":"151","endLine":3,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":11,"column":13,"nodeType":"154","endLine":11,"endColumn":109},{"ruleId":"144","replacedBy":"160"},{"ruleId":"146","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":138,"column":59,"nodeType":"164","messageId":"165","endLine":138,"endColumn":61},{"ruleId":"166","severity":1,"message":"167","line":11,"column":5,"nodeType":"168","messageId":"169","endLine":15,"endColumn":6},{"ruleId":"148","severity":1,"message":"149","line":62,"column":25,"nodeType":"150","messageId":"151","endLine":62,"endColumn":32},{"ruleId":"152","severity":1,"message":"153","line":153,"column":13,"nodeType":"154","endLine":153,"endColumn":132},{"ruleId":"144","replacedBy":"170"},{"ruleId":"146","replacedBy":"171"},{"ruleId":"162","severity":1,"message":"172","line":48,"column":57,"nodeType":"164","messageId":"173","endLine":48,"endColumn":59},{"ruleId":"148","severity":1,"message":"174","line":120,"column":7,"nodeType":"150","messageId":"151","endLine":120,"endColumn":18},{"ruleId":"148","severity":1,"message":"175","line":2,"column":9,"nodeType":"150","messageId":"151","endLine":2,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":79,"column":17,"nodeType":"154","endLine":79,"endColumn":113},{"ruleId":"152","severity":1,"message":"153","line":128,"column":13,"nodeType":"154","endLine":128,"endColumn":81},{"ruleId":"148","severity":1,"message":"176","line":3,"column":24,"nodeType":"150","messageId":"151","endLine":3,"endColumn":41},{"ruleId":"148","severity":1,"message":"177","line":6,"column":9,"nodeType":"150","messageId":"151","endLine":6,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":124,"column":13,"nodeType":"180","endLine":124,"endColumn":46},{"ruleId":"148","severity":1,"message":"181","line":3,"column":9,"nodeType":"150","messageId":"151","endLine":3,"endColumn":20},{"ruleId":"148","severity":1,"message":"176","line":4,"column":44,"nodeType":"150","messageId":"151","endLine":4,"endColumn":61},{"ruleId":"178","severity":1,"message":"179","line":118,"column":13,"nodeType":"180","endLine":118,"endColumn":46},{"ruleId":"178","severity":1,"message":"179","line":347,"column":13,"nodeType":"180","endLine":347,"endColumn":46},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'rotateY' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["182"],["183"],"'NavBar' is defined but never used.",["182"],["183"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["182"],["183"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'EditStudent' is defined but never used.","'getAllClasses' is defined but never used.","'getAllTheStudents' is defined but never used.","'StudentDisplay' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'createClass' is defined but never used.","no-global-assign","no-unsafe-negation"]