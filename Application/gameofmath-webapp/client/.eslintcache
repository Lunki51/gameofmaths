[{"/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/index.js":"1","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/Main_view.js":"2","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/authentification.js":"3","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/quizModel.js":"4","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Login_display.js":"5","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display.js":"6","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_components.js":"7","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Map_display.js":"8","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/overlay_components/chapters_overlay.js":"9"},{"size":216,"mtime":1615210192785,"results":"10","hashOfConfig":"11"},{"size":4855,"mtime":1616402639242,"results":"12","hashOfConfig":"11"},{"size":820,"mtime":1615210192789,"results":"13","hashOfConfig":"11"},{"size":2026,"mtime":1615210192789,"results":"14","hashOfConfig":"11"},{"size":2254,"mtime":1615210192789,"results":"15","hashOfConfig":"11"},{"size":594,"mtime":1616402639242,"results":"16","hashOfConfig":"11"},{"size":4395,"mtime":1616402639242,"results":"17","hashOfConfig":"11"},{"size":13385,"mtime":1616487864250,"results":"18","hashOfConfig":"11"},{"size":13229,"mtime":1616501096905,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"fl9jrf",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/index.js",[],["42","43"],"/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/Main_view.js",["44"],"import React, {Component} from 'react';\n\n//MODEL\nimport auth, {getType, isAuth} from \"../../model/authentification\";\n\nimport LoginView from \"./main_components/Login_display\";\nimport {MobileHeader, NavigationBar} from \"./main_components/components/global_components\";\nimport MapView from \"./main_components/Map_display\";\nimport Axios from \"axios\";\nimport {Quiz} from \"./overlay_components/chapters_overlay\";\nimport {TeacherDisplay} from \"./main_components/teacher_display\";\nimport {quitQuiz} from \"../../model/quizModel\";\n\n/**\n * @author ANtoine LE BORGNE\n *\n * create the main of the app\n */\nclass MainView extends Component {\n\n\n    _isMounted = false\n\n    constructor() {\n\n        super();\n\n\n        this.state = {\n\n            isLogged: () => {\n                isAuth()\n                    .then((res) => {\n                        return res.data.isLogged\n                    })\n            },\n            overlayComponent: null,\n            whatOnOverlay: \"\",\n            mapAccess: true,\n            who: \"\",\n            username: \"\",\n\n        }\n\n\n    }\n\n\n    componentDidMount() {\n\n        this._isMounted = true\n\n\n        //Check if the user is authenticated\n        isAuth()\n            .then((res) => {\n\n                if (this._isMounted) {\n                    if (res.data.returnState === 0) {\n                        if (res.data.isLogged === true) {\n                            document.title = \"Game Of Math\"\n                        }\n\n                        getType().then((response) => {\n\n                            if(response.data.returnState === 0){\n                                this.setState({\n                                    isLogged: res.data.isLogged,\n                                    who:response.data.type\n                                })\n                            }\n\n                        })\n\n\n                    }\n                }\n            })\n\n    }\n\n\n    //HANDLER\n\n    /**\n     * handle submit button and redirect to the\n     * authentication handler\n     *\n     * @param event mostly onClick\n     */\n    handleLogin = (event) => {\n\n        //get input's form values\n        const username = event.target[0].value\n        const password = event.target[1].value\n\n        //check authentication\n        auth(username, password)\n            .then((response) => {\n                //if wrong password or login\n\n                if (response.data.returnState === 1) {\n                    //TODO put styled error message\n                    alert(response.data.msg)\n\n                } else if (response.data.returnState === 0) {\n                    isAuth()\n                        .then((res) => {\n                            if (res.data.returnState === 0) {\n                                document.title = \"Game Of Math\"\n                                this.setState({\n                                    isLogged: res.data.isLogged,\n                                    who: response.data.type\n                                })\n\n                            }\n                        })\n                }\n\n            })\n\n\n        event.preventDefault();\n\n    }\n\n    /**\n     * handle the logout of the user\n     *\n     */\n    handleLogout = () => {\n\n        Axios.post(\"/api/user/logout\").then((res) => {\n\n            if (res.data.returnState === 0)\n                this.setState({\n                    isLogged: false\n                })\n        })\n    }\n\n    /**\n     *handle the quiz visibility\n     */\n    handleQuizDisplay = () => {\n\n        if (this.state.whatOnOverlay === \"quiz\") {\n\n            document.getElementById('quiz-btn').style.shadowfilter = \"none\"\n\n            this.setState({\n                overlayComponent: null,\n                whatOnOverlay: \"\"\n\n            })\n        } else {\n            document.getElementById('quiz-btn').style.shadowfilter = \"filter : drop-shadow(0px 0px 0px 3px #fff);\"\n            this.setState({\n                overlayComponent: <Quiz/>,\n                whatOnOverlay: \"quiz\"\n            })\n        }\n\n    }\n\n\n\n\n    componentWillUnmount() {\n        this._isMounted = false\n    }\n\n\n    render() {\n\n        if (this.state.isLogged === true) {\n            //the user is logged\n\n            if (this.state.who === \"student\") {\n\n                //user is a student\n                return <>\n\n                    <MobileHeader/>{/*appear only when mobile*/}\n                    <NavigationBar quiz={this.handleQuizDisplay} logout={this.handleLogout}/>\n                    <MapView/>\n                    {this.state.overlayComponent}\n                </>\n\n            } else {\n\n                //user is a teacher\n                return <TeacherDisplay logout={this.handleLogout}/>\n\n            }\n\n        } else {\n\n            //the user is not logged\n            return <LoginView handleLogin={this.handleLogin}/>\n\n        }\n\n\n    }\n\n\n}\n\n\nexport default MainView;","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/authentification.js",[],"/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/quizModel.js",[],"/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Login_display.js",[],"/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display.js",[],"/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_components.js",["45","46","47","48"],"import React, { Component } from 'react';\nimport \"../../styles/global_style.css\";\nimport {getUsername} from \"../../../../model/authentification\";\n\n\n//IMAGES\n\nconst image_icon_user =  \"https://img.icons8.com/material-outlined/35/eff0cf/user--v1.png\"\nconst image_icon_logout =  \"https://img.icons8.com/ios-filled/35/eff0cf/login-rounded-right.png\"\nconst image_icon_quiz =  \"https://img.icons8.com/ios/35/eff0cf/help.png\"\n\n/**\n * @author Antoine LE BORGNE\n *\n * create a main container component\n */\nclass ContainerTitle extends Component{\n\n    constructor(props){\n        super(props)\n        this.props = props;\n    }\n\n\n    render(){\n\n        return<>\n        \n            <div className={this.props.className}>\n                <h1 className=\"container-title\">{this.props.title}</h1>\n                {this.props.children}\n            </div>\n        \n        </>\n\n    }\n\n\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * create a text field component\n */\nclass TextField extends Component {\n\n\n    constructor(props){\n        super(props)\n        this.props = props;\n    }\n\n    render(){\n        return <>\n            <input id={this.props.id} onChange={this.props.onChange} value={this.props.value} className=\"textField\" placeholder={this.props.hint} type={this.props.type}/>\n        </>\n    }\n\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * create a simple Button component\n */\nclass Button extends Component{\n\n\n    constructor(props){\n        super(props)\n        this.props = props;\n    }\n\n    render(){\n        return <>\n             <input className=\"button\" type=\"submit\" value={this.props.value} onClick={this.props.onClick}/> \n        </>\n    }\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * create the navigation bar\n */\nclass NavigationBar extends Component{\n\n\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n        this.props = props\n\n        this.state = {\n            username : \"\"\n        }\n\n    }\n\n\n    componentDidMount() {\n\n        this._isMounted = true;\n\n            //get the current username\n            getUsername().then((response) => {\n\n                    if(this._isMounted) {\n\n                        this.setState({\n                            username: response.data.username,\n                        })\n\n                    }\n                })\n\n    }\n\n\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n\n    render() {\n        return <NavBar>\n                    <NavElement icon={image_icon_quiz} id=\"quiz-btn\"  className=\"navElem_left\"   onClick={this.props.quiz} value=\"quiz\"/>\n                    <img src={window.location.origin + '/logo/game_of_math_logo.png'} className=\"navElem_center\"/>\n                    <NavElement icon={image_icon_user}  className=\"navElem_right\"  onClick={this.props.profile} value={this.state.username}/>\n                    <NavElement icon={image_icon_logout}  className=\"navElem_right\"  onClick={this.props.logout} value=\"deconnexion\"/>\n                </NavBar>\n    }\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * handle and display navbar\n */\nexport class NavBar extends Component{\n\n    constructor(props){\n        super(props);\n        this.props = props;\n    }\n\n\n    render(){\n        return <>\n            <ul className=\"navbar_container\">\n                {this.props.children}\n            </ul>\n        </>\n    }\n\n}\n\n/**\n * @author Antoine LE BORGNE\n *\n * manage navigation element\n */\nexport class NavElement extends Component{\n\n\n\n    render() {\n        return <>\n            <li className={this.props.className}>\n\n                <img id={this.props.id} className=\"navbar_link_icon\" onClick={this.props.onClick} src={this.props.icon}/>\n                <a className=\"navbar_link\" onClick={this.props.onClick}>\n                    {this.props.value}\n                </a>\n            </li>\n        </>\n    }\n\n\n}\n\n\nexport class AlertComp extends Component{\n\n\n    render() {\n\n        return <div className=\"alert_container\">\n\n\n\n            <text >{this.props.msg}</text>\n\n            <button value=\"OK\" onClick={this.props.onClick}/>\n\n        </div>\n\n\n    }\n\n}\n\n\n\nexport class MobileHeader extends Component{\n\n    render() {\n\n        return <div className=\"mobile-header-container\">\n\n            <img src={window.location.origin + '/logo/game_of_math_logo.png'} className=\"mobile-header-title\"/>\n\n        </div>\n    }\n\n}\n\n\n\n//exportation\nexport {ContainerTitle, TextField, Button,NavigationBar};","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Map_display.js",["49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"import React, {Component} from 'react';\nimport * as THREE from 'three'\nimport {Color, MeshStandardMaterial} from 'three'\nimport {GUI} from \"dat.gui\";\nimport {Water} from \"three/examples/jsm/objects/Water\";\nimport {Sky} from \"three/examples/jsm/objects/Sky\"\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader';\nimport {BufferGeometryUtils} from 'three/examples/jsm/utils/BufferGeometryUtils';\nimport Axios from \"axios\";\nimport Stats from \"stats.js\"\n\n\n/**\n * @author quentin COSNIER\n * @author Antoine LE BORGNE\n *\n * render map on the screen\n */\nclass MapView extends Component {\n\n    _isMounted = false\n\n\n    constructor(props: P, context: any) {\n        super(props, context);\n\n        this.state = {\n            renderer: new THREE.WebGLRenderer(),\n            camera: new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 1, 2000),\n            scene: new THREE.Scene(),\n            center: new THREE.Vector3(0, 80, 0),\n            sun: new THREE.Vector3(),\n            water: new Water(),\n            stats: new Stats(),\n            currentCastle: 0,\n            castles: new Array(),\n            inputVars: {\n                mousePressed: false,\n                rotateX: 0,\n                rotateY: 0,\n                scrolled: 100,\n                camDistance: 0\n            }\n        };\n    }\n\n    componentDidMount() {\n        this._isMounted = true\n\n        document.title = \"Game Of Math\"\n\n\n        this.state.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.state.renderer.setPixelRatio(window.devicePixelRatio);\n\n\n        this.renderMap(null)\n    }\n\n\n    animate = () => {\n\n        requestAnimationFrame(this.animate);\n        this.state.stats.begin();\n        this.state.inputVars.camDistance -= this.state.inputVars.scrolled;\n        this.state.inputVars.camDistance = Math.min(Math.max(30, this.state.inputVars.camDistance), 100)\n        this.state.camera.position.z = this.state.center.z - (this.state.inputVars.camDistance * Math.cos(Math.PI / 4)) * Math.cos(this.state.inputVars.rotateX)\n        this.state.camera.position.x = this.state.center.x - (this.state.inputVars.camDistance * Math.cos(Math.PI / 4)) * Math.sin(this.state.inputVars.rotateX)\n        this.state.camera.position.y = this.state.inputVars.camDistance * Math.sin(Math.PI / 4) + 80\n        this.state.camera.lookAt(this.state.center)\n        this.state.inputVars.scrolled = 0\n        this.state.water.material.uniforms['time'].value += 1.0 / 60.0;\n        this.state.renderer.render(this.state.scene, this.state.camera);\n        this.state.stats.end();\n    }\n\n    mouseMoveEvent = (event) => {\n        if (this.state.inputVars.mousePressed) {\n            this.state.inputVars.rotateX += event.movementX / 100;\n            this.state.inputVars.rotateY += event.movementY / 100;\n        }\n    }\n\n    mouseDownEvent = (event) => {\n        this.state.inputVars.mousePressed = true;\n        //if (event.shiftKey) this.rayCasting((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1) #ENABLE SHIFT CLICK MOVE THE CAMERA CENTER\n    }\n\n\n    mouseUpEvent = (event) => {\n        this.state.inputVars.mousePressed = false;\n    }\n\n    mouseWheelEvent = (event) => {\n        this.state.inputVars.scrolled -= event.deltaY\n    }\n\n    windowResizeEvent = (event) => {\n        this.state.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.state.camera = new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 1, 20000);\n    }\n\n    keyDownEvent = (event) =>{\n        if(event.key==\"ArrowLeft\"){\n            if(this.state.currentCastle>0){\n                this.state.currentCastle--;\n            }else{\n                this.state.currentCastle = this.state.castles.length-1;\n            }\n            this.state.center = this.state.castles[this.state.currentCastle];\n        }else if(event.key==\"ArrowRight\"){\n            if(this.state.currentCastle<this.state.castles.length-1){\n                this.state.currentCastle++;\n            }else{\n                this.state.currentCastle = 0;\n            }\n            this.state.center = this.state.castles[this.state.currentCastle];\n        }\n    }\n\n    setupController() {\n        let domElement = this.state.renderer.domElement;\n        domElement.addEventListener(\"mousedown\", this.mouseDownEvent, false)\n        domElement.addEventListener(\"mouseup\", this.mouseUpEvent, false)\n        domElement.addEventListener(\"mousemove\", this.mouseMoveEvent, false)\n        domElement.addEventListener(\"wheel\", this.mouseWheelEvent, false)\n        window.addEventListener(\"keydown\",this.keyDownEvent);\n        window.addEventListener(\"resize\", this.windowResizeEvent)\n    }\n\n\n    rayCasting = (mouseX, mouseY) => {\n        let rayCaster = new THREE.Raycaster();\n        rayCaster.setFromCamera(new THREE.Vector2(mouseX, mouseY), this.state.camera);\n\n        let intersects = rayCaster.intersectObjects(this.state.scene.children);\n\n        if (intersects[0]) {\n            this.state.center = intersects[0].point;\n        }\n    }\n\n\n    loadMap = (data) => {\n        let map = data.data\n        let colors = map.colors;\n        for (let color of colors) {\n            let meshColor = color[0];\n            let meshArrays = color[1];\n            let geometry = new THREE.BufferGeometry()\n            geometry.setAttribute('position', new THREE.BufferAttribute(Float32Array.from(meshArrays[0]), 3))\n            geometry.setAttribute('normal', new THREE.BufferAttribute(Float32Array.from(meshArrays[1]), 3));\n            geometry.computeBoundingSphere()\n            let material = new THREE.MeshStandardMaterial({color: new THREE.Color(meshColor)});\n            let mesh = new THREE.Mesh(geometry, material);\n            this.state.scene.add(mesh);\n        }\n        let gltfLoader = new GLTFLoader();\n        gltfLoader.load(\"mapData/castle.glb\", model => {\n            let castlesPosition = map.castlePosition;\n            for (let position of castlesPosition) {\n                let positionModel = model.scene.clone(true);\n                let vectorPos = new THREE.Vector3(position[0], position[1], position[2]);\n                this.state.castles.push(vectorPos);\n                this.state.center = vectorPos;\n                this.state.currentCastle++;\n                positionModel.position.set(position[0], position[1], position[2])\n\n                positionModel.scale.set(0.5, 0.5, 0.5)\n\n                let PointLight = new THREE.PointLight(new Color(255, 255, 0), 0.005, 20)\n                PointLight.position.set(position[0], position[1] + 10, position[2])\n                this.state.scene.add(PointLight)\n                this.state.scene.add(positionModel)\n            }\n        }, undefined, function (error) {\n\n            console.error(error);\n        })\n\n        this.setupTrees(\"/mapData/forestTree.glb\",map.forestTrees,0.7,map.castlePosition);\n        this.setupTrees(\"/mapData/savannaTree.glb\",map.savannaTrees,0.3,map.castlePosition);\n        this.setupTrees(\"/mapData/bush.glb\",map.plainTrees,0.25,map.castlePosition);\n    }\n\n    setupTrees = (link,map,scale,castles) =>{\n        let gltfLoader = new GLTFLoader();\n        gltfLoader.load(link, gltf => {\n            let geometries = new Map();\n            let GLTFscene = gltf.scene;\n\n            for (let i = 0; i < GLTFscene.children.length; i++) {\n                geometries.set(GLTFscene.children[i].material.color, new Array())\n            }\n\n            for (let i = 0; i < map.length; i++) {\n                let valid = true;\n                castles.forEach(castle => {\n                    if((castle[0]-map[i].x<=10 && castle[0]-map[i].x>=-10) && (castle[2]-map[i].z<=10 && castle[2]-map[i].z>=-10)){\n                        valid = false;\n                    }\n                })\n                if(valid){\n                    let randRot = Math.random() * Math.PI * 2;\n                    for (let j = 0; j < GLTFscene.children.length; j++) {\n                        let childObject = GLTFscene.children[j];\n\n                        let childGeometry = new THREE.InstancedBufferGeometry();\n                        THREE.BufferGeometry.prototype.copy.call(childGeometry, childObject.geometry);\n\n                        let childMat = childObject.material;\n\n                        childGeometry.scale(childObject.scale.x,childObject.scale.y,childObject.scale.z)\n                        childGeometry.rotateX(childObject.rotation.x);\n                        childGeometry.rotateY(childObject.rotation.y);\n                        childGeometry.rotateZ(childObject.rotation.z);\n                        childGeometry.translate(childObject.position.x, childObject.position.y, childObject.position.z)\n                        childGeometry.scale(scale, scale, scale)\n\n                        childGeometry.rotateY(randRot)\n                        childGeometry.translate(map[i].x, map[i].y, map[i].z)\n                        geometries.get(childMat.color).push(childGeometry)\n                    }\n                }\n            }\n\n            for (let key of geometries.keys()) {\n                let geometryArray = geometries.get(key);\n                let geometry = BufferGeometryUtils.mergeBufferGeometries(geometryArray, false)\n                let mesh = new THREE.Mesh(geometry, new MeshStandardMaterial({color: key}))\n                this.state.scene.add(mesh)\n            }\n\n        }, undefined, error => {\n            console.error(error)\n        });\n    }\n\n    setupWater = () => {\n        let waterGeometry = new THREE.PlaneBufferGeometry(10000, 10000);\n\n        this.state.water = new Water(\n            waterGeometry,\n            {\n                textureWidth: 512,\n                textureHeight: 512,\n                waterNormals: new THREE.TextureLoader().load('mapData/waternormals.jpg', function (texture) {\n\n                    texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n\n                }),\n                alpha: 5.0,\n                sunDirection: new THREE.Vector3(0, -1, 0),\n                sunColor: 0xffffff,\n                waterColor: 0x001e0f,\n                distortionScale: 3.7\n            }\n        );\n\n        this.state.water.rotation.x = -Math.PI / 2;\n        this.state.water.position.y = 80;\n\n        this.state.scene.add(this.state.water);\n    }\n    setupSky = () => {\n        this.state.sky = new Sky();\n        this.state.sky.scale.setScalar(450000);\n        this.state.scene.add(this.state.sky);\n\n        const skyUniforms = this.state.sky.material.uniforms;\n\n        skyUniforms['turbidity'].value = 5;\n        skyUniforms['rayleigh'].value = 0.3;\n        skyUniforms['mieCoefficient'].value = 0.005;\n        skyUniforms['mieDirectionalG'].value = 0.8;\n\n        this.state.sunParameters = {\n            inclination: 0,\n            azimuth: 0.205\n        };\n\n        this.state.pmremGenerator = new THREE.PMREMGenerator(this.state.renderer);\n\n        this.updateSun();\n    }\n\n    updateSun = () => {\n        const theta = Math.PI * (this.state.sunParameters.inclination - 0.5);\n        const phi = 2 * Math.PI * (this.state.sunParameters.azimuth - 0.5);\n\n        this.state.sun.x = Math.cos(phi);\n        this.state.sun.y = Math.sin(phi) * Math.sin(theta);\n        this.state.sun.z = Math.sin(phi) * Math.cos(theta);\n\n        this.state.sky.material.uniforms['sunPosition'].value.copy(this.state.sun);\n        this.state.water.material.uniforms['sunDirection'].value.copy(this.state.sun).normalize();\n\n        this.state.scene.environment = this.state.pmremGenerator.fromScene(this.state.sky).texture;\n\n    }\n\n    setupGui = () => {\n        const waterUniforms = this.state.water.material.uniforms;\n        let skyUniforms = this.state.sky.material.uniforms;\n\n        waterUniforms.size.value = 100;\n        const gui = new GUI()\n        const folderSky = gui.addFolder('Sky');\n        folderSky.add(this.state.sunParameters, 'inclination', 0, 0.5, 0.0001).onChange(this.updateSun);\n        folderSky.add(this.state.sunParameters, 'azimuth', 0, 1, 0.0001).onChange(this.updateSun);\n\n        folderSky.add(skyUniforms.turbidity, 'value', 0, 5, 0.01).onChange(this.updateSun).name('turbidity')\n        folderSky.add(skyUniforms.rayleigh, 'value', 0, 5, 0.01).onChange(this.updateSun).name('rayleigh')\n        folderSky.add(skyUniforms.mieCoefficient, 'value', 0, 5, 0.01).onChange(this.updateSun).name('mieCoefficient')\n        folderSky.add(skyUniforms.mieDirectionalG, 'value', 0, 5, 0.01).onChange(this.updateSun).name('mieDirectionalG')\n    }\n\n\n    reloadScene = () => {\n        Axios.get(\"api/graphics/map\").then(response => {\n            this.state.scene.clear();\n\n            this.loadMap(response);\n\n\n            this.setupWater();\n            this.setupSky();\n            this.setupGui();\n\n            this.mount.appendChild(this.state.renderer.domElement);\n            this.mount.appendChild(this.state.stats.dom)\n            this.state.stats.showPanel(0);\n\n            this.animate();\n        })\n    }\n\n    /**\n     * render a class's map\n     *\n     * @param displayClass the target class\n     */\n    renderMap = (displayClass) => {\n\n        if (this.mount) {\n            this.setupController();\n\n            this.reloadScene();\n\n        }\n    }\n\n\n    componentWillUnmount() {\n        this._isMounted = false\n    }\n\n    render() {\n\n        return <div ref={ref => (this.mount = ref)}/>\n\n    }\n\n}\n\nexport default MapView","/media/chokearth/Chokearth/INFO2/M3302-M4106/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/overlay_components/chapters_overlay.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":12,"column":9,"nodeType":"91","messageId":"92","endLine":12,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":137,"column":21,"nodeType":"95","endLine":137,"endColumn":115},{"ruleId":"93","severity":1,"message":"94","line":182,"column":17,"nodeType":"95","endLine":182,"endColumn":122},{"ruleId":"96","severity":1,"message":"97","line":183,"column":17,"nodeType":"95","endLine":183,"endColumn":73},{"ruleId":"93","severity":1,"message":"94","line":222,"column":13,"nodeType":"95","endLine":222,"endColumn":112},{"ruleId":"98","severity":1,"message":"99","line":36,"column":22,"nodeType":"100","messageId":"101","endLine":36,"endColumn":33},{"ruleId":"102","severity":1,"message":"103","line":65,"column":9,"nodeType":"104","endLine":65,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":66,"column":9,"nodeType":"104","endLine":66,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":67,"column":9,"nodeType":"104","endLine":67,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":68,"column":9,"nodeType":"104","endLine":68,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":69,"column":9,"nodeType":"104","endLine":69,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":71,"column":9,"nodeType":"104","endLine":71,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":72,"column":9,"nodeType":"104","endLine":72,"endColumn":51},{"ruleId":"102","severity":1,"message":"103","line":79,"column":13,"nodeType":"104","endLine":79,"endColumn":33},{"ruleId":"102","severity":1,"message":"103","line":80,"column":13,"nodeType":"104","endLine":80,"endColumn":33},{"ruleId":"102","severity":1,"message":"103","line":85,"column":9,"nodeType":"104","endLine":85,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":91,"column":9,"nodeType":"104","endLine":91,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":95,"column":9,"nodeType":"104","endLine":95,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":100,"column":9,"nodeType":"104","endLine":100,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":104,"column":21,"nodeType":"107","messageId":"108","endLine":104,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":106,"column":17,"nodeType":"104","endLine":106,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":108,"column":17,"nodeType":"104","endLine":108,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":110,"column":13,"nodeType":"104","endLine":110,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":111,"column":27,"nodeType":"107","messageId":"108","endLine":111,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":113,"column":17,"nodeType":"104","endLine":113,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":115,"column":17,"nodeType":"104","endLine":115,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":117,"column":13,"nodeType":"104","endLine":117,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":139,"column":13,"nodeType":"104","endLine":139,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":165,"column":17,"nodeType":"104","endLine":165,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":166,"column":17,"nodeType":"104","endLine":166,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":193,"column":70,"nodeType":"100","messageId":"101","endLine":193,"endColumn":81},{"ruleId":"102","severity":1,"message":"103","line":242,"column":9,"nodeType":"104","endLine":242,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":260,"column":9,"nodeType":"104","endLine":260,"endColumn":34},{"ruleId":"102","severity":1,"message":"103","line":261,"column":9,"nodeType":"104","endLine":261,"endColumn":34},{"ruleId":"102","severity":1,"message":"103","line":266,"column":9,"nodeType":"104","endLine":266,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":277,"column":9,"nodeType":"104","endLine":277,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":282,"column":9,"nodeType":"104","endLine":282,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":291,"column":9,"nodeType":"104","endLine":291,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":292,"column":9,"nodeType":"104","endLine":292,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":293,"column":9,"nodeType":"104","endLine":293,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":298,"column":9,"nodeType":"104","endLine":298,"endColumn":25},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'quitQuiz' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]