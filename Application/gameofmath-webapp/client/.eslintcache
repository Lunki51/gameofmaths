[{"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/index.js":"1","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/authentification.js":"2","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/quizModel.js":"3","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/Main_view.js":"4","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display.js":"5","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Map_display.js":"6","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Login_display.js":"7","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_components.js":"8","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/overlay_components/chapters_overlay.js":"9","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/mapRender/mapRenderer.js":"10","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/classModel.js":"11","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_teacher_components.js":"12","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/ClassManagement.js":"13","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/ClassDisplay.js":"14","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/StudentManagement.js":"15","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/studentModel.js":"16","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display_2.0.js":"17","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/default_display.js":"18","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/classes_display.js":"19","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/search_display.js":"20","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/student_display.js":"21","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/adding_display.js":"22","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/delete_display.js":"23"},{"size":216,"mtime":1610027073798,"results":"24","hashOfConfig":"25"},{"size":820,"mtime":1610030506264,"results":"26","hashOfConfig":"25"},{"size":2026,"mtime":1610042307465,"results":"27","hashOfConfig":"25"},{"size":5846,"mtime":1614707020190,"results":"28","hashOfConfig":"25"},{"size":2020,"mtime":1614618941900,"results":"29","hashOfConfig":"25"},{"size":5605,"mtime":1610036170378,"results":"30","hashOfConfig":"25"},{"size":2221,"mtime":1611906401710,"results":"31","hashOfConfig":"25"},{"size":4850,"mtime":1614948716618,"results":"32","hashOfConfig":"25"},{"size":13228,"mtime":1610042338199,"results":"33","hashOfConfig":"25"},{"size":177,"mtime":1610027073798,"results":"34","hashOfConfig":"25"},{"size":528,"mtime":1614942741210,"results":"35","hashOfConfig":"25"},{"size":505,"mtime":1610629347226,"results":"36","hashOfConfig":"25"},{"size":7374,"mtime":1611151625229,"results":"37","hashOfConfig":"25"},{"size":6120,"mtime":1612360116861,"results":"38","hashOfConfig":"25"},{"size":2383,"mtime":1610632470403,"results":"39","hashOfConfig":"25"},{"size":612,"mtime":1615208242772,"results":"40","hashOfConfig":"25"},{"size":5781,"mtime":1615207681943,"results":"41","hashOfConfig":"25"},{"size":1621,"mtime":1615208813792,"results":"42","hashOfConfig":"25"},{"size":3127,"mtime":1614968924883,"results":"43","hashOfConfig":"25"},{"size":1545,"mtime":1614980785724,"results":"44","hashOfConfig":"25"},{"size":3033,"mtime":1614980093099,"results":"45","hashOfConfig":"25"},{"size":9068,"mtime":1615208359743,"results":"46","hashOfConfig":"25"},{"size":6771,"mtime":1615127686088,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1g2g4d8",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/index.js",[],["106","107"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/authentification.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/quizModel.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/Main_view.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Map_display.js",["108"],"import React, { Component } from 'react';\nimport Axios from \"axios\";\nimport * as THREE from 'three'\n\n/**\n * @author quentin COSNIER\n * @author Antoine LE BORGNE\n *\n * render map on the screen\n */\nclass MapView extends Component{\n\n    _isMounted = false\n\n    componentDidMount() {\n        this._isMounted = true\n        document.title = \"Game Of Math\"\n\n        this.renderMap(null)\n    }\n\n\n    /**\n     * render a class's map\n     *\n     * @param displayClass the target class\n     */\n    renderMap = (displayClass) =>{\n\n        if(this.mount) {\n\n            Axios.get(\"/api/graphics/map\").then(r => {\n\n                const renderer = new THREE.WebGLRenderer();\n                renderer.setSize(window.innerWidth, window.innerHeight);\n                let camera = new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 0.1, 1000);\n                let scene = new THREE.Scene();\n                scene.background = new THREE.Color(\"#000000\")\n                let mousePressed = false;\n                let rotateX = 0, rotateY = 0;\n                let scrolled = 100;\n                let camDistance = 0;\n                var center = new THREE.Vector3(0, 0, 0)\n                //VARS\n\n                //INPUTS\n                renderer.domElement.addEventListener(\"mousedown\", function (event) {\n                    mousePressed = true;\n                    if (event.shiftKey) rayCasting((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1)\n                }, false)\n                renderer.domElement.addEventListener(\"mouseup\", function (event) {\n                    mousePressed = false;\n                }, false)\n                renderer.domElement.addEventListener(\"mousemove\", function (event) {\n                    if (mousePressed) {\n                        rotateX += event.movementX / 100;\n                        rotateY += event.movementY / 100;\n                    }\n                }, false)\n                document.addEventListener(\"wheel\", function (event) {\n                    scrolled -= event.deltaY\n                }, false)\n                //INPUTS\n\n                //METHODS\n\n                function rayCasting(mouseX, mouseY) {\n                    console.log(\"RayCasting\" + mouseX + \":\" + mouseY)\n                    let rayCaster = new THREE.Raycaster();\n                    rayCaster.setFromCamera(new THREE.Vector2(mouseX, mouseY), camera);\n\n                    let intersects = rayCaster.intersectObjects(scene.children);\n                    console.log(intersects)\n                    if (intersects[0]) {\n                        center = intersects[0].point\n                    }\n                }\n\n                //RENDERING METHOD\n                const animate = function () {\n                    requestAnimationFrame(animate);\n                    camDistance -= scrolled;\n                    camDistance = Math.max(20, camDistance)\n                    camDistance = Math.min(100, camDistance)\n                    camera.position.z = center.z - (camDistance * Math.cos(Math.PI / 4)) * Math.cos(rotateX)\n                    camera.position.x = center.x - (camDistance * Math.cos(Math.PI / 4)) * Math.sin(rotateX)\n                    camera.position.y = camDistance * Math.sin(Math.PI / 4) + 80\n                    camera.lookAt(center)\n                    scrolled = 0\n                    renderer.render(scene, camera);\n                }\n                //RENDERING METHOD\n\n                //DATA COMPUTATION\n                scene.clear();\n                let map = r.data\n                let triangles = map.vertices\n                for (let color of triangles) {\n                    let trianglesData = color[1]\n                    let trianglesColor = color[0]\n                    let geometry = new THREE.BufferGeometry()\n                    let pointsArray = new Float32Array(trianglesData.length * 3 * 3)\n                    for (let i = 0; i < trianglesData.length; i++) {\n                        for (let j = 0; j < trianglesData[i].length; j++) {\n                            pointsArray[i * 9 + j * 3] = trianglesData[i][j].x - map.sizeX / 2\n                            pointsArray[i * 9 + j * 3 + 1] = trianglesData[i][j].z\n                            pointsArray[i * 9 + j * 3 + 2] = trianglesData[i][j].y - map.sizeY / 2\n                        }\n                    }\n                    geometry.setAttribute('position', new THREE.BufferAttribute(pointsArray, 3));\n                    let material = new THREE.MeshBasicMaterial({color: trianglesColor, side: THREE.DoubleSide});\n                    let mesh = new THREE.Mesh(geometry, material)\n                    scene.add(mesh)\n                }\n                //DATA COMPUTATION\n\n                //ENVIRONMENT\n                const geometry = new THREE.PlaneGeometry(1000, 1000);\n                const material = new THREE.MeshBasicMaterial({color: 0x006994, side: THREE.DoubleSide});\n                geometry.rotateX(Math.PI / 2)\n                const plane = new THREE.Mesh(geometry, material);\n                plane.position.y = 79\n                scene.add(plane);\n                scene.fog = new THREE.FogExp2(\"#87ceeb\", 0.005)\n                scene.background = new THREE.Color(0x87ceeb)\n                //ENVIRONMENT\n\n                this.mount.appendChild(renderer.domElement);\n\n                //RENDERING\n                animate();\n            })\n\n\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false\n    }\n\n    render() {\n\n        return <div ref={ref => (this.mount = ref)} />\n\n    }\n\n}\n\nexport default MapView","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Login_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_components.js",["109","110","111","112","113"],"import React, { Component } from 'react';\nimport \"../../styles/global_style.css\";\nimport {getUsername} from \"../../../../model/authentification\";\n\n\n//IMAGES\n\nconst image_icon_user =  \"https://img.icons8.com/material-outlined/35/eff0cf/user--v1.png\"\nconst image_icon_logout =  \"https://img.icons8.com/ios-filled/35/eff0cf/login-rounded-right.png\"\nconst image_icon_quiz =  \"https://img.icons8.com/ios/35/eff0cf/help.png\"\n\n/**\n * @author Antoine LE BORGNE\n *\n * create a main container component\n */\nclass ContainerTitle extends Component{\n\n    constructor(props){\n        super(props)\n        this.props = props;\n    }\n\n\n    render(){\n\n        return<>\n        \n            <div className={this.props.className}>\n                <img className=\"container-title\" src={window.location.origin + \"/logo/game_of_math_logo.png\"}/>\n                {this.props.children}\n            </div>\n        \n        </>\n\n    }\n\n\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * create a text field component\n */\nclass TextField extends Component {\n\n\n    constructor(props){\n        super(props)\n        this.props = props;\n    }\n\n    render(){\n        return <>\n            <input id={this.props.id} onChange={this.props.onChange} value={this.props.value} className=\"textField\" placeholder={this.props.hint} type={this.props.type}/>\n        </>\n    }\n\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * create a simple Button component\n */\nclass Button extends Component{\n\n\n    constructor(props){\n        super(props)\n        this.props = props;\n    }\n\n    render(){\n        return <>\n             <input className=\"button\" type=\"submit\" value={this.props.value} onClick={this.props.onClick}/> \n        </>\n    }\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * create the navigation bar\n */\nclass NavigationBar extends Component{\n\n\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n        this.props = props\n\n        this.state = {\n            username : \"\"\n        }\n\n    }\n\n\n    componentDidMount() {\n\n        this._isMounted = true;\n\n            //get the current username\n            getUsername().then((response) => {\n\n                    if(this._isMounted) {\n\n                        this.setState({\n                            username: response.data.username,\n                        })\n\n                    }\n                })\n\n    }\n\n\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n\n    render() {\n        return <NavBar>\n                    <NavElement icon={image_icon_quiz} id=\"quiz-btn\"  className=\"navElem_left\"   onClick={this.props.quiz} value=\"quiz\"/>\n                    <img src={window.location.origin + '/logo/banner_gom.png'} className=\"navElem_center\"/>\n                    <NavElement icon={image_icon_user}  className=\"navElem_right\"  onClick={this.props.profile} value={this.state.username}/>\n                    <NavElement icon={image_icon_logout}  className=\"navElem_right\"  onClick={this.props.logout} value=\"deconnexion\"/>\n                </NavBar>\n    }\n\n}\n\n\n/**\n * @author Antoine LE BORGNE\n *\n * handle and display navbar\n */\nexport class NavBar extends Component{\n\n    constructor(props){\n        super(props);\n        this.props = props;\n    }\n\n\n    render(){\n        return <>\n            <ul className=\"navbar_container\">\n                {this.props.children}\n            </ul>\n        </>\n    }\n\n}\n\n/**\n * @author Antoine LE BORGNE\n *\n * manage navigation element\n */\nexport class NavElement extends Component{\n\n\n    render() {\n        return <>\n            <li className={this.props.className}>\n\n                <img id={this.props.id} className=\"navbar_link_icon\" onClick={this.props.onClick} src={this.props.icon}/>\n                <a className=\"navbar_link\" onClick={this.props.onClick}>\n                    {this.props.value}\n                </a>\n            </li>\n        </>\n    }\n\n\n}\n\n\nexport class Warning extends Component{\n\n\n    render() {\n\n        return <div className=\"alert_container\">\n            <text className=\"warning_msg\">{this.props.msg}</text>\n\n            <div className=\"warning_btn_section\">\n            {(this.props.cancel) ?\n                <>\n                    <button className=\"warning_ok_btn\"  onClick={this.props.okClick}>Ok</button>\n                    <button className=\"warning_cancel_btn\" onClick={this.props.cancel}>Annuler</button>\n                </>\n                :\n                <button className=\"warning_ok_btn\" onClick={this.props.okClick}>OK</button>\n            }\n            </div>\n        </div>\n\n\n    }\n\n}\n\n\n\nexport class MobileHeader extends Component{\n\n    render() {\n\n        return <div className=\"mobile-header-container\">\n\n            <img src={window.location.origin + '/logo/game_of_math_logo.png'} className=\"mobile-header-title\"/>\n\n        </div>\n    }\n\n}\n\n\n\n//exportation\nexport {ContainerTitle, TextField, Button,NavigationBar};","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/overlay_components/chapters_overlay.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/mapRender/mapRenderer.js",[],["114","115"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/classModel.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_teacher_components.js",["116","117"],"import React,{Component} from \"react\";\nimport '../../styles/teacher_style.css'\nimport {NavBar} from \"./global_components\";\n\nexport class NavigationBar extends Component{\n\n\n    render() {\n\n        return <div className=\"navigation-teacher-container\">\n            <img src={window.location.origin + '/logo/banner_gom.png'} className=\"navigation-teacher-logo\"/>\n            <button className=\"navigation-teacher-logout-btn\" onClick={this.props.handleLogout} >Déconnexion</button>\n        </div>\n\n\n\n    }\n\n}\n",["118","119"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/ClassManagement.js",["120"],"import React, {Component} from \"react\";\nimport {\n    createClass,\n    deleteClass,\n    getAllClasses,\n    updateTheClass,\n} from \"../../../../../model/classModel\";\nimport '../../../styles/teacher_style.css';\n\nexport class ClassManagement extends Component{\n\n    _isMount = false\n\n    constructor() {\n        super();\n\n        this.state =  {\n\n            classes:[],\n            classesList : [],\n            searchValue:\"\",\n            editComponent:null\n\n\n        }\n    }\n\n\n    componentDidMount() {\n        this._isMount = true\n\n        if(this._isMount)\n        this.updateAllClasses()\n\n\n\n    }\n\n    updateAllClasses = ()=>{\n       getAllClasses().then((response) => {\n\n                console.log(response)\n                this.setState({\n                    classes: response.data.classes,\n                })\n                this.render()\n\n            })\n\n    }\n\n    componentWillUnmount() {\n        this._isMount = false\n    }\n\n    displayWaring = () =>{\n\n    }\n\n    //HANDLER\n    handleDeleteClass   = (classID, name) => {\n\n\n\n        this.props.displayWarning(\"êtes vous sûr de vouloir supprimer la classe \"+name ,() => {\n            deleteClass(classID).then(res => {\n                console.log(res)\n                this.props.closeWarning()\n                this.updateAllClasses()\n            })\n\n        })\n        //TODO update the list\n    }\n\n    handleCreateClass = (className, classGrade) => {\n\n\n        createClass(className,classGrade).then((res) => {\n            console.log(res)\n            //this.updateAllClasses()\n        })\n\n    }\n\n    handleEditClass = (id,className, classGrade) => {\n\n\n        updateTheClass(id, className, classGrade).then((res) =>{\n\n            this.updateClasses()\n\n        })\n\n\n    }\n\n    handleSearchInputOnChange = (event) => {\n\n        this.setState({\n            searchValue : event.target.value\n        })\n\n    }\n\n    handleCloseForm = () => {\n        this.props.closeForm()\n        //this.updateAllClasses()\n    }\n\n\n    displayForm = (id,name, grade) =>{\n\n\n        if(id && name && grade){\n            this.props.displayForm(<CreateForm type=\"edit\" edit={this.handleEditClass} id={id} name={name} grade={grade} closeForm={this.handleCloseForm}/>)\n        }else{\n            this.props.displayForm(<CreateForm type=\"create\" updateClasses={this.updateAllClasses} create={this.handleCreateClass} closeForm={this.handleCloseForm}/>)\n        }\n\n\n    }\n\n\n    render() {\n\n        return <>\n\n            <div className=\"classManagement-container\">\n\n            <button onClick={this.displayForm} className=\"add-class-button\">Ajouter</button>\n\n            <input  className=\"class-search-input\" onChange={this.handleSearchInputOnChange} placeholder=\"Rechercher...\" value={this.state.searchValue} type=\"text\" />\n\n\n            <div className=\"classManagement-scroll\">\n\n                {this.state.classes.map((theClass, index) => {\n\n                if(theClass.name.includes(this.state.searchValue) || this.state.searchValue=== \"\") {\n\n                    return <Class\n                        theClass={theClass}\n                        edit={this.displayForm}\n                        open={this.props.openClass}\n                        key={index}\n                        deleteClass={this.handleDeleteClass}\n                    />\n                }\n\n            })}\n\n            </div>\n\n        </div>\n            {this.state.editComponent}\n        </>\n\n    }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n////////////////////////////////// CLASS ////////////////////////////////////////////////////////\nclass Class extends Component{\n\n\n    constructor() {\n        super();\n\n        this.state = {\n            theClass : {\n                classID:0,\n                name:\"\",\n                grade: \"\",\n            },\n            modificationIcon : window.location.origin + \"/icons/edit-icon.png\",\n            gotoIcon : window.location.origin + \"/icons/goto-icon.png\",\n        }\n\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            theClass : this.props.theClass,\n        })\n    }\n\n    handleOpen = () => {\n        this.props.open(this.state.theClass)\n    }\n\n    handleEdit = () => {\n        this.props.edit(this.state.theClass.classID,this.state.theClass.name, this.state.theClass.grade)\n    }\n\n    handleDelete = () =>{\n        this.props.deleteClass(this.state.theClass.classID, this.state.theClass.name)\n    }\n\n\n    render() {\n\n        return <>\n            <div  className=\"class-container\">\n\n                <div className=\"class-control-section\">\n                    <img  className=\"class-delete-btn\" src={window.location.origin + \"/icons/delete-icon.png\"} alt=\"delete\"onClick={this.handleDelete}/>\n                    <img  className=\"class-modify-btn\" src={window.location.origin + \"/icons/edit-icon.png\"} alt=\"modify\" onClick={this.handleEdit}/>\n                    <img onClick={this.handleOpen} className=\"class-goto-btn\" alt=\"go To\" src={window.location.origin + \"/icons/goto-icon.png\"}/>\n                </div>\n\n                <label className=\"class-name-low\">{this.state.theClass.name}</label>\n                <label className=\"class-grade-low\">{this.state.theClass.grade}</label>\n\n            </div>\n        </>\n\n    }\n\n}\n\n\n\n\nclass CreateForm extends Component{\n\n\n    constructor() {\n        super();\n\n        this.state = {\n            id:0,\n            name :\"\",\n            grade:\"\"\n        }\n    }\n\n    componentDidMount() {\n\n        if(this.props.name && this.props.grade){\n            this.setState({\n                id:this.props.id,\n                name:this.props.name,\n                grade:this.props.grade\n            })\n        }\n\n\n    }\n\n    handleValidate = (event) => {\n\n\n\n        if(this.props.type === \"create\"){\n\n\n            if(this.state.name === \"\" || this.state.name === \"\"){\n                alert(\"tout les champs doivent être remplis\")\n                //TODO error style\n            }else{\n\n\n                this.props.create(this.state.name, this.state.grade)\n                //this.props.updateClasses()\n                this.props.closeForm()\n\n\n\n            }\n\n        }else{\n            if((this.state.name !== this.props.name) || (this.state.grade !== this.props.grade)) {\n                this.props.edit(this.state.id, this.state.name, this.state.grade)\n\n            }\n            this.props.closeForm()\n        }\n\n\n\n        event.preventDefault();\n\n\n\n    }\n\n    handleNameChange = (event) => {\n        this.setState({\n            name : event.target.value\n        })\n    }\n\n    handleGradeChange = (event) => {\n        this.setState({\n            grade : event.target.value\n        })\n    }\n\n\n    render() {\n       return <div className=\"class-creation-form-container\">\n            <form onSubmit={this.handleValidate}>\n                <input className=\"edit-class-name-input\" onChange={this.handleNameChange} value={this.state.name} type=\"text\" placeholder=\"Nom\"/>\n                <input className=\"edit-class-grade-input\" onChange={this.handleGradeChange} value={this.state.grade} type=\"text\" placeholder=\"niveau\"/>\n                <div className=\"class-creation-button-section\">\n                    <input className=\"edit-class-cancel-btn\"   onClick={this.props.closeForm}   type=\"button\" value=\"annuler\"/>\n                    <input className=\"edit-class-validate-btn\"  type=\"submit\" value=\"valider\"/>\n                </div>\n            </form>\n        </div>\n    }\n\n\n}","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/ClassDisplay.js",["121","122","123"],"import React, {Component} from \"react\";\nimport '../../../styles/teacher_style.css';\nimport {StudentManagement} from \"./StudentManagement\";\nimport Axios from \"axios\";\nimport * as THREE from \"three\";\n\nexport class ClassDisplay extends Component{\n\n\n\n    constructor() {\n        super();\n\n\n    }\n\n\n    _isMounted = false\n\n    componentDidMount() {\n        this._isMounted = true\n        document.title = \"Game Of Math\"\n\n        this.renderMap(null)\n    }\n\n\n    /**\n     * render a class's map\n     *\n     * @param displayClass the target class\n     */\n    renderMap = (displayClass) =>{\n\n        if(this.mount) {\n\n            Axios.get(\"/api/graphics/map\").then(r => {\n\n                const renderer = new THREE.WebGLRenderer();\n                renderer.setSize(document.getElementById(\"map\").innerWidth,document.getElementById(\"map\").innerHeight);\n                let camera = new THREE.PerspectiveCamera(80, document.getElementById(\"map\").innerWidth / document.getElementById(\"map\").innerHeight, 0.1, 1000);\n                let scene = new THREE.Scene();\n                scene.background = new THREE.Color(\"#000000\")\n                let mousePressed = false;\n                let rotateX = 0, rotateY = 0;\n                let scrolled = 100;\n                let camDistance = 0;\n                var center = new THREE.Vector3(0, 0, 0)\n                //VARS\n\n                //INPUTS\n                renderer.domElement.addEventListener(\"mousedown\", function (event) {\n                    mousePressed = true;\n                    if (event.shiftKey) rayCasting((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1)\n                }, false)\n                renderer.domElement.addEventListener(\"mouseup\", function (event) {\n                    mousePressed = false;\n                }, false)\n                renderer.domElement.addEventListener(\"mousemove\", function (event) {\n                    if (mousePressed) {\n                        rotateX += event.movementX / 100;\n                        rotateY += event.movementY / 100;\n                    }\n                }, false)\n                document.addEventListener(\"wheel\", function (event) {\n                    scrolled -= event.deltaY\n                }, false)\n                //INPUTS\n\n                //METHODS\n\n                function rayCasting(mouseX, mouseY) {\n                    console.log(\"RayCasting\" + mouseX + \":\" + mouseY)\n                    let rayCaster = new THREE.Raycaster();\n                    rayCaster.setFromCamera(new THREE.Vector2(mouseX, mouseY), camera);\n\n                    let intersects = rayCaster.intersectObjects(scene.children);\n                    console.log(intersects)\n                    if (intersects[0]) {\n                        center = intersects[0].point\n                    }\n                }\n\n                //RENDERING METHOD\n                const animate = function () {\n                    requestAnimationFrame(animate);\n                    camDistance -= scrolled;\n                    camDistance = Math.max(20, camDistance)\n                    camDistance = Math.min(100, camDistance)\n                    camera.position.z = center.z - (camDistance * Math.cos(Math.PI / 4)) * Math.cos(rotateX)\n                    camera.position.x = center.x - (camDistance * Math.cos(Math.PI / 4)) * Math.sin(rotateX)\n                    camera.position.y = camDistance * Math.sin(Math.PI / 4) + 80\n                    camera.lookAt(center)\n                    scrolled = 0\n                    renderer.render(scene, camera);\n                }\n                //RENDERING METHOD\n\n                //DATA COMPUTATION\n                scene.clear();\n                let map = r.data\n                let triangles = map.vertices\n                for (let color of triangles) {\n                    let trianglesData = color[1]\n                    let trianglesColor = color[0]\n                    let geometry = new THREE.BufferGeometry()\n                    let pointsArray = new Float32Array(trianglesData.length * 3 * 3)\n                    for (let i = 0; i < trianglesData.length; i++) {\n                        for (let j = 0; j < trianglesData[i].length; j++) {\n                            pointsArray[i * 9 + j * 3] = trianglesData[i][j].x - map.sizeX / 2\n                            pointsArray[i * 9 + j * 3 + 1] = trianglesData[i][j].z\n                            pointsArray[i * 9 + j * 3 + 2] = trianglesData[i][j].y - map.sizeY / 2\n                        }\n                    }\n                    geometry.setAttribute('position', new THREE.BufferAttribute(pointsArray, 3));\n                    let material = new THREE.MeshBasicMaterial({color: trianglesColor, side: THREE.DoubleSide});\n                    let mesh = new THREE.Mesh(geometry, material)\n                    scene.add(mesh)\n                }\n                //DATA COMPUTATION\n\n                //ENVIRONMENT\n                const geometry = new THREE.PlaneGeometry(1000, 1000);\n                const material = new THREE.MeshBasicMaterial({color: 0x006994, side: THREE.DoubleSide});\n                geometry.rotateX(Math.PI / 2)\n                const plane = new THREE.Mesh(geometry, material);\n                plane.position.y = 79\n                scene.add(plane);\n                scene.fog = new THREE.FogExp2(\"#87ceeb\", 0.005)\n                scene.background = new THREE.Color(0x87ceeb)\n                //ENVIRONMENT\n\n                this.mount.appendChild(renderer.domElement);\n\n                //RENDERING\n                animate();\n            })\n\n\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false\n    }\n\n\n\n    render() {\n\n        return <div className=\"class-data-container\">\n            <label className=\"class-title-data\">{this.props.theClass.name}</label>\n            <img onClick={this.props.dispose} src={window.location.origin + \"/icons/delete-icon.png\"} className=\"class-close-btn\"/>\n            <div id=\"map\" className=\"class-map\" ref={ref => (this.mount = ref)} />\n            <StudentManagement theClass={this.props.theClass}/>\n        </div>\n\n\n    }\n\n\n}",["124","125"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/StudentManagement.js",["126","127"],"import React, {Component} from \"react\";\nimport '../../../styles/teacher_style.css';\nimport {getAllStudents} from \"../../../../../model/studentModel\";\nexport class StudentManagement extends Component{\n\n    constructor() {\n        super();\n\n        this.state = {\n\n            studentListData:[],\n            studentListObject:[],\n            searchValue : \"\",\n\n\n        }\n    }\n\n    componentDidMount() {\n\n        this.updateLists()\n\n    }\n\n    updateLists = () => {\n\n\n        getAllStudents(this.props.theClass.classID).then((res) => {\n\n            console.log(res)\n\n            this.setState({\n                studentListData : res.data.students\n            })\n\n\n            this.displayStudent()\n        })\n\n\n    }\n\n\n    displayStudent = () => {\n\n        let items = []\n\n        this.state.studentListData.map((student, index) => {\n\n            if(this.passFilter(student,this.state.searchValue))\n            items.push(\n                <StudentInfo theStudent={student} key={index}/>\n            )\n\n        })\n\n        this.setState({\n            studentListData:items\n        })\n\n\n    }\n\n    passFilter = (theStudent, filter) => {\n\n        return (\n            filter === \"\" ||\n            theStudent.lastname.includes(filter) ||\n            theStudent.firstname.includes(filter) ||\n            theStudent.login.includes(filter)\n        )\n\n    }\n\n    handleSubmit = () => {\n\n\n\n    }\n\n    handleSearch = (event) => {\n        this.setState({\n            searchValue: event.target.value\n        })\n    }\n\n    render() {\n\n\n        return <div className=\"student-list-container\">\n                <button onClick={null} className=\"add-class-button\">Ajouter</button>\n                <input value={this.state.searchValue} placeholder=\"rechercher...\" onChange={this.handleSearch} className=\"class-search-input\"/>\n                <div className=\"student-list\">\n                    {this.state.studentListObject}\n                </div>\n        </div>\n\n\n    }\n}\n\nclass StudentInfo extends Component{\n\n\n    render() {\n\n\n        return <div className=\"student-info-container\">\n            <label className=\"student-name-lower\">{this.props.theStudent.firstname}  {this.props.theStudent.lastname}</label>\n        </div>\n\n\n    }\n}\n\n\n\n\n\nclass EditStudent extends Component{\n\n\n    render() {\n\n\n        return <div>\n            <form onSubmit={null}>\n\n            </form>\n        </div>\n\n\n\n    }\n\n\n}","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/studentModel.js",["128"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display_2.0.js",["129","130"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/default_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/classes_display.js",["131"],"import {Component} from \"react\";\nimport Axios from \"axios\";\nimport {getAllClasses} from \"../../../../../model/classModel\";\nimport {getAllStudents} from \"../../../../../model/studentModel\";\n\nexport class ClassesDisplay extends Component{\n\n    constructor() {\n        super();\n\n        this.state = {\n            currentOverviewClass: null,\n            classesList: []\n        }\n\n    }\n\n    componentDidMount() {\n        this.handleGetClasses()\n    }\n\n    handleGetClasses = () => {\n\n        getAllClasses().then((response) => {\n\n            this.setState({\n                classesList:response.data.classes\n            })\n\n        })\n\n\n\n    }\n\n    handleDisplayOverView = (theClass) => {\n        this.setState({\n            currentOverviewClass: theClass\n        })\n    }\n\n\n    render() {\n        return <div className=\"teacher-default-dashboard-container\">\n\n            <div className=\"teacher-class-list-overview\">\n\n                {this.state.classesList.map( (theClass, index) => {\n                    return <ClassesRow value={theClass} callbackOverView={this.handleDisplayOverView} key={index} theClass={theClass}/>\n                })}\n\n            </div>\n\n            <div className=\"teacher-class-overview\">\n\n                {(this.state.currentOverviewClass)? <ClassOverview theClass={this.state.currentOverviewClass}/> : <h1 className=\"teacher-no-class\">Aucune classe selectionné</h1>}\n\n            </div>\n\n        </div>\n    }\n\n\n}\n\nclass ClassesRow extends Component{\n\n\n\n    handleOpen = () => {\n        this.props.callbackOverView(this.props.theClass)\n    }\n\n\n    render() {\n        return <div onClick={this.handleOpen} className=\"teacher-class-row\">\n            <h1 className=\"teacher-class-row-title\">{this.props.theClass.name}</h1>\n        </div>\n    }\n\n}\n\n\nclass ClassOverview extends Component{\n\n    _mount = false\n\n    constructor() {\n        super();\n\n        this.state = {\n            studentsAmount:0\n        }\n    }\n\n    componentDidMount() {\n        this._mount = true\n        if(this._mount){\n            getAllStudents(this.props.theClass.classID).then(res => {\n                this.setState({\n                    studentsAmount:res.data.students.length\n                })\n\n            })\n        }\n\n    }\n\n    componentWillUnmount() {\n        this._mount = false\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        getAllStudents(this.props.theClass.classID).then(res => {\n            this.setState({\n                studentsAmount:res.data.students.length\n            })\n\n        })\n    }\n\n    render() {\n        return<>\n            <h1 className=\"teacher-class-overview-title\">Nom: {this.props.theClass.name}</h1>\n\n            <div className=\"teacher-class-overview-grade-container\">\n                <h1 className=\"teacher-class-overview-grade-text\">Niveau: {this.props.theClass.grade}</h1>\n            </div>\n\n            <div className=\"teacher-class-overview-numb\">\n                <h1 className=\"teacher-widget-title\">Nombre d'élèves:</h1>\n                <h1 className=\"teacher-widget-classes\">{this.state.studentsAmount}</h1>\n            </div>\n\n        </>\n    }\n\n\n}","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/search_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/student_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/adding_display.js",["132","133"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/delete_display.js",["134","135","136"],"import {Component} from \"react\";\nimport {PopupMessage} from \"../../teacher_display_2.0\";\nimport {createClass, deleteClass, getAllClasses} from \"../../../../../model/classModel\";\n\nexport class DeleteDisplay extends Component{\n\n    constructor() {\n        super();\n\n        this.state = {\n            currentStepScreen: <DeleteSelectStep openPopup={this.handleOpenPopup} previous={this.handlePrevious} next={this.handleNext}/>\n        }\n\n    }\n\n    handleOpenPopup = (Object) => {\n        this.props.openPopup(Object)\n    }\n\n    handleNext = (nextStepDOMObject) => {\n        this.setState({\n            currentStepScreen: nextStepDOMObject\n        })\n    }\n\n    handlePrevious = (previousDomObject) => {\n        this.setState({\n            currentStepScreen: previousDomObject\n        })\n    }\n\n\n\n    render() {\n\n        return <div className=\"teacher-default-dashboard-container\">\n\n            <div className=\"teacher-adding-step-container\">\n                {this.state.currentStepScreen}\n            </div>\n\n\n        </div>\n    }\n\n}\n\n\nclass DeleteSelectStep extends Component{\n\n    // static variables\n    STUDENT_TEXT = \"Un élève\"\n    CLASS_TEXT = \"Une classe\"\n    CHAPTER_TEXT = \"Un Chapitre\"\n    QUESTION_TEXT = \"Une Question\"\n\n    constructor() {\n        super();\n\n        this.state = {\n            currentChoice: \"\",\n            currentChoiceDOM:null,\n\n        }\n    }\n\n\n\n\n\n\n    handleConfirmChoice = () => {\n\n        switch (this.state.currentChoice) {\n            case this.STUDENT_TEXT:\n\n\n\n                break\n            case this.CLASS_TEXT:\n\n                this.props.next(<DeleteClassStep openPopup={this.props.openPopup} closePopup={this.props.closePopup}  next={this.props.next} previous={this.props.previous} />)\n                break\n            case this.CHAPTER_TEXT:\n\n\n                break\n            case this.QUESTION_TEXT:\n\n\n                break\n            default:\n\n                this.props.openPopup(<PopupMessage\n                    message=\"Auccune selection\"\n                    validText=\"OK\"\n                    validateCallback={()=>{\n                        this.props.closePopup()\n                    }\n                    }\n\n                />)\n\n                break\n        }\n\n    }\n\n    handleSelectChoice = (event, text) => {\n\n        if(!this.state.currentChoiceDOM){\n            event.nativeEvent.explicitOriginalTarget.style.backgroundColor = \"var(--secondary_color)\"\n\n            this.setState({\n                currentChoiceDOM :event.nativeEvent.explicitOriginalTarget,\n                currentChoice: text\n            })\n        }else{\n            this.state.currentChoiceDOM.style.backgroundColor = \"var(--primary_color)\"\n            event.nativeEvent.explicitOriginalTarget.style.backgroundColor = \"var(--secondary_color)\"\n\n            this.setState({\n                currentChoiceDOM :event.nativeEvent.explicitOriginalTarget,\n                currentChoice: text\n            })\n        }\n\n    }\n\n\n\n\n    render() {\n        return <div className=\"teacher-selection-container\">\n\n            <h1 className=\"teacher-add-choice-title\">Supprimer</h1>\n\n            <div className=\"teacher-selection-option-list\">\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.STUDENT_TEXT}  />\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.CLASS_TEXT} />\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.CHAPTER_TEXT} />\n                <SelectionChoice onClick={this.handleSelectChoice} title={this.QUESTION_TEXT} />\n\n            </div>\n\n            <button onClick={this.handleConfirmChoice} className=\"teacher-next-btn\" >Suivant</button>\n        </div>\n    }\n\n\n}\n\n\nclass SelectionChoice extends Component{\n\n\n    handleClick = (event) =>{\n\n        this.props.onClick(event, this.props.title)\n    }\n\n\n\n\n\n    render() {\n        return <div onClick={this.handleClick} className=\"teacher-selection-choice-container\">\n            <h1 className=\"teacher-selection-choice-text\">{this.props.title}</h1>\n        </div>\n    }\n\n\n}\n\n\n\n///////////////////////| DELETE STUDENT |/////////////////////////\n\n\n///////////////////////| DELETE CLASS |///////////////////////////\n\n\n\n\nclass DeleteClassStep extends Component{\n\n\n    constructor() {\n        super();\n\n        this.state = {\n            currentChoiceDOM:null,\n            currentCLassID:-1,\n            classesList: []\n        }\n    }\n\n    handleGetClasses = () => {\n\n        getAllClasses().then((response) => {\n\n            this.setState({\n                classesList:response.data.classes\n            })\n\n        })\n\n\n\n    }\n\n    componentDidMount() {\n        this.handleGetClasses()\n    }\n\n\n    handleSelectChoice = (event, id) => {\n\n\n        if(!this.state.currentChoiceDOM){\n            event.nativeEvent.explicitOriginalTarget.style.backgroundColor = \"var(--secondary_color)\"\n\n            this.setState({\n                currentChoiceDOM :event.nativeEvent.explicitOriginalTarget,\n                currentCLassID: id\n            })\n        }else{\n            this.state.currentChoiceDOM.style.backgroundColor = \"var(--primary_color)\"\n            event.nativeEvent.explicitOriginalTarget.style.backgroundColor = \"var(--secondary_color)\"\n\n            this.setState({\n                currentChoiceDOM :event.nativeEvent.explicitOriginalTarget,\n                currentCLassID: id\n            })\n        }\n\n\n\n    }\n\n\n\n    handleValidate = (event) => {\n\n        deleteClass(this.state.currentCLassID).then(res => {\n            console.log(res)\n            this.handleGetClasses()\n        })\n\n    }\n\n    handlePrevious = () => {\n        this.props.previous(<DeleteSelectStep previous={this.props.previous} next={this.props.next} />)\n    }\n\n    render() {\n        return <div className=\"teacher-add-student-step\">\n\n\n            <div className=\"teacher-class-list-delete\">\n\n                {this.state.classesList.map( (theClass, index) => {\n                    return <ClassesRow value={theClass} onClick={this.handleSelectChoice} key={index} theClass={theClass}/>\n                })}\n\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n\n            </div>\n\n            <button className=\"teacher-class-valid-delete-btn\" onClick={this.handleValidate} >Valider</button>\n\n\n\n            <button onClick={this.handlePrevious} className=\"teacher-previous-btn\" >Précedent</button>\n        </div>\n    }\n\n}\n\n\nclass ClassesRow extends Component{\n\n\n\n    handleOpen = (event) => {\n        this.props.onClick(event,this.props.theClass.classID)\n    }\n\n\n    render() {\n        return <div onClick={this.handleOpen} className=\"teacher-class-row\">\n            <h1 className=\"teacher-class-row-title\">{this.props.theClass.name}</h1>\n        </div>\n    }\n\n}\n",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":57,"column":25,"nodeType":"143","messageId":"144","endLine":57,"endColumn":32},{"ruleId":"145","severity":1,"message":"146","line":30,"column":17,"nodeType":"147","endLine":30,"endColumn":112},{"ruleId":"145","severity":1,"message":"146","line":137,"column":21,"nodeType":"147","endLine":137,"endColumn":108},{"ruleId":"145","severity":1,"message":"146","line":181,"column":17,"nodeType":"147","endLine":181,"endColumn":122},{"ruleId":"148","severity":1,"message":"149","line":182,"column":17,"nodeType":"147","endLine":182,"endColumn":73},{"ruleId":"145","severity":1,"message":"146","line":226,"column":13,"nodeType":"147","endLine":226,"endColumn":112},{"ruleId":"137","replacedBy":"150"},{"ruleId":"139","replacedBy":"151"},{"ruleId":"141","severity":1,"message":"152","line":3,"column":9,"nodeType":"143","messageId":"144","endLine":3,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":11,"column":13,"nodeType":"147","endLine":11,"endColumn":109},{"ruleId":"137","replacedBy":"153"},{"ruleId":"139","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":138,"column":59,"nodeType":"157","messageId":"158","endLine":138,"endColumn":61},{"ruleId":"159","severity":1,"message":"160","line":11,"column":5,"nodeType":"161","messageId":"162","endLine":15,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":62,"column":25,"nodeType":"143","messageId":"144","endLine":62,"endColumn":32},{"ruleId":"145","severity":1,"message":"146","line":153,"column":13,"nodeType":"147","endLine":153,"endColumn":132},{"ruleId":"137","replacedBy":"163"},{"ruleId":"139","replacedBy":"164"},{"ruleId":"155","severity":1,"message":"165","line":48,"column":57,"nodeType":"157","messageId":"166","endLine":48,"endColumn":59},{"ruleId":"141","severity":1,"message":"167","line":120,"column":7,"nodeType":"143","messageId":"144","endLine":120,"endColumn":18},{"ruleId":"141","severity":1,"message":"168","line":2,"column":9,"nodeType":"143","messageId":"144","endLine":2,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":75,"column":17,"nodeType":"147","endLine":75,"endColumn":113},{"ruleId":"145","severity":1,"message":"146","line":124,"column":13,"nodeType":"147","endLine":124,"endColumn":81},{"ruleId":"141","severity":1,"message":"169","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":13},{"ruleId":"141","severity":1,"message":"170","line":3,"column":24,"nodeType":"143","messageId":"144","endLine":3,"endColumn":41},{"ruleId":"171","severity":1,"message":"172","line":117,"column":13,"nodeType":"173","endLine":117,"endColumn":46},{"ruleId":"141","severity":1,"message":"174","line":3,"column":9,"nodeType":"143","messageId":"144","endLine":3,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":119,"column":13,"nodeType":"173","endLine":119,"endColumn":46},{"ruleId":"171","severity":1,"message":"172","line":228,"column":13,"nodeType":"173","endLine":228,"endColumn":46},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'rotateY' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["175"],["176"],"'NavBar' is defined but never used.",["175"],["176"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["175"],["176"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'EditStudent' is defined but never used.","'getAllClasses' is defined but never used.","'Axios' is defined but never used.","'getAllTheStudents' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'createClass' is defined but never used.","no-global-assign","no-unsafe-negation"]