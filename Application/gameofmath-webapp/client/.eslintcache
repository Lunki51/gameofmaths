[{"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/index.js":"1","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/authentification.js":"2","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/quizModel.js":"3","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/Main_view.js":"4","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display.js":"5","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Map_display.js":"6","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Login_display.js":"7","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_components.js":"8","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/overlay_components/chapters_overlay.js":"9","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/mapRender/mapRenderer.js":"10"},{"size":216,"mtime":1610027073798,"results":"11","hashOfConfig":"12"},{"size":820,"mtime":1610030506264,"results":"13","hashOfConfig":"12"},{"size":2026,"mtime":1610042307465,"results":"14","hashOfConfig":"12"},{"size":4855,"mtime":1610030679369,"results":"15","hashOfConfig":"12"},{"size":594,"mtime":1610027073798,"results":"16","hashOfConfig":"12"},{"size":5605,"mtime":1610036170378,"results":"17","hashOfConfig":"12"},{"size":2254,"mtime":1610027073798,"results":"18","hashOfConfig":"12"},{"size":4395,"mtime":1610044037990,"results":"19","hashOfConfig":"12"},{"size":13228,"mtime":1610042338199,"results":"20","hashOfConfig":"12"},{"size":177,"mtime":1610027073798,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1g2g4d8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/index.js",[],["47","48"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/authentification.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/quizModel.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/Main_view.js",["49"],"import React, {Component} from 'react';\n\n//MODEL\nimport auth, {getType, isAuth} from \"../../model/authentification\";\n\nimport LoginView from \"./main_components/Login_display\";\nimport {MobileHeader, NavigationBar} from \"./main_components/components/global_components\";\nimport MapView from \"./main_components/Map_display\";\nimport Axios from \"axios\";\nimport {Quiz} from \"./overlay_components/chapters_overlay\";\nimport {TeacherDisplay} from \"./main_components/teacher_display\";\nimport {quitQuiz} from \"../../model/quizModel\";\n\n/**\n * @author ANtoine LE BORGNE\n *\n * create the main of the app\n */\nclass MainView extends Component {\n\n\n    _isMounted = false\n\n    constructor() {\n\n        super();\n\n\n        this.state = {\n\n            isLogged: () => {\n                isAuth()\n                    .then((res) => {\n                        return res.data.isLogged\n                    })\n            },\n            overlayComponent: null,\n            whatOnOverlay: \"\",\n            mapAccess: true,\n            who: \"\",\n            username: \"\",\n\n        }\n\n\n    }\n\n\n    componentDidMount() {\n\n        this._isMounted = true\n\n\n        //Check if the user is authenticated\n        isAuth()\n            .then((res) => {\n\n                if (this._isMounted) {\n                    if (res.data.returnState === 0) {\n                        if (res.data.isLogged === true) {\n                            document.title = \"Game Of Math\"\n                        }\n\n                        getType().then((response) => {\n\n                            if(response.data.returnState === 0){\n                                this.setState({\n                                    isLogged: res.data.isLogged,\n                                    who:response.data.type\n                                })\n                            }\n\n                        })\n\n\n                    }\n                }\n            })\n\n    }\n\n\n    //HANDLER\n\n    /**\n     * handle submit button and redirect to the\n     * authentication handler\n     *\n     * @param event mostly onClick\n     */\n    handleLogin = (event) => {\n\n        //get input's form values\n        const username = event.target[0].value\n        const password = event.target[1].value\n\n        //check authentication\n        auth(username, password)\n            .then((response) => {\n                //if wrong password or login\n\n                if (response.data.returnState === 1) {\n                    //TODO put styled error message\n                    alert(response.data.msg)\n\n                } else if (response.data.returnState === 0) {\n                    isAuth()\n                        .then((res) => {\n                            if (res.data.returnState === 0) {\n                                document.title = \"Game Of Math\"\n                                this.setState({\n                                    isLogged: res.data.isLogged,\n                                    who: response.data.type\n                                })\n\n                            }\n                        })\n                }\n\n            })\n\n\n        event.preventDefault();\n\n    }\n\n    /**\n     * handle the logout of the user\n     *\n     */\n    handleLogout = () => {\n\n        Axios.post(\"/api/user/logout\").then((res) => {\n\n            if (res.data.returnState === 0)\n                this.setState({\n                    isLogged: false\n                })\n        })\n    }\n\n    /**\n     *handle the quiz visibility\n     */\n    handleQuizDisplay = () => {\n\n        if (this.state.whatOnOverlay === \"quiz\") {\n\n            document.getElementById('quiz-btn').style.shadowfilter = \"none\"\n\n            this.setState({\n                overlayComponent: null,\n                whatOnOverlay: \"\"\n\n            })\n        } else {\n            document.getElementById('quiz-btn').style.shadowfilter = \"filter : drop-shadow(0px 0px 0px 3px #fff);\"\n            this.setState({\n                overlayComponent: <Quiz/>,\n                whatOnOverlay: \"quiz\"\n            })\n        }\n\n    }\n\n\n\n\n    componentWillUnmount() {\n        this._isMounted = false\n    }\n\n\n    render() {\n\n        if (this.state.isLogged === true) {\n            //the user is logged\n\n            if (this.state.who === \"student\") {\n\n                //user is a student\n                return <>\n\n                    <MobileHeader/>{/*appear only when mobile*/}\n                    <NavigationBar quiz={this.handleQuizDisplay} logout={this.handleLogout}/>\n                    <MapView/>\n                    {this.state.overlayComponent}\n                </>\n\n            } else {\n\n                //user is a teacher\n                return <TeacherDisplay logout={this.handleLogout}/>\n\n            }\n\n        } else {\n\n            //the user is not logged\n            return <LoginView handleLogin={this.handleLogin}/>\n\n        }\n\n\n    }\n\n\n}\n\n\nexport default MainView;","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display.js",["50"],"import React, { Component } from 'react';\n\nexport class TeacherDisplay extends Component{\n\n\n\n    //HANDLERS\n\n\n\n\n\n    //quiz\n    handleDeleteQuiz    = (event) => {\n\n    }\n\n    handleCreateQuiz    = (event) => {\n\n    }\n\n\n    //students\n    handleDeleteStudent = (event) => {\n\n    }\n\n    handleCreateStudent = (event) => {\n\n    }\n\n    //class\n    handleDeleteClass   = (event) => {\n\n    }\n\n    handleCreateClass   = (event) => {\n\n    }\n\n    render() {\n        return <>\n\n            <h1>LOGGED HAS TEACHER</h1>\n            <button onClick={this.props.logout}>LOGOUT</button>\n            <img src={window.location.origin + '/favicon.ico'} />\n\n        </>\n    }\n\n\n}","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Map_display.js",["51"],"import React, { Component } from 'react';\nimport Axios from \"axios\";\nimport * as THREE from 'three'\n\n/**\n * @author quentin COSNIER\n * @author Antoine LE BORGNE\n *\n * render map on the screen\n */\nclass MapView extends Component{\n\n    _isMounted = false\n\n    componentDidMount() {\n        this._isMounted = true\n        document.title = \"Game Of Math\"\n\n        this.renderMap(null)\n    }\n\n\n    /**\n     * render a class's map\n     *\n     * @param displayClass the target class\n     */\n    renderMap = (displayClass) =>{\n\n        if(this.mount) {\n\n            Axios.get(\"/api/graphics/map\").then(r => {\n\n                const renderer = new THREE.WebGLRenderer();\n                renderer.setSize(window.innerWidth, window.innerHeight);\n                let camera = new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 0.1, 1000);\n                let scene = new THREE.Scene();\n                scene.background = new THREE.Color(\"#000000\")\n                let mousePressed = false;\n                let rotateX = 0, rotateY = 0;\n                let scrolled = 100;\n                let camDistance = 0;\n                var center = new THREE.Vector3(0, 0, 0)\n                //VARS\n\n                //INPUTS\n                renderer.domElement.addEventListener(\"mousedown\", function (event) {\n                    mousePressed = true;\n                    if (event.shiftKey) rayCasting((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1)\n                }, false)\n                renderer.domElement.addEventListener(\"mouseup\", function (event) {\n                    mousePressed = false;\n                }, false)\n                renderer.domElement.addEventListener(\"mousemove\", function (event) {\n                    if (mousePressed) {\n                        rotateX += event.movementX / 100;\n                        rotateY += event.movementY / 100;\n                    }\n                }, false)\n                document.addEventListener(\"wheel\", function (event) {\n                    scrolled -= event.deltaY\n                }, false)\n                //INPUTS\n\n                //METHODS\n\n                function rayCasting(mouseX, mouseY) {\n                    console.log(\"RayCasting\" + mouseX + \":\" + mouseY)\n                    let rayCaster = new THREE.Raycaster();\n                    rayCaster.setFromCamera(new THREE.Vector2(mouseX, mouseY), camera);\n\n                    let intersects = rayCaster.intersectObjects(scene.children);\n                    console.log(intersects)\n                    if (intersects[0]) {\n                        center = intersects[0].point\n                    }\n                }\n\n                //RENDERING METHOD\n                const animate = function () {\n                    requestAnimationFrame(animate);\n                    camDistance -= scrolled;\n                    camDistance = Math.max(20, camDistance)\n                    camDistance = Math.min(100, camDistance)\n                    camera.position.z = center.z - (camDistance * Math.cos(Math.PI / 4)) * Math.cos(rotateX)\n                    camera.position.x = center.x - (camDistance * Math.cos(Math.PI / 4)) * Math.sin(rotateX)\n                    camera.position.y = camDistance * Math.sin(Math.PI / 4) + 80\n                    camera.lookAt(center)\n                    scrolled = 0\n                    renderer.render(scene, camera);\n                }\n                //RENDERING METHOD\n\n                //DATA COMPUTATION\n                scene.clear();\n                let map = r.data\n                let triangles = map.vertices\n                for (let color of triangles) {\n                    let trianglesData = color[1]\n                    let trianglesColor = color[0]\n                    let geometry = new THREE.BufferGeometry()\n                    let pointsArray = new Float32Array(trianglesData.length * 3 * 3)\n                    for (let i = 0; i < trianglesData.length; i++) {\n                        for (let j = 0; j < trianglesData[i].length; j++) {\n                            pointsArray[i * 9 + j * 3] = trianglesData[i][j].x - map.sizeX / 2\n                            pointsArray[i * 9 + j * 3 + 1] = trianglesData[i][j].z\n                            pointsArray[i * 9 + j * 3 + 2] = trianglesData[i][j].y - map.sizeY / 2\n                        }\n                    }\n                    geometry.setAttribute('position', new THREE.BufferAttribute(pointsArray, 3));\n                    let material = new THREE.MeshBasicMaterial({color: trianglesColor, side: THREE.DoubleSide});\n                    let mesh = new THREE.Mesh(geometry, material)\n                    scene.add(mesh)\n                }\n                //DATA COMPUTATION\n\n                //ENVIRONMENT\n                const geometry = new THREE.PlaneGeometry(1000, 1000);\n                const material = new THREE.MeshBasicMaterial({color: 0x006994, side: THREE.DoubleSide});\n                geometry.rotateX(Math.PI / 2)\n                const plane = new THREE.Mesh(geometry, material);\n                plane.position.y = 79\n                scene.add(plane);\n                scene.fog = new THREE.FogExp2(\"#87ceeb\", 0.005)\n                scene.background = new THREE.Color(0x87ceeb)\n                //ENVIRONMENT\n\n                this.mount.appendChild(renderer.domElement);\n\n                //RENDERING\n                animate();\n            })\n\n\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false\n    }\n\n    render() {\n\n        return <div ref={ref => (this.mount = ref)} />\n\n    }\n\n}\n\nexport default MapView","/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Login_display.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_components.js",["52","53","54","55"],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/overlay_components/chapters_overlay.js",[],"/home/antoine/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/mapRender/mapRenderer.js",[],["56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":12,"column":9,"nodeType":"64","messageId":"65","endLine":12,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":46,"column":13,"nodeType":"68","endLine":46,"endColumn":66},{"ruleId":"62","severity":1,"message":"69","line":57,"column":25,"nodeType":"64","messageId":"65","endLine":57,"endColumn":32},{"ruleId":"66","severity":1,"message":"67","line":137,"column":21,"nodeType":"68","endLine":137,"endColumn":115},{"ruleId":"66","severity":1,"message":"67","line":182,"column":17,"nodeType":"68","endLine":182,"endColumn":122},{"ruleId":"70","severity":1,"message":"71","line":183,"column":17,"nodeType":"68","endLine":183,"endColumn":73},{"ruleId":"66","severity":1,"message":"67","line":222,"column":13,"nodeType":"68","endLine":222,"endColumn":112},{"ruleId":"58","replacedBy":"72"},{"ruleId":"60","replacedBy":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'quitQuiz' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'rotateY' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["74"],["75"],"no-global-assign","no-unsafe-negation"]