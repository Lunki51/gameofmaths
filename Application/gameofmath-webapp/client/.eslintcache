[{"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/index.js":"1","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/Main_view.js":"2","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Login_display.js":"3","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/authentification.js":"4","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display_2.0.js":"5","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_components.js":"6","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Map_display.js":"7","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/overlay_components/chapters_overlay.js":"8","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/quizModel.js":"9","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/student_display.js":"10","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/classes_display.js":"11","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/search_display.js":"12","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/default_display.js":"13","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/adding_display.js":"14","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/edit_display.js":"15","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/delete_display.js":"16","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/classModel.js":"17","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/studentModel.js":"18","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/chapterModel.js":"19"},{"size":224,"mtime":1616426562172,"results":"20","hashOfConfig":"21"},{"size":6093,"mtime":1616577589145,"results":"22","hashOfConfig":"21"},{"size":2307,"mtime":1616577589146,"results":"23","hashOfConfig":"21"},{"size":870,"mtime":1616426562174,"results":"24","hashOfConfig":"21"},{"size":6407,"mtime":1616577589159,"results":"25","hashOfConfig":"21"},{"size":5085,"mtime":1616577589147,"results":"26","hashOfConfig":"21"},{"size":13750,"mtime":1616576868004,"results":"27","hashOfConfig":"21"},{"size":13797,"mtime":1616577634791,"results":"28","hashOfConfig":"21"},{"size":2410,"mtime":1616664666857,"results":"29","hashOfConfig":"21"},{"size":3522,"mtime":1616577589157,"results":"30","hashOfConfig":"21"},{"size":3401,"mtime":1616577589153,"results":"31","hashOfConfig":"21"},{"size":1611,"mtime":1616577589157,"results":"32","hashOfConfig":"21"},{"size":1691,"mtime":1616577589154,"results":"33","hashOfConfig":"21"},{"size":19853,"mtime":1616665395281,"results":"34","hashOfConfig":"21"},{"size":16703,"mtime":1616591987551,"results":"35","hashOfConfig":"21"},{"size":17634,"mtime":1616580442308,"results":"36","hashOfConfig":"21"},{"size":678,"mtime":1616577589143,"results":"37","hashOfConfig":"21"},{"size":1617,"mtime":1616577589144,"results":"38","hashOfConfig":"21"},{"size":490,"mtime":1616580502772,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1790kx0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/index.js",[],["85","86"],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/Main_view.js",[],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Login_display.js",[],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/authentification.js",[],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/teacher_display_2.0.js",["87","88"],"import {Component} from \"react\";\r\nimport '../styles/teacher_style20.css';\r\nimport '../styles/global_variables.css';\r\nimport {DefaultDisplay} from \"./components/teacher_components/default_display\";\r\nimport {ClassesDisplay} from \"./components/teacher_components/classes_display\";\r\nimport {SearchDisplay} from \"./components/teacher_components/search_display\";\r\nimport {StudentDisplay} from \"./components/teacher_components/student_display\";\r\nimport {AddingDisplay} from \"./components/teacher_components/adding_display\";\r\nimport {DeleteDisplay} from \"./components/teacher_components/delete_display\";\r\nimport {EditDisplay} from \"./components/teacher_components/edit_display\";\r\n\r\n\r\nexport class TeacherDisplay20 extends Component{\r\n\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        document.title = \"Dashboard | Game Of Math\"\r\n\r\n        this.state = {\r\n            currentDisplay : <DefaultDisplay/>,\r\n            hoverElement: null,\r\n            msgElement: null,\r\n        }\r\n    }\r\n\r\n\r\n    ////////////////| TEACHER ROUTER |//////////////\r\n\r\n    handleGotoDefault = () => {\r\n        this.setState({currentDisplay: <DefaultDisplay/> })\r\n    }\r\n\r\n    handleGotoClasses = () =>{\r\n        this.setState({currentDisplay: <ClassesDisplay/>})\r\n    }\r\n\r\n    handleGotoStudents = () => {\r\n        this.setState({currentDisplay: <StudentDisplay/>})\r\n    }\r\n    handleGotoAdding = () => {\r\n        this.setState({currentDisplay: <AddingDisplay redirect={this.handleRedirectTo}  openPopup={this.handleCreatePopup} closePopup={this.handleDismissPopup}/>})\r\n    }\r\n\r\n    handleGotoDelete = () => {\r\n        this.setState({currentDisplay: <DeleteDisplay redirect={this.handleRedirectTo} openPopup={this.handleCreatePopup} closePopup={this.handleDismissPopup}/>})\r\n    }\r\n\r\n    handleGotoEdit = () => {\r\n        this.setState({currentDisplay: <EditDisplay redirect={this.handleRedirectTo} openPopup={this.handleCreatePopup} closePopup={this.handleDismissPopup}/>})\r\n    }\r\n\r\n    handleRedirectTo(goalElement){\r\n        this.setState({currentDisplay: goalElement})\r\n    }\r\n\r\n    ////////////////////////////////////////////////\r\n\r\n    handleOpenSearch = () => {\r\n        this.setState({hoverElement: <SearchDisplay dismiss={this.handleDismissHoverElement}/>})\r\n    }\r\n\r\n    handleDismissHoverElement = () => {\r\n        this.setState({hoverElement:null})\r\n    }\r\n\r\n\r\n    handleCreatePopup = (PopupMessageObject) => {\r\n        this.setState({\r\n            msgElement: PopupMessageObject\r\n        })\r\n    }\r\n\r\n    handleDismissPopup = () => {\r\n        this.setState({msgElement:null})\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"background\">\r\n\r\n            {/*///////////////////| DESKTOP VIEW |////////////////////*/}\r\n            <div className=\"teacher-logo-container\">\r\n                <img className=\"teacher-GOM-logo\" src={window.location.origin + \"/logo/game_of_math_logo.png\"}/>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <nav className=\"teacher-nav-container\">\r\n\r\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/dashboard.png\" title=\"Dashboard\" onClick={this.handleGotoDefault}/>\r\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/dotty/55/ffffff/class.png\" title=\"Classes\" onClick={this.handleGotoClasses}/>\r\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/student-male--v1.png\" title=\"Élèves\" onClick={this.handleGotoStudents}/>\r\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/question-mark--v1.png\" title=\"Questions\"/>\r\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/add-column.png\" title=\"Ajouter\" onClick={this.handleGotoAdding}/>\r\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/add-trash.png\" title=\"Supprimer\" onClick={this.handleGotoDelete}/>\r\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/edit--v1.png\" title=\"Éditer\" onClick={this.handleGotoEdit}/>\r\n                <NavElement typeClass=\"teacher-nav-element-stack-top\" iconURL=\"https://img.icons8.com/ios/55/ffffff/search--v1.png\" title=\"Rechercher\" onClick={this.handleOpenSearch}/>\r\n\r\n                <NavElement typeClass=\"teacher-nav-element-stack-bottom\" iconURL=\"https://img.icons8.com/fluent-systems-regular/55/ffffff/settings.png\" title=\"Paramètres\"/>\r\n                <NavElement typeClass=\"teacher-nav-element-stack-bottom\" iconURL=\"https://img.icons8.com/fluent-systems-regular/55/ffffff/logout-rounded-left.png\" title=\"Déconnexion\" onClick={this.props.logout}/>\r\n\r\n\r\n            </nav>\r\n\r\n\r\n            {/*///////////////////| MOBILE VIEW |////////////////////*/}\r\n\r\n\r\n\r\n\r\n\r\n            {/*///////////////////////| GLOBAL VIEW |//////////////////////*/}\r\n            {this.state.currentDisplay}\r\n            {this.state.hoverElement}\r\n\r\n        </div>\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass NavElement extends Component{\r\n\r\n    render() {\r\n\r\n        return <div onClick={this.props.onClick} className={this.props.typeClass} >\r\n\r\n            <img className=\"teacher-nav-element-icon\" src={this.props.iconURL}/>\r\n            <h3 className=\"teacher-nav-element-title\" >{this.props.title}</h3>\r\n\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PopupMessage extends Component{\r\n\r\n    render() {\r\n\r\n        return <div className=\"dim-background\">\r\n                    <div className=\"teacher-popup-message-container\">\r\n                        <div className=\"teacher-popup-message-limit\">\r\n                            <p>\r\n                                {this.props.message}\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"teacher-popup-message-btn-section\">\r\n                            <button className=\"teacher-popup-message-btn-valid\" onClick={this.props.validateCallback}>{this.props.validText}</button>\r\n\r\n                            {(this.props.cancelText)?<button className=\"teacher-popup-message-btn-cancel\" onClick={this.props.cancelCallback}>{this.props.cancelText}</button>:\r\n                            null}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n    }\r\n}","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/global_components.js",["89","90","91","92","93"],"import React, { Component } from 'react';\r\nimport \"../../styles/global_style.css\";\r\nimport {getUsername} from \"../../../../model/authentification\";\r\n\r\n\r\n//IMAGES\r\n\r\nconst image_icon_user =  \"https://img.icons8.com/material-outlined/35/eff0cf/user--v1.png\"\r\nconst image_icon_logout =  \"https://img.icons8.com/ios-filled/35/eff0cf/login-rounded-right.png\"\r\nconst image_icon_quiz =  \"https://img.icons8.com/ios/35/eff0cf/help.png\"\r\n\r\n/**\r\n * @author Antoine LE BORGNE\r\n *\r\n * create a main container component\r\n */\r\nclass ContainerTitle extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.props = props;\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return<>\r\n        \r\n            <div className={this.props.className}>\r\n                <img className=\"container-title\" src={window.location.origin + \"/logo/game_of_math_logo.png\"}/>\r\n                {this.props.children}\r\n            </div>\r\n        \r\n        </>\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/**\r\n * @author Antoine LE BORGNE\r\n *\r\n * create a text field component\r\n */\r\nclass TextField extends Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.props = props;\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            <input id={this.props.id} onChange={this.props.onChange} value={this.props.value} className=\"textField\" placeholder={this.props.hint} type={this.props.type}/>\r\n        </>\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n/**\r\n * @author Antoine LE BORGNE\r\n *\r\n * create a simple Button component\r\n */\r\nclass Button extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.props = props;\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n             <input className=\"button\" type=\"submit\" value={this.props.value} onClick={this.props.onClick}/> \r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @author Antoine LE BORGNE\r\n *\r\n * create the navigation bar\r\n */\r\nclass NavigationBar extends Component{\r\n\r\n\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props\r\n\r\n        this.state = {\r\n            username : \"\"\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        this._isMounted = true;\r\n\r\n            //get the current username\r\n            getUsername().then((response) => {\r\n\r\n                    if(this._isMounted) {\r\n\r\n                        this.setState({\r\n                            username: response.data.username,\r\n                        })\r\n\r\n                    }\r\n                })\r\n\r\n    }\r\n\r\n\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n\r\n    render() {\r\n        return <NavBar>\r\n                    <NavElement icon={image_icon_quiz} id=\"quiz-btn\"  className=\"navElem_left\"   onClick={this.props.quiz} value=\"quiz\"/>\r\n                    <img src={window.location.origin + '/logo/banner_gom.png'} className=\"navElem_center\"/>\r\n                    <NavElement icon={image_icon_user}  className=\"navElem_right\"  onClick={this.props.profile} value={this.state.username}/>\r\n                    <NavElement icon={image_icon_logout}  className=\"navElem_right\"  onClick={this.props.logout} value=\"deconnexion\"/>\r\n                </NavBar>\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @author Antoine LE BORGNE\r\n *\r\n * handle and display navbar\r\n */\r\nexport class NavBar extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n\r\n    render(){\r\n        return <>\r\n            <ul className=\"navbar_container\">\r\n                {this.props.children}\r\n            </ul>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @author Antoine LE BORGNE\r\n *\r\n * manage navigation element\r\n */\r\nexport class NavElement extends Component{\r\n\r\n\r\n    render() {\r\n        return <>\r\n            <li className={this.props.className}>\r\n\r\n                <img id={this.props.id} className=\"navbar_link_icon\" onClick={this.props.onClick} src={this.props.icon}/>\r\n                <a className=\"navbar_link\" onClick={this.props.onClick}>\r\n                    {this.props.value}\r\n                </a>\r\n            </li>\r\n        </>\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class Warning extends Component{\r\n\r\n\r\n    render() {\r\n\r\n        return <div className=\"alert_container\">\r\n            <text className=\"warning_msg\">{this.props.msg}</text>\r\n\r\n            <div className=\"warning_btn_section\">\r\n            {(this.props.cancel) ?\r\n                <>\r\n                    <button className=\"warning_ok_btn\"  onClick={this.props.okClick}>Ok</button>\r\n                    <button className=\"warning_cancel_btn\" onClick={this.props.cancel}>Annuler</button>\r\n                </>\r\n                :\r\n                <button className=\"warning_ok_btn\" onClick={this.props.okClick}>OK</button>\r\n            }\r\n            </div>\r\n        </div>\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport class MobileHeader extends Component{\r\n\r\n    render() {\r\n\r\n        return <div className=\"mobile-header-container\">\r\n\r\n            <img src={window.location.origin + '/logo/game_of_math_logo.png'} className=\"mobile-header-title\"/>\r\n\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n//exportation\r\nexport {ContainerTitle, TextField, Button,NavigationBar};","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/Map_display.js",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],"import React, {Component} from 'react';\r\nimport * as THREE from 'three'\r\nimport {Color, MeshStandardMaterial} from 'three'\r\nimport {GUI} from \"dat.gui\";\r\nimport {Water} from \"three/examples/jsm/objects/Water\";\r\nimport {Sky} from \"three/examples/jsm/objects/Sky\"\r\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport {BufferGeometryUtils} from 'three/examples/jsm/utils/BufferGeometryUtils';\r\nimport Axios from \"axios\";\r\nimport Stats from \"stats.js\"\r\n\r\n\r\n/**\r\n * @author quentin COSNIER\r\n * @author Antoine LE BORGNE\r\n *\r\n * render map on the screen\r\n */\r\nclass MapView extends Component {\r\n\r\n    _isMounted = false\r\n\r\n\r\n    constructor(props: P, context: any) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            renderer: new THREE.WebGLRenderer(),\r\n            camera: new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 1, 2000),\r\n            scene: new THREE.Scene(),\r\n            center: new THREE.Vector3(0, 80, 0),\r\n            sun: new THREE.Vector3(),\r\n            water: new Water(),\r\n            stats: new Stats(),\r\n            currentCastle: 0,\r\n            castles: new Array(),\r\n            inputVars: {\r\n                mousePressed: false,\r\n                rotateX: 0,\r\n                rotateY: 0,\r\n                scrolled: 100,\r\n                camDistance: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true\r\n\r\n        document.title = \"Game Of Math\"\r\n\r\n\r\n        this.state.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.state.renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n\r\n        this.renderMap(null)\r\n    }\r\n\r\n\r\n    animate = () => {\r\n\r\n        requestAnimationFrame(this.animate);\r\n        this.state.stats.begin();\r\n        this.state.inputVars.camDistance -= this.state.inputVars.scrolled;\r\n        this.state.inputVars.camDistance = Math.min(Math.max(30, this.state.inputVars.camDistance), 100)\r\n        this.state.camera.position.z = this.state.center.z - (this.state.inputVars.camDistance * Math.cos(Math.PI / 4)) * Math.cos(this.state.inputVars.rotateX)\r\n        this.state.camera.position.x = this.state.center.x - (this.state.inputVars.camDistance * Math.cos(Math.PI / 4)) * Math.sin(this.state.inputVars.rotateX)\r\n        this.state.camera.position.y = this.state.inputVars.camDistance * Math.sin(Math.PI / 4) + 80\r\n        this.state.camera.lookAt(this.state.center)\r\n        this.state.inputVars.scrolled = 0\r\n        this.state.water.material.uniforms['time'].value += 1.0 / 60.0;\r\n        this.state.renderer.render(this.state.scene, this.state.camera);\r\n        this.state.stats.end();\r\n    }\r\n\r\n    mouseMoveEvent = (event) => {\r\n        if (this.state.inputVars.mousePressed) {\r\n            this.state.inputVars.rotateX += event.movementX / 100;\r\n            this.state.inputVars.rotateY += event.movementY / 100;\r\n        }\r\n    }\r\n\r\n    mouseDownEvent = (event) => {\r\n        this.state.inputVars.mousePressed = true;\r\n        //if (event.shiftKey) this.rayCasting((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1) #ENABLE SHIFT CLICK MOVE THE CAMERA CENTER\r\n    }\r\n\r\n\r\n    mouseUpEvent = (event) => {\r\n        this.state.inputVars.mousePressed = false;\r\n    }\r\n\r\n    mouseWheelEvent = (event) => {\r\n        this.state.inputVars.scrolled -= event.deltaY\r\n    }\r\n\r\n    windowResizeEvent = (event) => {\r\n        this.state.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.state.camera = new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 1, 20000);\r\n    }\r\n\r\n    keyDownEvent = (event) =>{\r\n        if(event.key==\"ArrowLeft\"){\r\n            if(this.state.currentCastle>0){\r\n                this.state.currentCastle--;\r\n            }else{\r\n                this.state.currentCastle = this.state.castles.length-1;\r\n            }\r\n            this.state.center = this.state.castles[this.state.currentCastle];\r\n        }else if(event.key==\"ArrowRight\"){\r\n            if(this.state.currentCastle<this.state.castles.length-1){\r\n                this.state.currentCastle++;\r\n            }else{\r\n                this.state.currentCastle = 0;\r\n            }\r\n            this.state.center = this.state.castles[this.state.currentCastle];\r\n        }\r\n    }\r\n\r\n    setupController() {\r\n        let domElement = this.state.renderer.domElement;\r\n        domElement.addEventListener(\"mousedown\", this.mouseDownEvent, false)\r\n        domElement.addEventListener(\"mouseup\", this.mouseUpEvent, false)\r\n        domElement.addEventListener(\"mousemove\", this.mouseMoveEvent, false)\r\n        domElement.addEventListener(\"wheel\", this.mouseWheelEvent, false)\r\n        window.addEventListener(\"keydown\",this.keyDownEvent);\r\n        window.addEventListener(\"resize\", this.windowResizeEvent)\r\n    }\r\n\r\n\r\n    rayCasting = (mouseX, mouseY) => {\r\n        let rayCaster = new THREE.Raycaster();\r\n        rayCaster.setFromCamera(new THREE.Vector2(mouseX, mouseY), this.state.camera);\r\n\r\n        let intersects = rayCaster.intersectObjects(this.state.scene.children);\r\n\r\n        if (intersects[0]) {\r\n            this.state.center = intersects[0].point;\r\n        }\r\n    }\r\n\r\n\r\n    loadMap = (data) => {\r\n        let map = data.data\r\n        let colors = map.colors;\r\n        for (let color of colors) {\r\n            let meshColor = color[0];\r\n            let meshArrays = color[1];\r\n            let geometry = new THREE.BufferGeometry()\r\n            geometry.setAttribute('position', new THREE.BufferAttribute(Float32Array.from(meshArrays[0]), 3))\r\n            geometry.setAttribute('normal', new THREE.BufferAttribute(Float32Array.from(meshArrays[1]), 3));\r\n            geometry.computeBoundingSphere()\r\n            let material = new THREE.MeshStandardMaterial({color: new THREE.Color(meshColor)});\r\n            let mesh = new THREE.Mesh(geometry, material);\r\n            this.state.scene.add(mesh);\r\n        }\r\n        let gltfLoader = new GLTFLoader();\r\n        gltfLoader.load(\"mapData/castle.glb\", model => {\r\n            let castlesPosition = map.castlePosition;\r\n            for (let position of castlesPosition) {\r\n                let positionModel = model.scene.clone(true);\r\n                let vectorPos = new THREE.Vector3(position[0], position[1], position[2]);\r\n                this.state.castles.push(vectorPos);\r\n                this.state.center = vectorPos;\r\n                this.state.currentCastle++;\r\n                positionModel.position.set(position[0], position[1], position[2])\r\n\r\n                positionModel.scale.set(0.5, 0.5, 0.5)\r\n\r\n                let PointLight = new THREE.PointLight(new Color(255, 255, 0), 0.005, 20)\r\n                PointLight.position.set(position[0], position[1] + 10, position[2])\r\n                this.state.scene.add(PointLight)\r\n                this.state.scene.add(positionModel)\r\n            }\r\n        }, undefined, function (error) {\r\n\r\n            console.error(error);\r\n        })\r\n\r\n        this.setupTrees(\"/mapData/forestTree.glb\",map.forestTrees,0.7,map.castlePosition);\r\n        this.setupTrees(\"/mapData/savannaTree.glb\",map.savannaTrees,0.3,map.castlePosition);\r\n        this.setupTrees(\"/mapData/bush.glb\",map.plainTrees,0.25,map.castlePosition);\r\n    }\r\n\r\n    setupTrees = (link,map,scale,castles) =>{\r\n        let gltfLoader = new GLTFLoader();\r\n        gltfLoader.load(link, gltf => {\r\n            let geometries = new Map();\r\n            let GLTFscene = gltf.scene;\r\n\r\n            for (let i = 0; i < GLTFscene.children.length; i++) {\r\n                geometries.set(GLTFscene.children[i].material.color, new Array())\r\n            }\r\n\r\n            for (let i = 0; i < map.length; i++) {\r\n                let valid = true;\r\n                castles.forEach(castle => {\r\n                    if((castle[0]-map[i].x<=10 && castle[0]-map[i].x>=-10) && (castle[2]-map[i].z<=10 && castle[2]-map[i].z>=-10)){\r\n                        valid = false;\r\n                    }\r\n                })\r\n                if(valid){\r\n                    let randRot = Math.random() * Math.PI * 2;\r\n                    for (let j = 0; j < GLTFscene.children.length; j++) {\r\n                        let childObject = GLTFscene.children[j];\r\n\r\n                        let childGeometry = new THREE.InstancedBufferGeometry();\r\n                        THREE.BufferGeometry.prototype.copy.call(childGeometry, childObject.geometry);\r\n\r\n                        let childMat = childObject.material;\r\n\r\n                        childGeometry.scale(childObject.scale.x,childObject.scale.y,childObject.scale.z)\r\n                        childGeometry.rotateX(childObject.rotation.x);\r\n                        childGeometry.rotateY(childObject.rotation.y);\r\n                        childGeometry.rotateZ(childObject.rotation.z);\r\n                        childGeometry.translate(childObject.position.x, childObject.position.y, childObject.position.z)\r\n                        childGeometry.scale(scale, scale, scale)\r\n\r\n                        childGeometry.rotateY(randRot)\r\n                        childGeometry.translate(map[i].x, map[i].y, map[i].z)\r\n                        geometries.get(childMat.color).push(childGeometry)\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let key of geometries.keys()) {\r\n                let geometryArray = geometries.get(key);\r\n                let geometry = BufferGeometryUtils.mergeBufferGeometries(geometryArray, false)\r\n                let mesh = new THREE.Mesh(geometry, new MeshStandardMaterial({color: key}))\r\n                this.state.scene.add(mesh)\r\n            }\r\n\r\n        }, undefined, error => {\r\n            console.error(error)\r\n        });\r\n    }\r\n\r\n    setupWater = () => {\r\n        let waterGeometry = new THREE.PlaneBufferGeometry(10000, 10000);\r\n\r\n        this.state.water = new Water(\r\n            waterGeometry,\r\n            {\r\n                textureWidth: 512,\r\n                textureHeight: 512,\r\n                waterNormals: new THREE.TextureLoader().load('mapData/waternormals.jpg', function (texture) {\r\n\r\n                    texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\r\n\r\n                }),\r\n                alpha: 5.0,\r\n                sunDirection: new THREE.Vector3(0, -1, 0),\r\n                sunColor: 0xffffff,\r\n                waterColor: 0x001e0f,\r\n                distortionScale: 3.7\r\n            }\r\n        );\r\n\r\n        this.state.water.rotation.x = -Math.PI / 2;\r\n        this.state.water.position.y = 80;\r\n\r\n        this.state.scene.add(this.state.water);\r\n    }\r\n    setupSky = () => {\r\n        this.state.sky = new Sky();\r\n        this.state.sky.scale.setScalar(450000);\r\n        this.state.scene.add(this.state.sky);\r\n\r\n        const skyUniforms = this.state.sky.material.uniforms;\r\n\r\n        skyUniforms['turbidity'].value = 5;\r\n        skyUniforms['rayleigh'].value = 0.3;\r\n        skyUniforms['mieCoefficient'].value = 0.005;\r\n        skyUniforms['mieDirectionalG'].value = 0.8;\r\n\r\n        this.state.sunParameters = {\r\n            inclination: 0,\r\n            azimuth: 0.205\r\n        };\r\n\r\n        this.state.pmremGenerator = new THREE.PMREMGenerator(this.state.renderer);\r\n\r\n        this.updateSun();\r\n    }\r\n\r\n    updateSun = () => {\r\n        const theta = Math.PI * (this.state.sunParameters.inclination - 0.5);\r\n        const phi = 2 * Math.PI * (this.state.sunParameters.azimuth - 0.5);\r\n\r\n        this.state.sun.x = Math.cos(phi);\r\n        this.state.sun.y = Math.sin(phi) * Math.sin(theta);\r\n        this.state.sun.z = Math.sin(phi) * Math.cos(theta);\r\n\r\n        this.state.sky.material.uniforms['sunPosition'].value.copy(this.state.sun);\r\n        this.state.water.material.uniforms['sunDirection'].value.copy(this.state.sun).normalize();\r\n\r\n        this.state.scene.environment = this.state.pmremGenerator.fromScene(this.state.sky).texture;\r\n\r\n    }\r\n\r\n    setupGui = () => {\r\n        const waterUniforms = this.state.water.material.uniforms;\r\n        let skyUniforms = this.state.sky.material.uniforms;\r\n\r\n        waterUniforms.size.value = 100;\r\n        const gui = new GUI()\r\n        const folderSky = gui.addFolder('Sky');\r\n        folderSky.add(this.state.sunParameters, 'inclination', 0, 0.5, 0.0001).onChange(this.updateSun);\r\n        folderSky.add(this.state.sunParameters, 'azimuth', 0, 1, 0.0001).onChange(this.updateSun);\r\n\r\n        folderSky.add(skyUniforms.turbidity, 'value', 0, 5, 0.01).onChange(this.updateSun).name('turbidity')\r\n        folderSky.add(skyUniforms.rayleigh, 'value', 0, 5, 0.01).onChange(this.updateSun).name('rayleigh')\r\n        folderSky.add(skyUniforms.mieCoefficient, 'value', 0, 5, 0.01).onChange(this.updateSun).name('mieCoefficient')\r\n        folderSky.add(skyUniforms.mieDirectionalG, 'value', 0, 5, 0.01).onChange(this.updateSun).name('mieDirectionalG')\r\n    }\r\n\r\n\r\n    reloadScene = () => {\r\n        Axios.get(\"api/graphics/map\").then(response => {\r\n            this.state.scene.clear();\r\n\r\n            this.loadMap(response);\r\n\r\n\r\n            this.setupWater();\r\n            this.setupSky();\r\n            this.setupGui();\r\n\r\n            this.mount.appendChild(this.state.renderer.domElement);\r\n            this.mount.appendChild(this.state.stats.dom)\r\n            this.state.stats.showPanel(0);\r\n\r\n            this.animate();\r\n        })\r\n    }\r\n\r\n    /**\r\n     * render a class's map\r\n     *\r\n     * @param displayClass the target class\r\n     */\r\n    renderMap = (displayClass) => {\r\n\r\n        if (this.mount) {\r\n            this.setupController();\r\n\r\n            this.reloadScene();\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div ref={ref => (this.mount = ref)}/>\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default MapView","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/overlay_components/chapters_overlay.js",[],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/quizModel.js",[],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/student_display.js",[],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/classes_display.js",[],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/search_display.js",[],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/default_display.js",[],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/adding_display.js",["130","131","132"],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/edit_display.js",["133","134","135"],"import React, {Component} from \"react\";\r\nimport {PopupMessage} from \"../../teacher_display_2.0\";\r\nimport {getAllClasses, regenerateMap, updateTheClass} from \"../../../../../model/classModel\";\r\nimport {\r\n    createStudent,\r\n    getAllStudents,\r\n    reg,\r\n    regeneratePassword, updateStudentFirstName, updateStudentlastName,\r\n    updateStudentlogin\r\n} from \"../../../../../model/studentModel\";\r\n\r\n\r\nexport class EditDisplay extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentStepScreen: <EditSelectStep openPopup={this.handleOpenPopup} previous={this.handlePrevious}\r\n                                               next={this.handleNext}/>\r\n        }\r\n\r\n    }\r\n\r\n    handleOpenPopup = (Object) => {\r\n        this.props.openPopup(Object)\r\n    }\r\n\r\n    handleNext = (nextStepDOMObject) => {\r\n        this.setState({\r\n            currentStepScreen: nextStepDOMObject\r\n        })\r\n    }\r\n\r\n    handlePrevious = (previousDomObject) => {\r\n        this.setState({\r\n            currentStepScreen: previousDomObject\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return <div className=\"teacher-default-dashboard-container\">\r\n\r\n            <div className=\"teacher-adding-step-container\">\r\n                {this.state.currentStepScreen}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n\r\nclass EditSelectStep extends Component {\r\n\r\n    // static variables\r\n    STUDENT_TEXT = \"Un élève\"\r\n    CLASS_TEXT = \"Une classe\"\r\n    CHAPTER_TEXT = \"Un Chapitre\"\r\n    QUESTION_TEXT = \"Une Question\"\r\n    QUIZ_TEXT = \"Un Quiz\"\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentChoice: \"\",\r\n            currentChoiceDOM: null,\r\n\r\n        }\r\n    }\r\n\r\n    handleConfirmChoice = () => {\r\n\r\n        switch (this.state.currentChoice) {\r\n            case this.STUDENT_TEXT:\r\n\r\n                this.props.next(<EditStudentStep openPopup={this.props.openPopup} closePopup={this.props.closePopup}\r\n                                                 next={this.props.next} previous={this.props.previous}/>)\r\n                break\r\n            case this.CLASS_TEXT:\r\n\r\n                this.props.next(<EditClassStep openPopup={this.props.openPopup} closePopup={this.props.closePopup}\r\n                                               next={this.props.next} previous={this.props.previous}/>)\r\n                break\r\n            case this.CHAPTER_TEXT:\r\n\r\n                break\r\n            case this.QUESTION_TEXT:\r\n\r\n\r\n                break\r\n            case this.QUIZ_TEXT:\r\n\r\n\r\n                break\r\n            default:\r\n\r\n                this.props.openPopup(<PopupMessage\r\n                    message=\"Aucune selection\"\r\n                    validText=\"OK\"\r\n                    validateCallback={() => {\r\n                        this.props.closePopup()\r\n                    }\r\n                    }\r\n\r\n                />)\r\n\r\n                break\r\n        }\r\n\r\n    }\r\n\r\n    handleSelectChoice = (event, text, id) => {\r\n        let domObject = document.getElementById(id);\r\n        if (!this.state.currentChoiceDOM) {\r\n\r\n            domObject.style.backgroundColor = \"var(--secondary_color)\"\r\n\r\n            this.setState({\r\n                currentChoiceDOM: domObject,\r\n                currentChoice: text\r\n            })\r\n        } else {\r\n            this.state.currentChoiceDOM.style.backgroundColor = \"var(--primary_color)\"\r\n            domObject.style.backgroundColor = \"var(--secondary_color)\"\r\n\r\n            this.setState({\r\n                currentChoiceDOM: domObject,\r\n                currentChoice: text\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div className=\"teacher-selection-container\">\r\n\r\n            <h1 className=\"teacher-add-choice-title\">Edition</h1>\r\n\r\n            <div className=\"teacher-selection-option-list\">\r\n                <SelectionChoice id=\"student\" onClick={this.handleSelectChoice} title={this.STUDENT_TEXT}/>\r\n                <SelectionChoice id=\"class\" onClick={this.handleSelectChoice} title={this.CLASS_TEXT}/>\r\n                <SelectionChoice id=\"chapter\" onClick={this.handleSelectChoice} title={this.CHAPTER_TEXT}/>\r\n                <SelectionChoice id=\"question\" onClick={this.handleSelectChoice} title={this.QUESTION_TEXT}/>\r\n                <SelectionChoice id=\"quiz\" onClick={this.handleSelectChoice} title={this.QUIZ_TEXT}/>\r\n\r\n            </div>\r\n\r\n            <button onClick={this.handleConfirmChoice} className=\"teacher-next-btn\">Suivant</button>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nclass SelectionChoice extends Component {\r\n\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(event, this.props.title, this.props.id)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div id={this.props.id} onClick={this.handleClick} className=\"teacher-selection-choice-container\">\r\n            <h1 className=\"teacher-selection-choice-text\">{this.props.title}</h1>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\n////////////////////////| EDIT STUDENT |//////////////////////////\r\n\r\nexport class EditStudentStep extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentStudent: null,\r\n            studentList: [],\r\n            currentClass: 0,\r\n            classesList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        getAllClasses().then(res => {\r\n            this.setState({\r\n                classesList: res.data.classes\r\n            })\r\n\r\n            getAllStudents(res.data.classes[0].classID).then(res => {\r\n\r\n                if (this.props.formCreate) {\r\n                    this.setState({\r\n                        studentList: res.data.students,\r\n                        currentClass: this.props.formCreate.theClass,\r\n                        currentStudent: this.props.formCreate.theStudent\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        studentList: res.data.students\r\n                    })\r\n                }\r\n\r\n\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    handleDisplayOverView = (theStudent) => {\r\n        this.setState({\r\n            currentStudent: theStudent\r\n        })\r\n\r\n    }\r\n\r\n    handleUpdateList = (event) => {\r\n\r\n        getAllStudents((event) ? event.target.value : this.state.currentClass).then(res => {\r\n\r\n            this.setState({\r\n                studentList: res.data.students,\r\n                currentClass: (event) ? event.target.value : this.state.currentClass\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    handleValidate = (event) => {\r\n\r\n        let valid = true;\r\n        let selectedClass = this.state.currentClass\r\n        let login = document.getElementById(\"select-login\").value\r\n        let name = document.getElementById(\"select-name\").value\r\n        let firstname = document.getElementById(\"select-firstname\").value\r\n\r\n        if (selectedClass === \"empty\") {\r\n            valid = false\r\n            //TODO custom message error\r\n            alert(\"Aucunne classe selectionné\")\r\n        }\r\n\r\n        if (login.length < 4) {\r\n            valid = false\r\n            //TODO custom message error\r\n            alert(\"Login - taille minimum de 4\")\r\n        }\r\n\r\n        if (name === \"\") {\r\n            valid = false\r\n            //TODO custom message error\r\n            alert(\"Nom - obligatoire\")\r\n        }\r\n\r\n        if (firstname === \"\") {\r\n            valid = false\r\n            //TODO custom message error\r\n            alert(\"Prénom - obligatoire\")\r\n        }\r\n\r\n\r\n        if (valid) {\r\n            if(this.props.theStudent.login !== this.state.login) updateStudentlogin(selectedClass, (event) ? event.target.value : this.state.currentClass, login).then((response) => {\r\n\r\n                console.log(response)\r\n\r\n            })\r\n            if(this.props.theStudent.lastname !== this.state.lastname) updateStudentlastName(selectedClass, (event) ? event.target.value : this.state.currentClass, name).then((response) => {\r\n\r\n                console.log(response)\r\n\r\n            })\r\n            if(this.props.theStudent.firstname !== this.state.firstname) updateStudentFirstName(selectedClass, (event) ? event.target.value : this.state.currentClass, firstname).then((response) => {\r\n                console.log(response)\r\n            })\r\n        }\r\n\r\n        //no reload\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleRegenerate = (event) => {\r\n\r\n        regeneratePassword(this.state.currentClass, this.state.currentStudent.data.login, this.state.currentStudent.data.lastname, this.state.currentStudent.data.firstname).then((res) => {\r\n            console.log(res)\r\n        })\r\n        //no reload\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"teacher-default-dashboard-container\">\r\n\r\n            <div className=\"teacher-class-list-editStudent-overview\">\r\n\r\n                <select onChange={this.handleUpdateList} className=\"teacher-student-creation-input\" id=\"selected-class\">\r\n                    {this.state.classesList.map((theClass, index) => {\r\n                        return <option key={index} value={theClass.classID}>{theClass.name}</option>\r\n                    })}\r\n                </select>\r\n\r\n                {(this.state.studentList.length > 0) ? this.state.studentList.map((theStudent, index) => {\r\n                    console.log(theStudent)\r\n                    return <StudentRow onClick={this.handleDisplayOverView} value={theStudent}\r\n                                       callbackOverView={this.handleDisplayOverView} key={index}/>\r\n                }) : <h1 className=\"teacher-student-list-none\">Aucun Elève</h1>}\r\n\r\n            </div>\r\n\r\n            <div className=\"teacher-class-editStudent-overview\">\r\n\r\n                {(this.state.currentStudent) ? <StudentEditOverview theStudent={this.state.currentStudent}/> :\r\n                    <h1 className=\"teacher-no-class\">Aucun élève selectionné</h1>}\r\n\r\n            </div>\r\n\r\n            <button onClick={this.handlePrevious} className=\"teacher-previous-editStudent-btn\">Précédent</button>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nclass StudentRow extends Component {\r\n\r\n\r\n    handleClick = () => {\r\n        this.props.onClick(this.props.value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div onClick={this.handleClick} className=\"teacher-class-row\">\r\n            <h1 className=\"teacher-class-row-title\">{this.props.value.lastname}</h1>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nclass StudentEditOverview extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            login: \"\",\r\n            lastname: \"\",\r\n            firstname: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            login: this.props.theStudent.login,\r\n            lastname: this.props.theStudent.lastname,\r\n            firstname: this.props.theStudent.firstname\r\n        })\r\n    }\r\n\r\n    handleOnChangeLogin = (event) => {\r\n        this.setState({\r\n            login: event.target.value\r\n        })\r\n    }\r\n\r\n    handleOnChangeName = (event) => {\r\n        this.setState({\r\n            lastname: event.target.value\r\n        })\r\n    }\r\n\r\n    handleOnChangeFirstname = (event) => {\r\n        this.setState({\r\n            firstname: event.target.value\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        this.setState({\r\n            login: nextProps.theStudent.login,\r\n            lastname: nextProps.theStudent.lastname,\r\n            firstname: nextProps.theStudent.firstname\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"teacher-edit-student-step\">\r\n\r\n            <form className=\"teacher-edit-creation-container\" onSubmit={this.handleValidate}>\r\n                <input onChange={this.handleOnChangeLogin} className=\"teacher-student-edit-input\" id=\"select-login\"\r\n                       placeholder=\"Login\" type=\"text\"\r\n                       value={this.state.login}/>\r\n                <input onChange={this.handleOnChangeName} className=\"teacher-student-edit-input\" id=\"select-name\"\r\n                       placeholder=\"Nom\" type=\"text\"\r\n                       value={this.state.lastname}/>\r\n                <input onChange={this.handleOnChangeFirstname} className=\"teacher-student-edit-input\"\r\n                       id=\"select-firstname\" placeholder=\"Prénom\" type=\"text\"\r\n                       value={this.state.firstname}/>\r\n                <button onClick={this.handleRegenerate} className=\"teacher-regenerate-btn\">Regénérer la mot de passe\r\n                </button>\r\n\r\n                <input className=\"teacher-student-creation-valid\" type=\"submit\" value=\"Valider\"/>\r\n            </form>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\n////////////////////////| EDIT CHAPTER |//////////////////////////\r\n\r\n////////////////////////| EDIT CLASS |//////////////////////////\r\n\r\nclass EditClassStep extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentClass: {name: \"\", grade: \"\"},\r\n            classesList: []\r\n        }\r\n        this.handleUpdateList()\r\n    }\r\n\r\n    handleValidate = (event) => {\r\n\r\n        let valid = true;\r\n        let name = document.getElementById(\"select-name\").value\r\n        let grade = document.getElementById(\"select-grade\").value\r\n\r\n\r\n        if (name === \"\") {\r\n            valid = false\r\n            //TODO custom message error\r\n            alert(\"Nom - obligatoire!\")\r\n        }\r\n\r\n        if (grade === \"\") {\r\n            valid = false\r\n            //TODO custom message error\r\n            alert(\"Niveau - obligatoire!\")\r\n        }\r\n\r\n\r\n        if (valid) {\r\n            console.log(this.state.currentClass,name,grade)\r\n            updateTheClass(this.state.currentClass, name, grade).then((res) => {\r\n                console.log(res)\r\n            })\r\n        }\r\n\r\n        //no reload\r\n        event.preventDefault();\r\n    }\r\n\r\n    handlePrevious = () => {\r\n        this.props.previous(<EditSelectStep previous={this.props.previous} next={this.props.next}/>)\r\n    }\r\n\r\n    handleRegenerate = (event) => {\r\n\r\n        regenerateMap(this.state.currentClass).then((res) => {\r\n            console.log(res)\r\n        })\r\n        //no reload\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleOnChange = (event) => {\r\n        this.state.classesList.forEach((theClass) => {\r\n            console.log(event.target.value)\r\n            if (theClass.classID === event.target.value) {\r\n                console.log(\"allo\")\r\n                this.setState({\r\n                    currentClass:{name: theClass.name, grade:theClass.grade}\r\n                })\r\n            }\r\n        })\r\n        //no reload\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleUpdateList = () => {\r\n\r\n        getAllClasses().then(res => {\r\n            this.setState({\r\n                classesList: res.data.classes,\r\n                currentClass: res.data.classes[0]\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    handleOnChangeName = (event) => {\r\n        this.setState({\r\n            currentClass:{name: event.target.value}\r\n        })\r\n    }\r\n\r\n    handleOnChangeGrade = (event) => {\r\n        this.setState({\r\n            currentClass:{grade: event.target.value}\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        this.setState({\r\n            currentClass:{name: nextProps.currentClass.name,grade: nextProps.currentClass.grade}\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"teacher-add-student-step\">\r\n\r\n            <form className=\"teacher-student-creation-container\" onSubmit={this.handleValidate}>\r\n\r\n                <select onChange={this.handleOnChange} className=\"teacher-student-creation-input\" id=\"selected-class\">\r\n                    {this.state.classesList.map((theClass, index) => {\r\n                        return <option key={index} value={theClass.classID}>{theClass.name}</option>\r\n                    })}\r\n                </select>\r\n\r\n                <input onChange={this.handleOnChangeName} className=\"teacher-student-creation-input\" id=\"select-name\" placeholder=\"Nom\" type=\"text\"\r\n                       value={this.state.currentClass.name}/>\r\n                <input onChange={this.handleOnChangeGrade} className=\"teacher-student-creation-input\" id=\"select-grade\" placeholder=\"Niveau\" type=\"text\"\r\n                       value={this.state.currentClass.grade}/>\r\n                <input onClick={this.handleValidate} className=\"teacher-student-creation-valid\" type=\"submit\"\r\n                       value=\"Valider\"/>\r\n                <button onClick={this.handleRegenerate} className=\"teacher-regenerate-btn\">Regénéré la carte</button>\r\n            </form>\r\n\r\n\r\n            <button onClick={this.handlePrevious} className=\"teacher-previous-btn\">Précédent</button>\r\n        </div>\r\n    }\r\n\r\n}\r\n","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/views/main_view/main_components/components/teacher_components/delete_display.js",["136","137","138"],"import {Component} from \"react\";\r\nimport {PopupMessage} from \"../../teacher_display_2.0\";\r\nimport {deleteClass, getAllClasses} from \"../../../../../model/classModel\";\r\nimport {getAllStudents,deleteTheStudents} from \"../../../../../model/studentModel\";\r\nimport {getAllChapter, deleteChapter} from \"../../../../../model/chapterModel\";\r\n\r\nexport class DeleteDisplay extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentStepScreen: <DeleteSelectStep openPopup={this.handleOpenPopup} previous={this.handlePrevious} next={this.handleNext}/>\r\n        }\r\n\r\n    }\r\n\r\n    handleOpenPopup = (Object) => {\r\n        this.props.openPopup(Object)\r\n    }\r\n\r\n    handleNext = (nextStepDOMObject) => {\r\n        this.setState({\r\n            currentStepScreen: nextStepDOMObject\r\n        })\r\n    }\r\n\r\n    handlePrevious = (previousDomObject) => {\r\n        this.setState({\r\n            currentStepScreen: previousDomObject\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return <div className=\"teacher-default-dashboard-container\">\r\n\r\n            <div className=\"teacher-adding-step-container\">\r\n                {this.state.currentStepScreen}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n\r\nclass DeleteSelectStep extends Component{\r\n\r\n    // static variables\r\n    STUDENT_TEXT = \"Un élève\"\r\n    CLASS_TEXT = \"Une classe\"\r\n    CHAPTER_TEXT = \"Un Chapitre\"\r\n    QUESTION_TEXT = \"Une Question\"\r\n    QUIZ_TEXT = \"Un Quiz\"\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentChoice: \"\",\r\n            currentChoiceDOM:null,\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleConfirmChoice = () => {\r\n\r\n        switch (this.state.currentChoice) {\r\n            case this.STUDENT_TEXT:\r\n\r\n                this.props.next(<DeleteStudentStep openPopup={this.props.openPopup} closePopup={this.props.closePopup} next={this.props.next} previous={this.props.previous}/>)\r\n                break\r\n            case this.CLASS_TEXT:\r\n\r\n                this.props.next(<DeleteClassStep openPopup={this.props.openPopup} closePopup={this.props.closePopup}  next={this.props.next} previous={this.props.previous} />)\r\n                break\r\n            case this.CHAPTER_TEXT:\r\n\r\n                this.props.next(<DeleteChapterStep openPopup={this.props.openPopup} closePopup={this.props.closePopup}  next={this.props.next} previous={this.props.previous} />)\r\n                break\r\n            case this.QUESTION_TEXT:\r\n\r\n\r\n                break\r\n            case this.QUIZ_TEXT:\r\n\r\n\r\n                break\r\n            default:\r\n\r\n                this.props.openPopup(<PopupMessage\r\n                    message=\"Aucune selection\"\r\n                    validText=\"OK\"\r\n                    validateCallback={()=>{\r\n                        this.props.closePopup()\r\n                    }\r\n                    }\r\n\r\n                />)\r\n\r\n                break\r\n        }\r\n\r\n    }\r\n\r\n    handleSelectChoice = (event, text,id) => {\r\n        let domObject = document.getElementById(id);\r\n        if(!this.state.currentChoiceDOM){\r\n\r\n            domObject.style.backgroundColor = \"var(--secondary_color)\"\r\n\r\n            this.setState({\r\n                currentChoiceDOM :domObject,\r\n                currentChoice: text\r\n            })\r\n        }else{\r\n            this.state.currentChoiceDOM.style.backgroundColor = \"var(--primary_color)\"\r\n            domObject.style.backgroundColor = \"var(--secondary_color)\"\r\n\r\n            this.setState({\r\n                currentChoiceDOM :domObject,\r\n                currentChoice: text\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return <div className=\"teacher-selection-container\">\r\n\r\n            <h1 className=\"teacher-add-choice-title\">Supprimer</h1>\r\n\r\n            <div className=\"teacher-selection-option-list\">\r\n                <SelectionChoice id=\"student\" onClick={this.handleSelectChoice} title={this.STUDENT_TEXT}  />\r\n                <SelectionChoice id=\"class\" onClick={this.handleSelectChoice} title={this.CLASS_TEXT} />\r\n                <SelectionChoice id=\"chapter\" onClick={this.handleSelectChoice} title={this.CHAPTER_TEXT} />\r\n                <SelectionChoice id=\"question\" onClick={this.handleSelectChoice} title={this.QUESTION_TEXT} />\r\n                <SelectionChoice id=\"quiz\" onClick={this.handleSelectChoice} title={this.QUIZ_TEXT} />\r\n\r\n            </div>\r\n\r\n            <button onClick={this.handleConfirmChoice} className=\"teacher-next-btn\" >Suivant</button>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nclass SelectionChoice extends Component{\r\n\r\n\r\n    handleClick = (event) =>{\r\n        this.props.onClick(event, this.props.title, this.props.id)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div id={this.props.id} onClick={this.handleClick} className=\"teacher-selection-choice-container\">\r\n            <h1 className=\"teacher-selection-choice-text\">{this.props.title}</h1>\r\n        </div>\r\n    }\r\n\r\n\r\n}\r\n\r\n///////////////////////| DELETE STUDENT |/////////////////////////\r\n\r\nexport class DeleteStudentStep extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentStudent: null,\r\n            studentList: [],\r\n            currentClass: 0,\r\n            classesList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        getAllClasses().then(res => {\r\n            this.setState({\r\n                classesList: res.data.classes\r\n            })\r\n\r\n            getAllStudents(res.data.classes[0].classID).then(res => {\r\n\r\n                if (this.props.formCreate) {\r\n                    this.setState({\r\n                        studentList: res.data.students,\r\n                        currentClass: this.props.formCreate.theClass.classID,\r\n                        currentStudent: this.props.formCreate.theStudent\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        studentList: res.data.students\r\n                    })\r\n                }\r\n\r\n\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    handleValidate = (event) => {\r\n\r\n        deleteTheStudents(this.state.currentStudent.userID,parseInt(this.state.currentClass)).then(res => {\r\n\r\n            getAllStudents(this.state.currentClass).then(res => {\r\n\r\n                this.setState({\r\n                    studentList: res.data.students\r\n                })\r\n\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    handleDisplayOverView = (theStudent) => {\r\n        this.setState({\r\n            currentStudent: theStudent\r\n        })\r\n    }\r\n\r\n    handleUpdateList = (event) => {\r\n\r\n        getAllStudents(event.target.value).then(res => {\r\n\r\n            this.setState({\r\n                studentList: res.data.students,\r\n                currentClass: event.target.value\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    handleSelect = (event, student) =>{\r\n        this.setState({\r\n            currentStudent: student\r\n        })\r\n    }\r\n\r\n    handlePrevious = () => {\r\n        this.props.previous(<DeleteSelectStep previous={this.props.previous} next={this.props.next} />)\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"teacher-default-dashboard-container\">\r\n\r\n            <div className=\"teacher-students-list-overview\">\r\n\r\n                <select onChange={this.handleUpdateList} className=\"teacher-student-creation-input\" id=\"selected-class\">\r\n                    {this.state.classesList.map((theClass, index) => {\r\n                        return <option key={index} value={theClass.classID}>{theClass.name}</option>\r\n                    })}\r\n                </select>\r\n\r\n                {(this.state.studentList.length > 0)?this.state.studentList.map( (theStudent, index) => {\r\n                    return <StudentRow onClick={this.handleSelect} value={theStudent} key={index}/>\r\n                }):<h1 className=\"teacher-student-list-none\">Aucun Elève</h1>}\r\n\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n\r\n            </div>\r\n            <button className=\"teacher-student-valid-delete-btn\" onClick={this.handleValidate} >Supprimer</button>\r\n\r\n            <button onClick={this.handlePrevious} className=\"teacher-previous-btn\" >Précédent</button>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nclass StudentRow extends Component {\r\n\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(event,this.props.value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div onClick={this.handleClick} className=\"teacher-student-row\">\r\n            <h1 className=\"teacher-student-row-title\">{this.props.value.lastname}</h1>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n///////////////////////| DELETE CLASS |///////////////////////////\r\n\r\nclass DeleteClassStep extends Component{\r\n\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentChoiceDOM:null,\r\n            currentClassID:-1,\r\n            classesList: []\r\n        }\r\n    }\r\n\r\n    handleGetClasses = () => {\r\n\r\n        getAllClasses().then((response) => {\r\n\r\n            this.setState({\r\n                classesList:response.data.classes\r\n            })\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetClasses()\r\n    }\r\n\r\n\r\n    handleSelectChoice = (event, classId,id) => {\r\n        let domObject = document.getElementById(id);\r\n        if(!this.state.currentChoiceDOM){\r\n\r\n            domObject.style.backgroundColor = \"var(--secondary_color)\"\r\n\r\n            this.setState({\r\n                currentChoiceDOM :domObject,\r\n                currentClassID: classId\r\n            })\r\n        }else{\r\n            this.state.currentChoiceDOM.style.backgroundColor = \"var(--primary_color)\"\r\n            domObject.style.backgroundColor = \"var(--secondary_color)\"\r\n\r\n            this.setState({\r\n                currentChoiceDOM :domObject,\r\n                currentClassID: classId\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleValidate = (event) => {\r\n\r\n        deleteClass(this.state.currentClassID).then(res => {\r\n            console.log(res)\r\n            this.handleGetClasses()\r\n        })\r\n\r\n    }\r\n\r\n    handlePrevious = () => {\r\n        this.props.previous(<DeleteSelectStep previous={this.props.previous} next={this.props.next} />)\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"teacher-add-student-step\">\r\n\r\n\r\n            <div className=\"teacher-class-list-delete\">\r\n\r\n                {this.state.classesList.map( (theClass, index) => {\r\n                    return <ClassesRow id={\"class\"+theClass.name+index} value={theClass} onClick={this.handleSelectChoice} key={index} theClass={theClass}/>\r\n                })}\r\n\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n\r\n            </div>\r\n\r\n            <button className=\"teacher-class-valid-delete-btn\" onClick={this.handleValidate} >Supprimer</button>\r\n\r\n\r\n\r\n            <button onClick={this.handlePrevious} className=\"teacher-previous-btn\" >Précédent</button>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nclass ClassesRow extends Component{\r\n\r\n    handleOpen = (event) => {\r\n        this.props.onClick(event,this.props.theClass.classID,this.props.id)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div id={this.props.id} onClick={this.handleOpen} className=\"teacher-class-row\">\r\n            <h1 className=\"teacher-class-row-title\">{this.props.theClass.name}</h1>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n///////////////////////| DELETE CHAPTER |/////////////////////////\r\n\r\nclass DeleteChapterStep extends Component{\r\n\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentChoiceDOM:null,\r\n            currentChapterID:-1,\r\n            chaptersList: []\r\n        }\r\n    }\r\n\r\n    handleGetChapters = () => {\r\n\r\n        getAllChapter().then((response) => {\r\n\r\n            console.log(response)\r\n            this.setState({\r\n                chaptersList:response.data.chapters\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetChapters()\r\n    }\r\n\r\n\r\n    handleSelectChoice = (event, chapterId,id) => {\r\n        let domObject = document.getElementById(id);\r\n        if(!this.state.currentChoiceDOM){\r\n\r\n            domObject.style.backgroundColor = \"var(--secondary_color)\"\r\n\r\n            this.setState({\r\n                currentChoiceDOM :domObject,\r\n                currentChapterID: chapterId\r\n            })\r\n        }else{\r\n            this.state.currentChoiceDOM.style.backgroundColor = \"var(--primary_color)\"\r\n            domObject.style.backgroundColor = \"var(--secondary_color)\"\r\n\r\n            this.setState({\r\n                currentChoiceDOM :domObject,\r\n                currentChapterID: chapterId\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleValidate = (event) => {\r\n\r\n        deleteChapter(this.state.currentChapterID).then(res => {\r\n            console.log(res)\r\n            this.handleGetChapters()\r\n        })\r\n\r\n    }\r\n\r\n    handlePrevious = () => {\r\n        this.props.previous(<DeleteSelectStep previous={this.props.previous} next={this.props.next} />)\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"teacher-add-student-step\">\r\n\r\n\r\n            <div className=\"teacher-chapter-list-delete\">\r\n\r\n                {this.state.chaptersList.map( (theChapter, index) => {\r\n                    return <ChaptersRow id={\"chapter\"+theChapter.name+index} value={theChapter} onClick={this.handleSelectChoice} key={index} theChapter={theChapter}/>\r\n                })}\r\n\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n\r\n            </div>\r\n\r\n            <button className=\"teacher-chapter-valid-delete-btn\" onClick={this.handleValidate} >Supprimer</button>\r\n\r\n\r\n\r\n            <button onClick={this.handlePrevious} className=\"teacher-previous-btn\" >Précédent</button>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n\r\nclass ChaptersRow extends Component{\r\n\r\n\r\n\r\n    handleOpen = (event) => {\r\n        this.props.onClick(event,this.props.theChapter.chapterID,this.props.id)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div id={this.props.id} onClick={this.handleOpen} className=\"teacher-chapter-row\">\r\n            <h1 className=\"teacher-chapter-row-title\">{this.props.theChapter.name}</h1>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\n///////////////////////| DELETE QUESTION |/////////////////////////\r\n/*\r\n\r\nexport class DeleteQuestionStep extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            currentQuestion: null,\r\n            questionList: [],\r\n            currentChapter: 0,\r\n            chapterList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        getAllChapter().then(res => {\r\n            this.setState({\r\n                chapterList: res.data.chapters\r\n            })\r\n\r\n            getAllQuestions(res.data.classes[0].classID).then(res => {\r\n\r\n                if (this.props.formCreate) {\r\n                    this.setState({\r\n                        studentList: res.data.students,\r\n                        currentClass: this.props.formCreate.theClass.classID,\r\n                        currentStudent: this.props.formCreate.theStudent\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        studentList: res.data.students\r\n                    })\r\n                }\r\n\r\n\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    handleValidate = (event) => {\r\n\r\n        deleteTheStudents(this.state.currentStudent.userID,parseInt(this.state.currentClass)).then(res => {\r\n\r\n            getAllStudents(this.state.currentClass).then(res => {\r\n\r\n                this.setState({\r\n                    studentList: res.data.students\r\n                })\r\n\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    handleDisplayOverView = (theStudent) => {\r\n        this.setState({\r\n            currentStudent: theStudent\r\n        })\r\n    }\r\n\r\n    handleUpdateList = (event) => {\r\n\r\n        getAllStudents(event.target.value).then(res => {\r\n\r\n            this.setState({\r\n                studentList: res.data.students,\r\n                currentClass: event.target.value\r\n            })\r\n\r\n        })\r\n\r\n    }\r\n\r\n    handleSelect = (event, student) =>{\r\n        this.setState({\r\n            currentStudent: student\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return <div className=\"teacher-default-dashboard-container\">\r\n\r\n            <div className=\"teacher-students-list-overview\">\r\n\r\n                <select onChange={this.handleUpdateList} className=\"teacher-student-creation-input\" id=\"selected-class\">\r\n                    {this.state.classesList.map((theClass, index) => {\r\n                        return <option key={index} value={theClass.classID}>{theClass.name}</option>\r\n                    })}\r\n                </select>\r\n\r\n                {(this.state.studentList.length > 0)?this.state.studentList.map( (theStudent, index) => {\r\n                    return <StudentRow onClick={this.handleSelect} value={theStudent} key={index}/>\r\n                }):<h1 className=\"teacher-student-list-none\">Aucun Elève</h1>}\r\n\r\n\r\n\r\n            </div>\r\n            <button className=\"teacher-student-valid-delete-btn\" onClick={this.handleValidate} >Supprimer</button>\r\n\r\n            <button onClick={this.handlePrevious} className=\"teacher-previous-btn\" >Précédent</button>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nclass QuestionRow extends Component {\r\n\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(event,this.props.value)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div onClick={this.handleClick} className=\"teacher-student-row\">\r\n            <h1 className=\"teacher-student-row-title\">{this.props.value.lastname}</h1>\r\n        </div>\r\n    }\r\n\r\n}*/","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/classModel.js",[],"/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/studentModel.js",["139"],"import Axios from \"axios\";\r\nimport {getAllClasses} from \"./classModel\";\r\n\r\n/**\r\n * get all the student of a class\r\n *\r\n * @return {Promise<AxiosResponse<any>>}\r\n */\r\nexport function getAllStudents(id){\r\n\r\n    return Axios.post('/api/classManagement/getStudents', {id})\r\n\r\n}\r\n\r\nexport function getAllTheStudents(){\r\n\r\n    return Axios.post('/api/classManagement/getAllStudents' )\r\n\r\n}\r\n\r\nexport function deleteTheStudents(studentId,classId){\r\n\r\n    console.log(classId,studentId)\r\n    return Axios.post('/api/classManagement/deleteStudent', {classId,studentId} )\r\n}\r\n\r\nexport function regeneratePassword(classId,login,lastname,firstname){\r\n\r\n    return Axios.post('/api/classManagement/regeneratePassword', {classID:classId, login:login, lastname:lastname, firstname:firstname} )\r\n\r\n}\r\n\r\nexport function updateStudentlogin(classId,studentId,newLogin){\r\n\r\n    return Axios.post('/api/classManagement/setLogin', {studentId:studentId, classId:classId,login:newLogin} )\r\n}\r\n\r\nexport function updateStudentlastName(classId,studentId,newLastName){\r\n\r\n    return Axios.post('/api/classManagement/setLogin', {studentId:studentId, classId:classId,lastname:newLastName} )\r\n}\r\n\r\nexport function updateStudentFirstName(classId,studentId,newFirstName){\r\n\r\n    return Axios.post('/api/classManagement/setLogin', {studentId:studentId, classId:classId,firstname:newFirstName} )\r\n}\r\n\r\n/**\r\n * create a student\r\n *\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nexport function createStudent(classId, login, lastname, firstname ){\r\n    return  Axios.post('/api/classManagement/createStudent', {classId, login, lastname, firstname})\r\n}","/mnt/c/Users/Tom/WebstormProjects/gameofmaths-groupe-b/Application/gameofmath-webapp/client/src/model/chapterModel.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":84,"column":17,"nodeType":"146","endLine":84,"endColumn":113},{"ruleId":"144","severity":1,"message":"145","line":133,"column":13,"nodeType":"146","endLine":133,"endColumn":81},{"ruleId":"144","severity":1,"message":"145","line":30,"column":17,"nodeType":"146","endLine":30,"endColumn":112},{"ruleId":"144","severity":1,"message":"145","line":137,"column":21,"nodeType":"146","endLine":137,"endColumn":108},{"ruleId":"144","severity":1,"message":"145","line":181,"column":17,"nodeType":"146","endLine":181,"endColumn":122},{"ruleId":"147","severity":1,"message":"148","line":182,"column":17,"nodeType":"146","endLine":182,"endColumn":73},{"ruleId":"144","severity":1,"message":"145","line":226,"column":13,"nodeType":"146","endLine":226,"endColumn":112},{"ruleId":"149","severity":1,"message":"150","line":36,"column":22,"nodeType":"151","messageId":"152","endLine":36,"endColumn":33},{"ruleId":"153","severity":1,"message":"154","line":65,"column":9,"nodeType":"155","endLine":65,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":66,"column":9,"nodeType":"155","endLine":66,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":67,"column":9,"nodeType":"155","endLine":67,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":68,"column":9,"nodeType":"155","endLine":68,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":69,"column":9,"nodeType":"155","endLine":69,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":71,"column":9,"nodeType":"155","endLine":71,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":72,"column":9,"nodeType":"155","endLine":72,"endColumn":51},{"ruleId":"153","severity":1,"message":"154","line":79,"column":13,"nodeType":"155","endLine":79,"endColumn":33},{"ruleId":"153","severity":1,"message":"154","line":80,"column":13,"nodeType":"155","endLine":80,"endColumn":33},{"ruleId":"153","severity":1,"message":"154","line":85,"column":9,"nodeType":"155","endLine":85,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":91,"column":9,"nodeType":"155","endLine":91,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":95,"column":9,"nodeType":"155","endLine":95,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":100,"column":9,"nodeType":"155","endLine":100,"endColumn":19},{"ruleId":"156","severity":1,"message":"157","line":104,"column":21,"nodeType":"158","messageId":"159","endLine":104,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":106,"column":17,"nodeType":"155","endLine":106,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":108,"column":17,"nodeType":"155","endLine":108,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":110,"column":13,"nodeType":"155","endLine":110,"endColumn":23},{"ruleId":"156","severity":1,"message":"157","line":111,"column":27,"nodeType":"158","messageId":"159","endLine":111,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":113,"column":17,"nodeType":"155","endLine":113,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":115,"column":17,"nodeType":"155","endLine":115,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":117,"column":13,"nodeType":"155","endLine":117,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":139,"column":13,"nodeType":"155","endLine":139,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":165,"column":17,"nodeType":"155","endLine":165,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":166,"column":17,"nodeType":"155","endLine":166,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":193,"column":70,"nodeType":"151","messageId":"152","endLine":193,"endColumn":81},{"ruleId":"153","severity":1,"message":"154","line":242,"column":9,"nodeType":"155","endLine":242,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":260,"column":9,"nodeType":"155","endLine":260,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":261,"column":9,"nodeType":"155","endLine":261,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":266,"column":9,"nodeType":"155","endLine":266,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":277,"column":9,"nodeType":"155","endLine":277,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":282,"column":9,"nodeType":"155","endLine":282,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":291,"column":9,"nodeType":"155","endLine":291,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":292,"column":9,"nodeType":"155","endLine":292,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":293,"column":9,"nodeType":"155","endLine":293,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":298,"column":9,"nodeType":"155","endLine":298,"endColumn":25},{"ruleId":"160","severity":1,"message":"161","line":3,"column":24,"nodeType":"162","messageId":"163","endLine":3,"endColumn":41},{"ruleId":"160","severity":1,"message":"164","line":5,"column":9,"nodeType":"162","messageId":"163","endLine":5,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":144,"column":13,"nodeType":"155","endLine":144,"endColumn":46},{"ruleId":"160","severity":1,"message":"165","line":5,"column":5,"nodeType":"162","messageId":"163","endLine":5,"endColumn":18},{"ruleId":"160","severity":1,"message":"166","line":7,"column":5,"nodeType":"162","messageId":"163","endLine":7,"endColumn":8},{"ruleId":"153","severity":1,"message":"154","line":128,"column":13,"nodeType":"155","endLine":128,"endColumn":46},{"ruleId":"153","severity":1,"message":"154","line":126,"column":13,"nodeType":"155","endLine":126,"endColumn":46},{"ruleId":"153","severity":1,"message":"154","line":358,"column":13,"nodeType":"155","endLine":358,"endColumn":46},{"ruleId":"153","severity":1,"message":"154","line":469,"column":13,"nodeType":"155","endLine":469,"endColumn":46},{"ruleId":"160","severity":1,"message":"167","line":2,"column":9,"nodeType":"162","messageId":"163","endLine":2,"endColumn":22},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'getAllTheStudents' is defined but never used.","Identifier","unusedVar","'StudentDisplay' is defined but never used.","'createStudent' is defined but never used.","'reg' is defined but never used.","'getAllClasses' is defined but never used.","no-global-assign","no-unsafe-negation"]